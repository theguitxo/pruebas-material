var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AlbumResultItem.html",[0,0.035,1,1.538]],["body/interfaces/AlbumResultItem.html",[0,0.068,1,2.338,2,0.662,3,0.158,4,0.158,5,0.142,6,1.535,7,1.246,8,1.298,9,0.142,10,0.266,11,2.884,12,2.894,13,2.884,14,3.029,15,3.213,16,1.643,17,3.029,18,0.645,19,2.884,20,2.884,21,2.884,22,3.029,23,0.696,24,0.3,25,0.015,26,2.651,27,2.699,28,2.651,29,1.624,30,0.338,31,1.76,32,1.064,33,0.326,34,2.241,35,0.81,36,0.843,37,1.47,38,1.079,39,1.47,40,0.662,41,1.198,42,1.605,43,1.409,44,1.535,45,0.985,46,1.605,47,2.441,48,1.535,49,1.605,50,1.535,51,1.68,52,2.127,53,1.534,54,2.037,55,2.064,56,1.605,57,1.68,58,1.605,59,1.605,60,2.037,61,2.224,62,1.409,63,2.037,64,1.409,65,1.605,66,0.01,67,0.01]],["title/interfaces/AlbumSearchResponse.html",[0,0.035,64,1.474]],["body/interfaces/AlbumSearchResponse.html",[0,0.069,1,2.223,2,0.753,3,0.18,4,0.18,5,0.162,6,1.745,7,1.417,8,1.475,9,0.162,10,0.29,11,1.91,12,2.427,13,1.91,14,2.54,15,3.042,16,1.378,17,2.54,18,0.541,19,1.91,20,1.91,21,1.91,22,2.54,23,0.69,24,0.268,25,0.015,26,2.497,28,2.497,29,1.627,30,0.384,31,1.88,32,1.21,33,0.332,34,2.394,35,0.921,36,0.958,37,1.672,38,1.177,39,1.672,40,0.753,41,1.362,42,1.825,43,1.602,44,1.745,45,1.12,46,1.825,47,2.608,48,1.745,49,1.825,50,1.745,51,1.91,52,2.321,53,1.673,54,2.223,55,2.204,56,1.825,57,1.91,58,1.825,59,1.825,60,2.223,61,2.427,62,1.602,63,2.662,64,2.131,65,2.906,66,0.011,67,0.011]],["title/interfaces/AlbumSearchResult.html",[0,0.035,63,1.538]],["body/interfaces/AlbumSearchResult.html",[0,0.069,1,2.658,2,0.75,3,0.18,4,0.18,5,0.161,6,1.739,7,1.412,8,1.47,9,0.161,10,0.289,11,1.903,12,2.421,13,1.903,14,2.534,15,3.037,16,1.374,17,2.534,18,0.54,19,1.903,20,1.903,21,1.903,22,2.534,23,0.69,24,0.268,25,0.015,26,2.493,28,2.493,29,1.626,30,0.383,31,1.877,32,1.206,33,0.332,34,2.39,35,0.918,36,0.955,37,1.666,38,1.175,39,1.666,40,0.75,41,1.357,42,1.818,43,1.597,44,1.739,45,1.116,46,1.818,47,2.776,48,1.739,49,1.818,50,1.739,51,1.903,52,2.316,53,1.67,54,2.218,55,2.346,56,1.818,57,1.903,58,1.818,59,1.818,60,2.218,61,3.022,62,1.597,63,2.493,64,1.597,65,1.818,66,0.011,67,0.011]],["title/components/AppComponent.html",[68,0.664,69,1.358]],["body/components/AppComponent.html",[3,0.154,4,0.154,5,0.139,9,0.139,10,0.261,18,0.487,24,0.139,25,0.015,30,0.642,33,0.154,35,0.79,36,0.821,38,1.06,66,0.01,67,0.01,68,0.996,69,2.203,70,1.84,71,1.374,72,1.374,73,1.374,74,3.167,75,1.717,76,3.977,77,5.102,78,2.721,79,3.805,80,5.518,81,1.318,82,2.63,83,2.63,84,3.377,85,1.767,86,5.879,87,5.879,88,3.891,89,2.902,90,5.879,91,2.116,92,1.767,93,5.102,94,2.09,95,5.102,96,4.583,97,1.507,98,6.363,99,1.507,100,3.653,101,5.102,102,3.155,103,5.102,104,2.518,105,6.363,106,5.102,107,1.038,108,1.507,109,4.583,110,3.167,111,5.102,112,5.102,113,2.09,114,3.653,115,4.424,116,3.643,117,3.167,118,0.821,119,1.717,120,2.418,121,2.848,122,3.653,123,2.418,124,3.653,125,2.609,126,3.653,127,0.854,128,2.848,129,3.977,130,2.965,131,3.977,132,1.374,133,1.918,134,1.918,135,1.374,136,2.393,137,1.374,138,1.374,139,1.265,140,1.374,141,1.318,142,1.84,143,1.374,144,1.265,145,1.318,146,1.374,147,1.374,148,1.265,149,1.374,150,1.265,151,1.038,152,1.374,153,1.265,154,1.215,155,1.918,156,1.318,157,1.374,158,1.265,159,1.374,160,1.215,161,1.167,162,1.374,163,1.215,164,1.84,165,1.265,166,1.374,167,1.215,168,1.374,169,1.265,170,1.318,171,1.374,172,1.215,173,1.374,174,1.265,175,1.374,176,1.374,177,1.265,178,1.63,179,1.265,180,1.265,181,1.374,182,1.374]],["title/components/ArtistAlbumDataComponent.html",[68,0.664,139,1.358]],["body/components/ArtistAlbumDataComponent.html",[1,1.642,3,0.203,4,0.088,5,0.079,7,1.111,9,0.079,10,0.171,18,0.501,23,0.562,24,0.256,25,0.016,26,1.311,27,1.082,28,1.879,29,1.322,30,0.53,33,0.088,35,1.695,36,1.419,38,0.694,40,0.739,45,1.1,54,1.642,56,2.246,58,2.246,59,2.246,66,0.006,67,0.006,68,0.709,69,0.721,70,1.205,71,0.783,72,0.783,73,0.783,78,1.879,81,0.751,82,2.422,83,2.422,85,1.157,89,2.066,91,0.692,92,1.157,94,1.369,97,0.987,99,2.074,107,1.36,108,1.806,113,2.148,118,0.468,119,0.978,127,0.487,132,0.783,133,1.256,134,1.256,135,0.783,136,1.801,137,0.783,138,0.783,139,1.658,140,0.783,141,0.751,142,1.205,143,0.783,144,0.721,145,0.751,146,0.783,147,0.783,148,0.721,149,0.783,150,0.721,151,1.188,152,0.783,153,0.721,154,0.692,155,1.256,156,0.751,157,0.783,158,0.721,159,0.783,160,0.692,161,0.665,162,0.783,163,0.692,164,1.205,165,1.938,166,0.783,167,0.692,168,0.783,169,0.721,170,0.751,171,0.783,172,0.692,173,0.783,174,0.721,175,0.783,176,0.783,177,0.721,178,1.789,179,0.721,180,0.721,181,0.783,182,0.783,183,5.068,184,6.153,185,5.532,186,1.805,187,1.431,188,1.967,189,3.628,190,4.184,191,3.628,192,3.628,193,3.341,194,3.341,195,5.244,196,4.184,197,5.244,198,4.184,199,5.244,200,2.251,201,3.341,202,2.019,203,4.789,204,4.789,205,2.386,206,3.628,207,4.789,208,2.082,209,1.431,210,2.082,211,2.082,212,3.341,213,2.082,214,0.783,215,0.665,216,2.082,217,2.082,218,1.449,219,2.082,220,4.201,221,2.082,222,2.082,223,2.082,224,2.588,225,2.082,226,2.082,227,2.082,228,2.082,229,2.082,230,1.287,231,2.77,232,1.287,233,1.805,234,1.805,235,1.623,236,1.805,237,1.805,238,1.487,239,1.378,240,2.082,241,4.184,242,2.082,243,2.082,244,2.082,245,2.082,246,1.805,247,2.082,248,4.789,249,2.082,250,2.082,251,2.082,252,2.082,253,2.082,254,2.082,255,2.082,256,2.082,257,2.082,258,2.082,259,2.082,260,1.21,261,2.082,262,2.082,263,2.082,264,2.082,265,2.082,266,4.184,267,4.184,268,2.082,269,4.184,270,3.341,271,2.082,272,2.082,273,2.082,274,2.082,275,2.082,276,3.341,277,3.341,278,3.341,279,3.341,280,3.341,281,2.784,282,4.789,283,3.341,284,3.341,285,4.854,286,2.631,287,4.125,288,3.341,289,3.341,290,3.341,291,1.833,292,3.341,293,2.386,294,3.341,295,3.341,296,2.897,297,3.341,298,3.341,299,3.733,300,2.784,301,3.341]],["title/interfaces/ArtistResultItem.html",[0,0.035,54,1.538]],["body/interfaces/ArtistResultItem.html",[0,0.068,1,2.161,2,0.721,3,0.173,4,0.173,5,0.155,6,1.673,7,1.358,8,1.414,9,0.155,10,0.282,11,1.831,12,2.359,13,1.831,14,2.469,15,2.99,16,1.339,17,3.122,18,0.526,19,1.831,20,1.831,21,1.831,22,2.469,23,0.69,24,0.29,25,0.015,26,2.617,27,2.862,28,2.732,29,1.651,30,0.368,31,1.84,32,1.16,33,0.33,34,2.343,35,0.883,36,0.918,37,1.602,38,1.144,39,1.602,40,0.721,41,1.305,42,1.749,43,1.536,44,1.673,45,1.073,46,1.749,47,2.553,48,1.673,49,1.749,50,1.673,51,1.831,52,2.256,53,1.627,54,2.445,55,2.31,56,2.856,57,1.831,58,2.856,59,2.856,60,2.161,61,2.359,62,1.536,63,2.161,64,1.536,65,1.749,66,0.01,67,0.01]],["title/interfaces/ArtistResultItemBase.html",[0,0.035,26,1.538]],["body/interfaces/ArtistResultItemBase.html",[0,0.068,1,2.132,2,0.707,3,0.169,4,0.169,5,0.152,6,1.64,7,1.332,8,1.386,9,0.152,10,0.278,11,1.795,12,2.327,13,1.795,14,3.101,15,3.271,16,1.682,17,2.436,18,0.66,19,1.795,20,1.795,21,1.795,22,3.101,23,0.696,24,0.299,25,0.015,26,2.596,27,2.824,28,2.42,29,1.605,30,0.361,31,1.822,32,1.137,33,0.329,34,2.32,35,0.866,36,0.9,37,1.571,38,1.129,39,1.571,40,0.707,41,1.279,42,1.715,43,1.506,44,1.64,45,1.052,46,1.715,47,2.527,48,1.64,49,1.715,50,1.64,51,1.795,52,2.226,53,1.605,54,2.132,55,2.136,56,1.715,57,1.795,58,1.715,59,1.715,60,2.132,61,2.327,62,1.506,63,2.132,64,1.506,65,1.715,66,0.01,67,0.01]],["title/interfaces/ArtistSearchResponse.html",[0,0.035,62,1.474]],["body/interfaces/ArtistSearchResponse.html",[0,0.069,1,2.223,2,0.753,3,0.18,4,0.18,5,0.162,6,1.745,7,1.417,8,1.475,9,0.162,10,0.29,11,1.91,12,3.025,13,1.91,14,2.54,15,3.042,16,1.378,17,2.54,18,0.541,19,1.91,20,1.91,21,1.91,22,2.54,23,0.69,24,0.268,25,0.015,26,2.497,28,2.497,29,1.627,30,0.384,31,1.88,32,1.21,33,0.332,34,2.394,35,0.921,36,0.958,37,1.672,38,1.177,39,1.672,40,0.753,41,1.362,42,1.825,43,1.602,44,1.745,45,1.12,46,1.825,47,2.608,48,1.745,49,1.825,50,1.745,51,1.91,52,2.321,53,1.673,54,2.223,55,2.204,56,1.825,57,1.91,58,1.825,59,1.825,60,2.662,61,2.427,62,2.131,63,2.223,64,1.602,65,1.825,66,0.011,67,0.011]],["title/interfaces/ArtistSearchResult.html",[0,0.035,60,1.538]],["body/interfaces/ArtistSearchResult.html",[0,0.069,1,2.218,2,0.75,3,0.18,4,0.18,5,0.161,6,1.739,7,1.412,8,1.47,9,0.161,10,0.289,11,1.903,12,2.421,13,1.903,14,2.534,15,3.037,16,1.374,17,2.534,18,0.54,19,1.903,20,1.903,21,1.903,22,2.534,23,0.69,24,0.268,25,0.015,26,2.493,28,2.493,29,1.626,30,0.383,31,1.877,32,1.206,33,0.332,34,2.39,35,0.918,36,0.955,37,1.666,38,1.175,39,1.666,40,0.75,41,1.357,42,1.818,43,1.597,44,1.739,45,1.116,46,1.818,47,2.776,48,1.739,49,1.818,50,1.739,51,1.903,52,2.316,53,1.67,54,2.658,55,2.346,56,1.818,57,1.903,58,1.818,59,1.818,60,2.493,61,3.022,62,1.597,63,2.218,64,1.597,65,1.818,66,0.011,67,0.011]],["title/injectables/BreakpointService.html",[302,1.414,303,2.279]],["body/injectables/BreakpointService.html",[3,0.188,4,0.188,5,0.169,9,0.169,10,0.298,24,0.169,25,0.015,30,0.586,33,0.188,66,0.011,67,0.011,75,2.089,78,2.707,84,2.943,97,1.721,99,1.92,102,3.604,104,3.406,107,1.655,113,2.387,118,1,127,1.039,130,3.387,202,2.345,209,1.904,287,3.387,300,4.01,302,2.102,303,3.387,304,2.31,305,3.855,306,4.567,307,3.785,308,5.827,309,4.161,310,7.163,311,5.053,312,5.827,313,5.827,314,2.784,315,7.35,316,6.899,317,2.934,318,5.827,319,4.161,320,4.446,321,3.604,322,4.927,323,5.827,324,5.827,325,4.267,326,6.899,327,6.899,328,4.02,329,5.827,330,5.827,331,4.446,332,1.604,333,2.943,334,2.31,335,2.584,336,5.827,337,4.446,338,2.195,339,4.446,340,4.446,341,4.446]],["title/injectables/CacheService.html",[302,1.414,342,2.8]],["body/injectables/CacheService.html",[3,0.139,4,0.139,5,0.125,9,0.125,10,0.243,18,0.53,23,0.635,24,0.262,25,0.015,27,2.887,29,1.529,30,0.428,33,0.139,40,0.582,41,1.515,45,1.762,53,2.088,66,0.009,67,0.009,75,2.856,78,3.076,79,4.2,84,2.181,97,1.401,99,1.795,102,3.982,104,3.31,107,1.726,108,1.795,118,0.741,127,0.771,151,2.008,202,2.004,214,2.089,215,1.775,218,1.141,300,3.229,302,1.711,304,1.713,306,3.139,307,2.602,309,3.387,314,2.379,321,2.933,333,4.022,335,1.915,338,1.627,342,3.387,343,2.857,344,4.742,345,6.439,346,4.11,347,5.882,348,4.995,349,4.742,350,5.556,351,5.556,352,4.742,353,3.295,354,4.742,355,4.742,356,4.112,357,4.737,358,3.295,359,3.295,360,4.331,361,4.742,362,6.705,363,4.68,364,4.331,365,4.339,366,3.387,367,4.817,368,3.229,369,4.742,370,3.295,371,3.295,372,4.112,373,4.742,374,1.861,375,3.295,376,4.742,377,3.387,378,4.742,379,3.697,380,2.181,381,4.022,382,5.269,383,2.353,384,2.857,385,3.295,386,3.295,387,3.295,388,3.295]],["title/components/CatDammingsHistoricChartComponent.html",[68,0.664,144,1.358]],["body/components/CatDammingsHistoricChartComponent.html",[3,0.146,4,0.146,5,0.131,9,0.131,10,0.25,18,0.467,24,0.235,25,0.015,30,0.614,33,0.146,35,0.744,36,0.774,38,1.017,40,0.608,66,0.009,67,0.009,68,0.965,69,1.192,70,1.765,71,1.295,72,1.295,73,1.295,81,1.242,82,2.612,83,2.612,85,1.694,91,1.145,92,1.694,94,2.005,97,1.445,99,1.934,107,0.978,108,1.445,113,1.411,118,0.774,127,0.805,132,1.295,133,1.84,134,1.84,135,1.295,136,2.331,137,1.295,138,1.295,139,1.192,140,1.295,141,1.242,142,1.765,143,1.295,144,2.147,145,2.054,146,2.632,147,1.295,148,1.192,149,1.295,150,1.192,151,1.86,152,1.295,153,1.192,154,1.145,155,1.84,156,1.242,157,1.295,158,1.192,159,1.295,160,1.145,161,1.1,162,1.295,163,1.145,164,1.765,165,1.192,166,1.295,167,2.062,168,1.295,169,1.192,170,1.242,171,1.295,172,1.145,173,1.295,174,1.192,175,1.295,176,1.295,177,1.192,178,1.564,179,1.192,180,1.192,181,1.295,182,1.295,187,2.096,188,2.675,200,2.913,218,1.192,220,4.065,232,2.129,332,1.242,389,4.859,390,5.9,391,5.9,392,2.986,393,3.495,394,3.495,395,4.893,396,5.693,397,4.893,398,4.893,399,5.693,400,5.693,401,3.123,402,3.443,403,5.693,404,3.443,405,5.693,406,3.443,407,2.959,408,3.815,409,3.443,410,3.443,411,2.459,412,2.684,413,2.279,414,2.986,415,2.986,416,2.986,417,2.986,418,2.279,419,2.684,420,2.459,421,1.7,422,2.986,423,2.459,424,3.443,425,3.443,426,3.443,427,2.684,428,2.986,429,2.684,430,2.986,431,3.443,432,3.443,433,3.443,434,3.443,435,3.443,436,3.443,437,3.443,438,3.443,439,3.443,440,3.443,441,3.443,442,3.443,443,3.443,444,3.443,445,3.443,446,4.893,447,3.443,448,2.986,449,3.443,450,3.443,451,3.443]],["title/injectables/CatDammingsService.html",[302,1.414,452,3.056]],["body/injectables/CatDammingsService.html",[3,0.112,4,0.112,5,0.101,9,0.101,10,0.207,16,0.645,18,0.562,23,0.415,24,0.268,25,0.015,27,1.378,30,0.559,33,0.112,40,1.039,45,1.285,53,0.783,66,0.008,67,0.008,97,1.192,99,2.197,107,1.552,108,1.614,118,0.596,127,0.62,151,1.147,202,2.836,214,2.055,215,1.746,218,2.036,260,3.418,291,4.136,302,1.456,304,1.378,314,3.228,317,2.003,328,3.637,332,0.957,334,1.378,335,1.541,338,3.18,348,3.236,374,2.767,380,1.755,420,1.894,421,1.309,422,2.3,452,3.147,453,5.839,454,2.3,455,4.889,456,4.889,457,4.889,458,4.889,459,4.739,460,4.038,461,4.038,462,4.038,463,4.038,464,3.501,465,6.801,466,6.801,467,4.099,468,5.021,469,2.652,470,2.652,471,2.652,472,4.889,473,3.716,474,3.348,475,2.652,476,4.038,477,4.038,478,2.652,479,4.038,480,5.881,481,5.465,482,2.652,483,4.038,484,2.652,485,5.897,486,5.756,487,2.652,488,2.652,489,2.652,490,2.652,491,3.491,492,2.652,493,4.038,494,4.038,495,2.652,496,2.652,497,2.652,498,2.652,499,2.652,500,2.652,501,2.652,502,2.652,503,2.652,504,2.652,505,2.067,506,2.652,507,4.889,508,2.3,509,2.067,510,2.652,511,2.541,512,2.652,513,2.652,514,2.652,515,2.652,516,3.501,517,1.894,518,2.652,519,1.541,520,2.652,521,2.652,522,2.652,523,2.3,524,3.26,525,2.652,526,2.652,527,2.652,528,2.652,529,2.652,530,2.652,531,2.652,532,4.038,533,6.441,534,2.652,535,1.541,536,4.889,537,2.652,538,4.038,539,2.652,540,2.652,541,2.652,542,2.652,543,2.652,544,2.652,545,2.652,546,4.038,547,2.652,548,4.038,549,2.652,550,2.652,551,2.652,552,2.652]],["title/components/CatPopulationComponent.html",[68,0.664,148,1.358]],["body/components/CatPopulationComponent.html",[3,0.059,4,0.059,5,0.053,9,0.053,10,0.123,16,0.585,18,0.402,23,0.441,24,0.248,25,0.016,29,0.911,30,0.615,31,0.71,32,0.398,33,0.059,35,0.303,36,0.315,38,0.5,40,1.077,41,0.768,66,0.004,67,0.004,68,0.535,69,0.485,70,0.867,71,0.527,72,0.527,73,0.527,78,1.469,79,2.054,81,0.506,82,2.223,83,2.223,85,0.833,89,1.559,91,0.466,92,0.833,94,0.985,97,0.71,99,2.092,107,1.397,108,1.533,110,1.215,113,2.707,117,1.215,118,0.315,119,0.659,127,0.328,132,0.527,133,0.904,134,0.904,135,0.527,136,1.408,137,0.527,138,0.527,139,0.485,140,0.527,141,0.506,142,1.872,143,0.527,144,0.485,145,0.506,146,0.527,147,0.527,148,1.297,149,0.527,150,0.485,151,1.197,152,0.527,153,0.485,154,0.466,155,0.904,156,0.506,157,0.527,158,0.485,159,0.527,160,0.466,161,0.448,162,0.527,163,0.466,164,0.867,165,0.485,166,0.527,167,0.466,168,0.527,169,1.297,170,0.506,171,0.527,172,0.466,173,0.527,174,0.485,175,0.527,176,0.527,177,0.485,178,0.768,179,0.485,180,0.485,181,0.527,182,0.527,187,1.03,188,1.484,189,4.5,200,1.76,202,2.571,209,1.969,214,1.187,215,1.009,218,1.459,224,4.322,230,0.867,232,3.478,260,2.176,281,3.269,285,5.165,286,2.865,287,4.062,303,2.673,314,2.83,317,1.294,332,0.506,334,0.728,338,2.428,346,3.269,366,2.674,374,0.943,389,5.089,393,1.717,394,1.717,411,1.001,420,2.255,427,1.093,468,1.093,519,0.815,523,1.215,524,1.76,553,6.179,554,1.215,555,2.085,556,4.017,557,2.085,558,2.462,559,3.158,560,3.158,561,2.255,562,2.255,563,2.255,564,2.462,565,2.255,566,3.158,567,3.158,568,3.158,569,2.405,570,2.405,571,3.284,572,3.158,573,3.158,574,3.158,575,3.987,576,3.158,577,3.044,578,4.598,579,3.834,580,3.158,581,3.158,582,4.214,583,3.158,584,3.158,585,4.214,586,2.405,587,3.158,588,3.744,589,2.405,590,3.247,591,2.919,592,2.405,593,2.405,594,1.402,595,3.462,596,1.402,597,3.744,598,1.402,599,2.09,600,1.402,601,2.405,602,3.744,603,1.402,604,1.402,605,1.402,606,1.402,607,1.402,608,1.402,609,3.009,610,1.402,611,1.402,612,1.402,613,1.402,614,1.402,615,1.402,616,1.402,617,1.874,618,1.402,619,1.402,620,1.402,621,1.402,622,2.462,623,1.402,624,3.158,625,2.405,626,1.402,627,1.402,628,1.402,629,2.405,630,1.215,631,1.402,632,1.874,633,1.093,634,1.093,635,2.255,636,1.402,637,1.001,638,0.928,639,1.402,640,1.001,641,1.093,642,1.402,643,1.402,644,1.093,645,1.215,646,1.001,647,0.867,648,1.001,649,0.928,650,1.001,651,1.319,652,1.001,653,1.402,654,1.592,655,1.001,656,1.215,657,1.215,658,1.402,659,1.093,660,1.402,661,1.093,662,1.402,663,1.402,664,1.402,665,1.402,666,1.402,667,1.402,668,1.215,669,1.215,670,1.402,671,1.402,672,1.093,673,1.093,674,1.402,675,1.402,676,1.093,677,1.215,678,1.402,679,2.405,680,1.402,681,1.717,682,1.717,683,1.402,684,1.402,685,1.215,686,1.402,687,2.405,688,1.402,689,1.402,690,1.402,691,1.402,692,1.402,693,1.402,694,1.402,695,1.402,696,1.402,697,1.402,698,2.085,699,2.462,700,1.402,701,1.402,702,2.085,703,1.093,704,1.402,705,1.093,706,6.095,707,1.402,708,1.402,709,1.402,710,2.405,711,1.402,712,3.158,713,5.957,714,1.402,715,1.402,716,2.405,717,1.402,718,1.402,719,2.405,720,1.402,721,1.402,722,1.093,723,1.402,724,1.402,725,1.402,726,1.402,727,1.402,728,1.402,729,1.402,730,1.402,731,1.402,732,1.402,733,1.402,734,1.402,735,1.402,736,1.402,737,1.402,738,1.874,739,1.215,740,1.402,741,1.402,742,1.093,743,1.093,744,1.093,745,1.093,746,1.402,747,2.405,748,1.215,749,1.402,750,1.402,751,1.402,752,1.402,753,5.19,754,1.402,755,1.215,756,1.402,757,1.402,758,1.402,759,1.402,760,1.402,761,1.402,762,3.158,763,1.402,764,1.402,765,1.402,766,1.402,767,1.402,768,2.405,769,2.405,770,4.877,771,4.598,772,5.19,773,3.247,774,2.405,775,2.919,776,2.405,777,2.405,778,3.744,779,2.405,780,2.405,781,2.405,782,2.085,783,2.405,784,2.405,785,2.405,786,2.405,787,3.744,788,2.085,789,2.405,790,2.405,791,2.405,792,1.874]],["title/injectables/CatPopulationService.html",[302,1.414,571,2.8]],["body/injectables/CatPopulationService.html",[3,0.155,4,0.155,5,0.139,9,0.139,10,0.262,16,1.245,18,0.489,23,0.57,24,0.255,25,0.015,30,0.627,33,0.155,40,0.905,66,0.01,67,0.01,97,1.513,99,2.106,107,1.675,113,2.099,118,0.826,127,0.859,202,2.752,214,1.926,215,1.637,218,1.774,302,1.848,304,1.91,314,3.164,317,2.416,328,4.149,332,1.326,333,3.904,334,1.91,335,2.136,338,2.911,374,2.632,380,2.432,420,3.658,453,5.669,468,2.865,491,4.962,517,2.624,524,3.266,571,3.658,595,3.428,651,2.016,654,2.432,655,2.624,656,3.186,657,3.186,702,4.442,738,3.993,755,4.442,793,3.186,794,5.898,795,5.898,796,5.123,797,5.123,798,6.38,799,3.675,800,5.123,801,4.297,802,3.675,803,5.123,804,3.675,805,3.675,806,3.675,807,5.123,808,5.123,809,3.675,810,5.123,811,5.123,812,3.675,813,3.186,814,2.865,815,2.865,816,3.186,817,3.186,818,4.442,819,4.556,820,3.675,821,3.675,822,5.532,823,5.123,824,3.675,825,3.675,826,3.675,827,3.675,828,3.675,829,3.675,830,5.123,831,3.675,832,5.123,833,3.658,834,3.658,835,5.123,836,3.658,837,5.123,838,3.675,839,3.675,840,3.675,841,3.675]],["title/injectables/CustomPaginatorIntl.html",[302,1.414,842,2.8]],["body/injectables/CustomPaginatorIntl.html",[3,0.128,4,0.128,5,0.115,9,0.115,10,0.228,18,0.289,23,0.572,24,0.255,25,0.015,29,1.59,30,0.477,33,0.128,40,1.15,52,1.825,61,2.787,66,0.008,67,0.008,75,2.094,76,3.472,78,3.086,79,3.201,97,1.316,99,1.987,104,3.752,107,1.265,116,3.181,118,0.68,127,0.707,130,2.589,131,3.472,170,1.908,187,1.295,214,1.137,215,0.966,218,2.253,286,1.421,293,3.181,300,2.589,302,1.607,304,1.572,307,4.111,321,2.755,334,1.572,338,2.199,368,3.391,374,1.748,377,3.181,381,3.501,383,3.181,524,1.421,775,4.548,842,3.181,843,5.987,844,5.382,845,2.622,846,4.455,847,4.455,848,4.455,849,4.167,850,4.455,851,5.289,852,5.289,853,5.289,854,5.289,855,5.289,856,5.289,857,4.455,858,4.455,859,4.442,860,6.22,861,3.024,862,5.841,863,5.835,864,4.647,865,5.835,866,4.167,867,4.455,868,5.674,869,3.862,870,3.862,871,3.862,872,4.455,873,5.245,874,3.024,875,4.455,876,3.862,877,4.455,878,4.455,879,4.455,880,4.455,881,4.455,882,5.835,883,3.024,884,6.905,885,3.024,886,5.835,887,3.024,888,3.024,889,5.059,890,3.024,891,3.862,892,2.622,893,3.501,894,4.455,895,3.024]],["title/interfaces/DammingsInfoItem.html",[0,0.035,511,2.037]],["body/interfaces/DammingsInfoItem.html",[0,0.067,2,0.881,3,0.211,4,0.211,5,0.189,9,0.189,10,0.321,16,1.751,18,0.476,23,0.692,24,0.26,25,0.015,30,0.45,31,2.027,32,1.416,33,0.32,53,1.473,55,2.377,66,0.012,67,0.012,291,4.306,407,2.592,421,2.462,467,2.898,473,3.567,474,2.592,511,3.26,535,4.314,896,2.136,897,2.898,898,3.88,899,3.88,900,3.88,901,3.88,902,3.88,903,2.736,904,3.442]],["title/interfaces/DammingsInfoResponse.html",[0,0.035,473,2.037]],["body/interfaces/DammingsInfoResponse.html",[0,0.066,2,0.86,3,0.206,4,0.206,5,0.185,9,0.185,10,0.316,16,1.184,18,0.465,23,0.697,24,0.28,25,0.015,30,0.439,31,2.005,32,1.383,33,0.318,53,1.438,55,2.139,66,0.012,67,0.012,291,3.917,407,2.53,421,2.403,467,2.829,473,3.528,474,2.53,511,2.53,535,3.591,896,2.085,897,2.829,898,4.557,899,4.557,900,4.557,901,4.557,902,4.557,903,2.671,904,3.39]],["title/components/DataNotFoundComponent.html",[68,0.664,150,1.358]],["body/components/DataNotFoundComponent.html",[3,0.187,4,0.187,5,0.168,18,0.554,25,0.015,30,0.523,33,0.187,35,0.954,36,0.992,38,1.205,66,0.011,67,0.011,68,1.098,69,1.528,70,2.092,71,1.66,72,1.66,73,1.66,81,1.592,82,2.683,83,2.683,85,2.008,88,4.288,91,1.468,92,2.008,94,2.376,118,0.992,120,2.921,127,1.032,132,1.66,133,2.181,134,2.181,135,1.66,136,2.587,137,1.66,138,1.66,139,1.528,140,1.66,141,1.592,142,2.092,143,1.66,144,1.528,145,1.592,146,1.66,147,1.66,148,1.528,149,1.66,150,2.382,151,2.124,152,1.66,153,1.528,154,1.468,155,2.181,156,1.592,157,1.66,158,1.528,159,1.66,160,1.468,161,1.41,162,1.66,163,1.468,164,2.092,165,1.528,166,1.66,167,1.468,168,1.66,169,1.528,170,1.592,171,1.66,172,1.468,173,1.66,174,1.528,175,1.66,176,1.66,177,1.528,178,1.853,179,1.528,180,1.528,181,1.66,182,1.66,360,4.521,383,4.142,905,3.827,906,3.152,907,3.827,908,5.8,909,5.8,910,5.8,911,5.8,912,5.8,913,5.8]],["title/components/DisneyAPIComponent.html",[68,0.664,153,1.358]],["body/components/DisneyAPIComponent.html",[3,0.066,4,0.066,5,0.059,9,0.059,10,0.135,16,0.64,18,0.648,23,0.577,24,0.271,25,0.016,27,1.367,29,1.267,30,0.618,33,0.066,35,0.337,36,0.35,38,0.834,40,1.091,41,1.091,44,1.078,45,1.055,53,0.46,66,0.005,67,0.005,68,0.579,69,0.539,70,0.949,71,0.586,72,0.586,73,0.586,78,1.909,81,0.562,82,2.28,83,2.28,85,0.911,88,2.261,89,1.686,91,0.518,92,0.911,94,1.078,97,0.777,99,2.176,107,1.664,108,2.044,113,0.638,118,0.35,119,0.732,120,1.031,127,0.364,132,0.586,133,0.989,134,1.509,135,0.586,136,1.509,137,0.586,138,0.586,139,0.539,140,0.586,141,0.562,142,0.949,143,0.586,144,0.539,145,0.562,146,0.586,147,0.586,148,0.539,149,0.586,150,1.39,151,0.97,152,0.586,153,1.39,154,1.722,155,0.989,156,0.562,157,0.586,158,0.539,159,0.586,160,0.518,161,0.498,162,0.586,163,0.875,164,0.949,165,1.183,166,0.586,167,0.518,168,0.586,169,1.39,170,0.562,171,0.586,172,1.335,173,0.586,174,1.39,175,0.586,176,0.586,177,0.539,178,0.841,179,0.539,180,0.539,181,0.586,182,0.586,187,1.127,188,1.605,191,2.961,192,2.961,200,1.886,202,2.519,209,1.719,214,1.686,215,1.433,218,1.885,230,0.964,232,2.112,233,1.351,234,1.351,260,2.333,281,2.828,286,0.732,299,2.051,303,2.828,314,2.796,317,1.399,332,0.562,366,1.879,393,1.879,394,1.879,401,3.524,411,1.113,413,1.031,417,1.351,459,3.48,524,0.732,558,2.662,579,3.793,591,3.128,617,2.051,632,1.214,633,1.214,634,1.214,638,4.175,646,1.113,647,0.964,648,1.113,661,1.214,672,1.214,673,1.214,676,1.214,699,2.051,788,2.281,859,2.439,893,3.428,906,1.113,914,5.283,915,4.3,916,1.214,917,1.627,918,3.415,919,2.281,920,2.281,921,3.415,922,3.415,923,3.415,924,2.662,925,3.415,926,3.415,927,3.415,928,3.415,929,3.474,930,4.484,931,3.415,932,4.484,933,3.415,934,4.484,935,2.961,936,2.662,937,3.22,938,2.281,939,2.281,940,4.013,941,2.631,942,2.631,943,4.013,944,2.281,945,2.631,946,1.558,947,2.631,948,1.558,949,1.558,950,1.558,951,1.558,952,1.558,953,2.631,954,4.865,955,1.558,956,2.051,957,2.631,958,2.961,959,1.558,960,1.558,961,2.631,962,1.558,963,1.558,964,3.415,965,1.558,966,2.656,967,2.051,968,2.656,969,2.631,970,2.656,971,2.631,972,1.558,973,1.558,974,1.985,975,1.558,976,3.415,977,1.351,978,1.558,979,1.558,980,1.351,981,1.558,982,2.631,983,2.631,984,1.558,985,1.558,986,1.558,987,1.558,988,2.631,989,1.742,990,2.631,991,1.742,992,2.631,993,2.631,994,1.742,995,2.631,996,1.742,997,2.631,998,2.631,999,1.742,1000,2.631,1001,1.742,1002,1.558,1003,1.558,1004,1.558,1005,1.879,1006,1.558,1007,1.558,1008,1.558,1009,3.415,1010,2.631,1011,1.558,1012,1.351,1013,2.631,1014,1.558,1015,1.351,1016,1.351,1017,1.742,1018,1.113,1019,1.558,1020,1.558,1021,1.214,1022,1.558,1023,0.855,1024,1.558,1025,1.351,1026,1.558,1027,1.214,1028,1.558,1029,1.558,1030,1.351,1031,1.113,1032,1.558,1033,1.558,1034,1.558,1035,1.558,1036,1.558,1037,1.558,1038,1.558,1039,1.558,1040,1.558,1041,1.558,1042,1.558,1043,1.558,1044,1.558,1045,1.558,1046,1.558,1047,1.558,1048,1.558,1049,1.558,1050,1.558,1051,1.558,1052,1.558,1053,1.558,1054,1.351,1055,1.558,1056,4.484,1057,1.558,1058,1.558,1059,1.558,1060,1.558,1061,1.558,1062,1.558,1063,1.558,1064,1.558,1065,1.558,1066,1.558,1067,1.558,1068,1.558,1069,1.558,1070,3.888,1071,1.558,1072,2.281,1073,3.415,1074,1.558,1075,1.558,1076,2.631,1077,1.351,1078,1.214,1079,1.558,1080,2.631,1081,2.631,1082,2.631,1083,2.631,1084,2.631,1085,2.631,1086,2.631,1087,2.631,1088,1.558,1089,2.631,1090,2.631,1091,2.631,1092,2.631,1093,2.631,1094,2.631,1095,1.879,1096,2.631]],["title/injectables/DisneyAPIService.html",[302,1.414,929,2.8]],["body/injectables/DisneyAPIService.html",[3,0.113,4,0.113,5,0.102,9,0.102,10,0.208,18,0.564,23,0.502,24,0.245,25,0.015,29,0.879,30,0.495,33,0.113,40,0.97,45,1.068,66,0.008,67,0.008,75,2.31,78,3.079,79,4.186,84,1.771,97,1.2,99,2.087,104,2.71,107,1.766,108,1.836,118,0.602,127,0.626,130,2.362,154,2.214,202,2.459,214,1.528,215,1.299,218,1.901,239,1.771,302,1.466,304,1.39,306,4.406,307,3.931,309,4.439,314,2.92,317,2.419,319,2.902,321,2.514,325,3.395,328,3.651,332,0.965,334,1.39,335,1.555,338,2.006,346,3.191,347,4.279,348,2.69,357,4.279,364,4.279,365,2.902,368,2.362,374,1.928,377,2.902,379,3.168,380,1.771,381,2.69,464,3.524,485,4.262,486,3.524,491,4.439,517,1.91,524,1.91,814,5.651,818,3.524,819,4.216,849,4.439,859,3.51,864,3.92,866,2.902,868,3.92,871,3.524,873,3.168,893,2.69,915,1.555,917,4.117,924,3.831,929,2.902,967,4.279,1005,2.902,1023,1.468,1070,2.32,1072,2.32,1097,6.212,1098,1.91,1099,4.064,1100,4.915,1101,4.915,1102,4.064,1103,5.49,1104,4.064,1105,5.49,1106,4.915,1107,2.675,1108,4.064,1109,2.675,1110,3.524,1111,5.772,1112,6.028,1113,4.064,1114,4.064,1115,4.064,1116,2.32,1117,3.524,1118,4.064,1119,4.064,1120,2.32,1121,4.064,1122,3.524,1123,2.675,1124,4.064,1125,5.49,1126,4.064,1127,4.064,1128,4.064,1129,2.32,1130,4.064,1131,3.524,1132,4.064,1133,2.675,1134,3.524,1135,2.675,1136,3.524,1137,2.675,1138,2.675,1139,2.675,1140,2.675,1141,4.064,1142,3.524,1143,2.675,1144,2.675,1145,2.675,1146,4.064,1147,2.675,1148,2.675,1149,2.675,1150,2.675,1151,2.675,1152,2.675]],["title/components/DrawerMenuComponent.html",[68,0.664,91,1.304]],["body/components/DrawerMenuComponent.html",[0,0.028,3,0.132,4,0.132,5,0.119,9,0.119,10,0.234,18,0.515,23,0.559,24,0.225,25,0.015,30,0.613,33,0.193,35,0.675,36,0.702,38,0.948,40,0.552,66,0.009,67,0.009,68,0.913,69,1.082,70,1.646,71,1.175,72,1.175,73,1.175,81,1.127,82,2.58,83,2.58,85,1.58,88,3.567,89,2.66,91,1.971,92,1.58,94,1.869,96,4.201,97,1.347,99,1.862,107,0.887,108,1.347,109,4.201,118,0.702,119,1.468,120,2.068,121,2.435,123,2.068,125,4.701,127,0.73,128,2.435,129,3.556,132,1.175,133,1.716,134,1.716,135,1.175,136,2.229,137,1.175,138,1.175,139,1.082,140,1.175,141,1.127,142,1.646,143,1.175,144,1.082,145,1.127,146,1.175,147,1.175,148,1.082,149,1.175,150,1.082,151,0.887,152,1.175,153,1.082,154,1.039,155,1.716,156,2.452,157,1.175,158,1.082,159,1.175,160,1.039,161,0.998,162,1.175,163,1.039,164,1.646,165,1.082,166,1.175,167,1.039,168,1.175,169,1.082,170,1.127,171,1.175,172,1.039,173,1.175,174,1.082,175,1.175,176,1.175,177,1.082,178,1.458,179,1.082,180,1.082,181,1.175,182,1.175,202,1.944,205,3.258,214,1.175,215,0.998,218,1.082,231,3.02,260,2.651,281,2.651,314,2.308,317,2.208,332,1.127,401,4.016,936,3.556,1095,3.258,1153,5.131,1154,2.435,1155,4.673,1156,3.956,1157,3.956,1158,5.465,1159,5.708,1160,4.562,1161,4.562,1162,3.124,1163,3.956,1164,3.124,1165,5.77,1166,3.849,1167,3.956,1168,3.556,1169,6.346,1170,3.258,1171,3.956,1172,3.556,1173,3.956,1174,3.956,1175,3.556,1176,3.956,1177,3.956,1178,3.556,1179,3.956,1180,3.556,1181,3.956,1182,3.124,1183,2.709,1184,2.435,1185,2.068,1186,2.435,1187,2.709,1188,2.709,1189,2.709,1190,4.562,1191,4.562]],["title/interfaces/FilterForm.html",[0,0.035,903,2.151]],["body/interfaces/FilterForm.html",[0,0.067,2,0.897,3,0.215,4,0.215,5,0.193,9,0.193,10,0.325,16,1.235,18,0.485,23,0.686,24,0.241,25,0.015,30,0.458,31,2.28,32,1.443,33,0.322,53,1.5,55,2.197,66,0.012,67,0.012,291,4.236,407,2.64,421,2.507,467,4.214,473,3.298,474,2.64,511,2.64,535,3.688,896,2.175,897,2.952,898,3.925,899,3.925,900,3.925,901,3.925,902,3.925,903,3.482,904,3.482]],["title/interfaces/FilteredInfoItem.html",[0,0.035,904,2.151]],["body/interfaces/FilteredInfoItem.html",[0,0.066,2,0.86,3,0.206,4,0.206,5,0.185,9,0.185,10,0.316,16,1.184,18,0.465,23,0.697,24,0.28,25,0.015,30,0.439,31,2.005,32,1.383,33,0.318,53,1.438,55,2.139,66,0.012,67,0.012,291,3.917,407,2.53,421,2.403,467,2.829,473,3.211,474,2.53,511,2.53,535,4.283,896,2.085,897,2.829,898,3.821,899,4.557,900,4.557,901,4.557,902,4.557,903,2.671,904,3.724]],["title/interfaces/FilteredInfoItemDate.html",[0,0.035,407,2.037]],["body/interfaces/FilteredInfoItemDate.html",[0,0.067,2,0.907,3,0.217,4,0.217,5,0.195,9,0.195,10,0.327,16,1.248,18,0.49,23,0.687,24,0.195,25,0.015,30,0.463,31,2.054,32,1.458,33,0.323,53,1.516,55,2.408,66,0.012,67,0.012,291,4.187,407,3.319,421,2.534,467,2.983,473,3.319,474,2.667,511,2.667,535,3.712,896,2.198,897,2.983,898,4.629,899,3.95,900,3.95,901,3.95,902,3.95,903,2.816,904,3.815]],["title/interfaces/FormatedPopulationData.html",[0,0.035,577,2.595]],["body/interfaces/FormatedPopulationData.html",[0,0.059,2,0.98,3,0.235,4,0.235,5,0.211,9,0.211,10,0.343,16,1.861,23,0.674,24,0.273,25,0.015,33,0.283,40,0.98,66,0.012,67,0.012,209,3.202,577,4.435,599,4.949,703,5.828,705,5.828,742,4.326,743,4.326,744,4.326,745,4.326,896,2.377,1192,4.326]],["title/components/HomeComponent.html",[68,0.664,158,1.358]],["body/components/HomeComponent.html",[3,0.193,4,0.193,5,0.173,18,0.566,25,0.015,30,0.535,33,0.193,35,0.988,36,1.027,38,1.233,66,0.011,67,0.011,68,1.116,69,1.582,70,2.14,71,1.718,72,1.718,73,1.718,81,1.648,82,2.691,83,2.691,85,2.054,91,1.52,92,2.054,118,1.027,127,1.068,132,1.718,133,2.231,134,2.231,135,1.718,136,2.622,137,1.718,138,1.718,139,1.582,140,1.718,141,1.648,142,2.14,143,1.718,144,1.582,145,1.648,146,1.718,147,1.718,148,1.582,149,1.718,150,1.582,151,1.298,152,1.718,153,1.582,154,1.52,155,2.231,156,1.648,157,1.718,158,2.414,159,1.718,160,1.52,161,1.46,162,1.718,163,1.52,164,2.14,165,1.582,166,1.718,167,1.52,168,1.718,169,2.414,170,1.648,171,1.718,172,1.52,173,1.718,174,1.582,175,1.718,176,1.718,177,1.582,178,1.896,179,1.582,180,1.582,181,1.718,182,1.718,646,3.263,647,2.826,648,3.263,1170,4.237,1193,3.962,1194,5.933]],["title/interfaces/ImageItemInfo.html",[0,0.035,28,1.538]],["body/interfaces/ImageItemInfo.html",[0,0.069,1,2.188,2,0.735,3,0.176,4,0.176,5,0.158,6,1.704,7,1.383,8,1.44,9,0.158,10,0.285,11,1.865,12,2.388,13,1.865,14,2.5,15,3.012,16,1.356,17,2.5,18,0.532,19,1.865,20,1.865,21,1.865,22,2.5,23,0.691,24,0.28,25,0.015,26,2.468,28,2.636,29,1.683,30,0.375,31,1.858,32,1.181,33,0.331,34,2.365,35,0.899,36,0.935,37,1.632,38,1.159,39,1.632,40,0.735,41,1.329,42,1.781,43,1.564,44,2.753,45,1.766,46,2.878,47,2.577,48,1.704,49,1.781,50,1.704,51,1.865,52,2.284,53,1.647,54,2.188,55,2.178,56,1.781,57,1.865,58,1.781,59,1.781,60,2.188,61,2.388,62,1.564,63,2.188,64,1.564,65,1.781,66,0.01,67,0.01]],["title/pipes/JoinPostalCodesPipe.html",[519,2.279,556,2.8]],["body/pipes/JoinPostalCodesPipe.html",[3,0.179,4,0.179,5,0.161,18,0.606,23,0.616,24,0.161,25,0.015,29,1.371,30,0.382,33,0.179,40,1.121,52,2.311,66,0.011,67,0.011,75,2.651,78,3.122,79,3.094,81,1.526,97,1.25,99,1.25,104,3.34,107,1.202,113,2.311,118,0.951,127,0.989,187,1.812,214,1.591,215,1.352,218,1.465,287,3.278,293,4.028,300,3.933,322,4.028,325,3.488,338,2.784,346,4.213,365,4.028,368,3.278,381,3.733,519,3.278,524,1.989,556,4.028,659,4.397,782,4.89,862,4.397,866,4.832,870,4.89,1005,4.028,1111,6.285,1195,4.231,1196,4.89,1197,3.669,1198,6.766,1199,7.249,1200,7.249,1201,5.867,1202,6.766,1203,5.274,1204,5.64,1205,5.64,1206,5.64,1207,4.231,1208,5.64,1209,7.249,1210,4.231,1211,5.64,1212,4.231,1213,4.231,1214,4.231,1215,4.231,1216,4.231]],["title/interfaces/ListItemObject.html",[0,0.035,599,2.595]],["body/interfaces/ListItemObject.html",[0,0.057,2,0.936,3,0.224,4,0.224,5,0.201,9,0.201,10,0.333,16,1.837,23,0.669,24,0.292,25,0.015,33,0.275,40,1.3,66,0.012,67,0.012,209,3.45,577,3.507,599,4.669,703,4.13,705,4.13,742,5.736,743,5.736,744,5.736,745,5.736,896,2.269,1192,4.13]],["title/injectables/LoadingService.html",[302,1.414,937,2.595]],["body/injectables/LoadingService.html",[3,0.153,4,0.153,5,0.137,9,0.137,10,0.259,24,0.222,25,0.015,30,0.571,33,0.153,40,0.638,44,1.479,46,1.546,66,0.009,67,0.009,75,1.697,76,3.944,78,2.84,84,2.39,97,1.494,99,2.138,104,3.68,107,1.659,108,2.041,113,2.073,115,4.387,116,3.613,118,0.812,127,0.844,130,3.679,160,1.201,161,2.314,202,2.492,218,1.25,224,3.613,302,1.825,304,1.876,306,4.19,307,3.791,314,2.502,317,2.731,319,3.613,322,3.613,325,3.129,332,1.302,335,2.098,368,2.941,374,1.416,722,3.944,849,3.613,866,3.613,869,4.387,876,4.387,937,3.349,1117,4.387,1203,3.944,1217,3.13,1218,5.06,1219,5.06,1220,5.06,1221,5.842,1222,5.842,1223,7.454,1224,6.909,1225,6.331,1226,6.331,1227,6.331,1228,5.06,1229,3.61,1230,5.06,1231,5.06,1232,5.06,1233,5.06,1234,6.278,1235,3.61,1236,5.06,1237,3.61,1238,5.06,1239,5.06,1240,5.06,1241,5.842,1242,3.61,1243,3.61,1244,5.06,1245,3.61,1246,3.61,1247,3.61,1248,3.61,1249,2.814,1250,3.61,1251,3.61,1252,3.61,1253,3.61,1254,3.61,1255,3.61,1256,3.613,1257,3.61,1258,3.61,1259,3.61,1260,5.842,1261,3.61,1262,3.61]],["title/components/LoadingSpinnerComponent.html",[68,0.664,160,1.304]],["body/components/LoadingSpinnerComponent.html",[3,0.189,4,0.189,5,0.17,18,0.559,25,0.015,30,0.528,33,0.189,35,0.968,36,1.007,38,1.217,66,0.011,67,0.011,68,1.105,69,1.551,70,2.112,71,1.684,72,1.684,73,1.684,81,1.615,82,2.686,83,2.686,85,2.027,91,1.489,92,2.027,94,2.399,118,1.007,127,1.047,132,1.684,133,2.202,134,2.202,135,1.684,136,2.602,137,1.684,138,1.684,139,1.551,140,1.684,141,1.615,142,2.112,143,1.684,144,1.551,145,1.615,146,1.684,147,1.684,148,1.551,149,1.684,150,1.551,151,1.272,152,1.684,153,1.551,154,1.489,155,2.202,156,1.615,157,1.684,158,1.551,159,1.684,160,2.301,161,2.398,162,1.684,163,1.489,164,2.112,165,1.551,166,1.684,167,1.489,168,1.684,169,1.551,170,1.615,171,1.684,172,1.489,173,1.684,174,1.551,175,1.684,176,1.684,177,1.551,178,1.871,179,1.551,180,1.551,181,1.684,182,1.684,1234,5.656,1249,3.491,1263,3.883,1264,3.883,1265,6.524,1266,5.855,1267,5.855,1268,4.478]],["title/interfaces/MenuItem.html",[0,0.035,1166,2.8]],["body/interfaces/MenuItem.html",[0,0.039,2,0.788,3,0.189,4,0.189,5,0.169,9,0.169,10,0.299,23,0.659,24,0.247,25,0.015,30,0.676,33,0.247,66,0.011,67,0.011,68,0.99,82,1.484,83,1.484,85,1.545,88,3.866,89,2.883,91,1.484,92,1.545,94,1.828,96,3.478,108,1.318,109,4.553,118,1.003,119,2.097,120,2.953,121,3.478,123,2.953,125,3.186,127,1.043,128,3.478,129,3.478,156,2.349,202,1.609,231,3.866,314,1.911,317,1.828,332,1.609,401,4.219,936,3.478,1153,3.478,1154,3.478,1155,5.065,1156,3.869,1157,3.869,1158,3.869,1159,5.646,1163,3.869,1165,5.995,1166,4.65,1167,3.869,1168,3.478,1169,6.668,1170,3.186,1171,3.869,1172,3.478,1173,3.869,1174,3.869,1175,3.478,1176,3.869,1177,3.869,1178,3.478,1179,3.869,1180,3.478,1181,3.869,1183,3.869,1184,3.478,1185,2.953,1186,3.478,1187,3.869,1188,3.869,1189,3.869]],["title/components/ModalImageViewerComponent.html",[68,0.664,163,1.304]],["body/components/ModalImageViewerComponent.html",[0,0.032,3,0.153,4,0.153,5,0.138,9,0.138,10,0.26,18,0.485,23,0.626,24,0.241,25,0.015,30,0.528,33,0.215,35,0.784,36,0.815,38,1.055,40,0.641,41,1.622,45,1.667,66,0.009,67,0.009,68,0.992,69,1.256,70,1.831,71,1.364,72,1.364,73,1.364,75,2.752,81,1.308,82,2.628,83,2.628,85,1.757,91,1.206,92,1.757,94,2.079,97,1.499,99,1.972,107,1.03,108,1.499,118,0.815,127,0.848,132,1.364,133,1.909,134,1.909,135,1.364,136,2.385,137,1.364,138,1.364,139,1.256,140,1.364,141,1.308,142,1.831,143,1.364,144,1.256,145,1.308,146,1.364,147,1.364,148,1.256,149,1.364,150,1.256,151,1.802,152,1.364,153,1.256,154,1.206,155,1.909,156,1.308,157,1.364,158,1.256,159,1.364,160,1.206,161,1.159,162,1.364,163,2.109,164,2.657,165,2.736,166,1.364,167,2.109,168,1.364,169,1.256,170,1.308,171,1.364,172,1.206,173,1.364,174,1.256,175,1.364,176,1.364,177,1.256,178,1.622,179,1.256,180,1.256,181,1.364,182,1.364,187,2.174,188,2.752,200,2.981,218,1.256,332,1.308,401,3.48,408,3.956,412,2.827,413,2.4,418,2.4,419,2.827,423,2.589,1017,3.876,1018,4.941,1078,2.827,1269,4.941,1270,2.827,1271,4.401,1272,4.401,1273,4.401,1274,3.626,1275,3.626,1276,3.626,1277,3.626,1278,3.626,1279,3.144,1280,3.144,1281,3.144,1282,3.144,1283,3.144,1284,5.075]],["title/interfaces/ModalImageViewerData.html",[0,0.035,1017,2.595]],["body/interfaces/ModalImageViewerData.html",[0,0.043,2,0.87,3,0.208,4,0.208,5,0.187,9,0.187,10,0.319,23,0.678,24,0.259,25,0.015,30,0.615,33,0.263,41,1.574,45,1.943,66,0.012,67,0.012,68,1.055,75,2.315,82,1.638,83,1.638,85,1.706,92,1.706,94,2.018,108,1.455,118,1.108,127,1.152,151,1.399,163,1.638,164,2.587,165,2.561,167,2.07,187,2.11,188,2.926,200,2.315,215,1.989,332,1.777,401,4.057,408,3.84,412,3.84,413,3.261,418,3.261,419,3.84,423,3.518,1017,4.518,1018,3.518,1078,5.59,1269,3.518,1270,3.84,1271,4.272,1272,4.272,1273,4.272,1279,4.272,1280,4.272,1281,4.272,1282,4.272,1283,4.272]],["title/components/ModalWrapperComponent.html",[68,0.664,167,1.304]],["body/components/ModalWrapperComponent.html",[3,0.161,4,0.161,5,0.145,9,0.145,10,0.269,18,0.574,23,0.446,24,0.199,25,0.015,30,0.542,33,0.161,35,0.824,36,0.857,38,1.092,40,0.673,41,1.679,66,0.01,67,0.01,68,1.019,69,1.32,70,1.895,71,1.433,72,1.433,73,1.433,81,1.375,82,2.642,83,2.642,85,1.819,91,1.268,92,1.819,97,1.552,99,1.914,107,1.083,108,1.552,118,0.857,119,1.791,127,0.891,132,1.433,133,1.976,134,1.976,135,1.433,136,2.437,137,1.433,138,1.433,139,1.32,140,1.433,141,1.375,142,1.895,143,1.433,144,1.32,145,1.375,146,1.433,147,1.433,148,1.32,149,1.433,150,1.32,151,1.083,152,1.433,153,1.32,154,1.268,155,1.976,156,1.375,157,1.433,158,1.32,159,1.433,160,1.268,161,1.218,162,1.433,163,1.268,164,2.535,165,1.32,166,1.433,167,2.155,168,1.433,169,1.32,170,1.375,171,1.433,172,1.268,173,1.433,174,1.32,175,1.433,176,1.433,177,1.32,178,1.679,179,1.32,180,1.32,181,1.433,182,1.433,205,3.752,214,1.433,215,1.218,231,3.478,317,2.463,332,1.375,401,3.73,413,2.523,418,4.5,1054,3.305,1269,4.855,1285,3.305,1286,5.254,1287,6.013,1288,6.013,1289,6.013,1290,6.013,1291,6.013,1292,5.254,1293,6.013,1294,5.254,1295,5.254,1296,5.254,1297,3.812,1298,6.013,1299,3.812,1300,3.812,1301,3.812,1302,3.812,1303,5.254,1304,5.254]],["title/components/PageTitleComponent.html",[68,0.664,169,1.358]],["body/components/PageTitleComponent.html",[3,0.155,4,0.155,5,0.139,9,0.139,10,0.261,18,0.488,23,0.311,24,0.194,25,0.015,30,0.531,33,0.155,35,0.791,36,0.823,38,1.061,40,0.902,66,0.01,67,0.01,68,0.997,69,1.267,70,1.842,71,1.92,72,1.376,73,1.376,81,1.32,82,2.63,83,2.63,91,1.217,97,1.508,99,1.881,107,1.039,108,1.508,118,0.823,123,2.422,127,0.855,132,1.376,133,1.92,134,1.92,135,1.376,136,2.394,137,1.376,138,1.376,139,1.267,140,1.376,141,1.32,142,1.842,143,1.376,144,1.267,145,1.32,146,1.376,147,1.376,148,1.267,149,1.376,150,1.267,151,1.039,152,1.376,153,1.267,154,1.217,155,1.92,156,1.32,157,1.376,158,1.267,159,1.376,160,1.217,161,1.169,162,1.376,163,1.217,164,1.842,165,1.267,166,1.376,167,1.217,168,1.376,169,2.205,170,2.122,171,1.376,172,1.217,173,1.376,174,1.267,175,1.376,176,1.376,177,1.267,178,1.632,179,1.267,180,1.267,181,1.376,182,1.376,187,2.187,188,2.765,200,2.993,202,2.122,220,4.202,232,2.262,260,2.126,314,2.52,317,2.41,332,1.32,401,3.985,423,2.613,524,2.4,647,4.143,1165,4.586,1185,2.422,1186,2.852,1305,5.883,1306,5.808,1307,3.172,1308,5.883,1309,6.939,1310,5.883,1311,5.883,1312,5.883,1313,5.883,1314,6.939,1315,5.107,1316,3.658,1317,3.658,1318,3.658,1319,3.658,1320,3.658,1321,3.658,1322,3.658,1323,3.658]],["title/interfaces/PopulationDataResponse.html",[0,0.035,654,2.595]],["body/interfaces/PopulationDataResponse.html",[0,0.043,2,0.862,3,0.206,4,0.206,5,0.185,9,0.185,10,0.317,23,0.704,24,0.302,25,0.015,27,3.713,33,0.206,66,0.012,67,0.012,654,4.095,655,3.483,896,2.089,1324,4.229,1325,7.145,1326,7.145,1327,7.145,1328,7.145,1329,7.145,1330,7.145,1331,7.145,1332,7.145,1333,7.145,1334,7.145]],["title/interfaces/ResponseCharacter.html",[0,0.035,1335,2.425]],["body/interfaces/ResponseCharacter.html",[0,0.064,2,0.914,3,0.323,4,0.219,5,0.196,8,1.792,9,0.196,10,0.329,18,0.494,23,0.685,24,0.244,25,0.015,29,1.509,33,0.309,45,1.36,66,0.012,67,0.012,151,2.131,286,2.432,915,3.008,966,3.426,968,3.426,970,3.426,974,4.361,989,3.426,991,3.426,994,3.426,996,3.426,999,3.426,1001,3.426,1023,2.84,1335,3.971,1336,3.426,1337,4.641,1338,3.696,1339,3.696,1340,3.696,1341,3.696,1342,3.696,1343,3.696,1344,3.696,1345,3.696]],["title/interfaces/ResponseCharacterList.html",[0,0.035,1023,2.151]],["body/interfaces/ResponseCharacterList.html",[0,0.064,2,0.914,3,0.323,4,0.219,5,0.196,8,1.792,9,0.196,10,0.329,18,0.494,23,0.685,24,0.244,25,0.015,29,1.509,33,0.309,45,1.36,66,0.012,67,0.012,151,2.131,286,2.432,915,3.008,966,3.426,968,3.426,970,3.426,974,4.361,989,3.426,991,3.426,994,3.426,996,3.426,999,3.426,1001,3.426,1023,3.523,1335,3.201,1336,3.426,1337,4.641,1338,3.696,1339,3.696,1340,3.696,1341,3.696,1342,3.696,1343,3.696,1344,3.696,1345,3.696]],["title/interfaces/ResponseData.html",[0,0.035,974,2.279]],["body/interfaces/ResponseData.html",[0,0.06,2,0.762,3,0.271,4,0.182,5,0.164,8,1.493,9,0.164,10,0.292,18,0.651,23,0.699,24,0.3,25,0.015,29,1.533,33,0.288,45,1.792,66,0.011,67,0.011,151,1.622,215,2.412,286,2.027,915,2.507,966,4.513,968,4.513,970,4.513,974,3.963,989,4.513,991,4.513,994,4.513,996,4.513,999,4.513,1001,4.513,1023,2.366,1335,2.667,1336,2.855,1337,3.961,1338,3.08,1339,3.08,1340,3.08,1341,3.08,1342,4.869,1343,4.869,1344,4.869,1345,4.869]],["title/interfaces/ResponseInfo.html",[0,0.035,1337,2.425]],["body/interfaces/ResponseInfo.html",[0,0.063,2,0.877,3,0.29,4,0.21,5,0.188,8,1.72,9,0.188,10,0.32,18,0.474,23,0.69,24,0.273,25,0.015,29,1.661,33,0.304,45,1.305,66,0.012,67,0.012,151,1.777,215,2.419,286,2.334,915,2.887,966,3.287,968,3.287,970,3.287,974,3.982,989,3.287,991,3.287,994,3.287,996,3.287,999,3.287,1001,3.287,1023,2.725,1335,3.071,1336,3.287,1337,4.448,1338,5.136,1339,5.136,1340,5.136,1341,5.136,1342,3.547,1343,3.547,1344,3.547,1345,3.547]],["title/interfaces/ResultSearchBase.html",[0,0.035,47,1.606]],["body/interfaces/ResultSearchBase.html",[0,0.068,1,2.137,2,0.71,3,0.17,4,0.17,5,0.152,6,1.646,7,1.336,8,1.391,9,0.152,10,0.279,11,1.801,12,2.332,13,1.801,14,2.442,15,3.273,16,1.324,17,2.442,18,0.52,19,1.801,20,1.801,21,1.801,22,2.442,23,0.693,24,0.289,25,0.015,26,2.424,28,2.424,29,1.694,30,0.362,31,1.825,32,1.141,33,0.33,34,2.324,35,0.868,36,0.903,37,1.576,38,1.132,39,1.576,40,0.71,41,1.284,42,1.72,43,1.511,44,1.646,45,1.056,46,1.72,47,2.714,48,2.714,49,2.837,50,2.714,51,2.97,52,2.837,53,1.608,54,2.137,55,2.14,56,1.72,57,1.801,58,1.72,59,1.72,60,2.137,61,2.332,62,1.511,63,2.137,64,1.511,65,1.72,66,0.01,67,0.01]],["title/components/SearchFilterComponent.html",[68,0.664,172,1.304]],["body/components/SearchFilterComponent.html",[0,0.029,3,0.137,4,0.137,5,0.123,9,0.123,10,0.24,18,0.576,24,0.209,25,0.015,30,0.601,31,1.625,32,0.92,33,0.198,35,0.7,36,0.728,38,1.513,66,0.009,67,0.009,68,0.932,69,1.122,70,1.69,71,1.218,72,1.218,73,1.218,81,1.168,82,2.592,83,2.592,85,1.622,89,2.716,91,1.077,92,1.622,97,1.383,99,2.03,107,1.712,108,2.079,113,1.327,118,0.728,119,1.522,127,0.757,132,1.218,133,1.761,134,1.761,135,1.218,136,2.267,137,1.218,138,1.218,139,1.122,140,1.218,141,1.168,142,1.69,143,1.218,144,1.122,145,1.168,146,1.218,147,1.218,148,1.122,149,1.218,150,1.122,151,0.92,152,1.218,153,1.122,154,1.077,155,1.761,156,1.168,157,1.218,158,1.122,159,1.218,160,1.077,161,1.035,162,1.218,163,1.077,164,1.69,165,1.122,166,1.218,167,1.077,168,1.218,169,1.122,170,1.168,171,1.218,172,2.005,173,1.218,174,1.122,175,1.218,176,1.218,177,1.122,178,1.497,179,1.122,180,2.087,181,1.218,182,1.218,187,2.006,188,2.586,200,2.833,202,1.985,287,2.722,374,2.365,561,3.929,562,3.929,563,3.929,565,3.929,609,4.305,635,3.345,637,2.313,638,2.144,640,2.313,644,3.651,681,2.313,682,2.313,792,3.651,914,5.026,967,4.699,1031,5.026,1346,5.026,1347,2.525,1348,4.77,1349,4.77,1350,4.061,1351,5.227,1352,5.227,1353,3.651,1354,4.77,1355,4.77,1356,4.909,1357,3.239,1358,3.239,1359,3.239,1360,3.239,1361,3.239,1362,3.239,1363,3.239,1364,3.929,1365,2.809,1366,2.313,1367,2.809,1368,2.525,1369,2.809,1370,2.809,1371,2.525,1372,2.809,1373,4.684,1374,4.061,1375,3.239,1376,4.061,1377,3.651,1378,3.239]],["title/interfaces/SearchForm.html",[0,0.035,1366,2.8]],["body/interfaces/SearchForm.html",[0,0.041,2,0.824,3,0.197,4,0.197,5,0.177,9,0.177,10,0.308,18,0.694,24,0.177,25,0.015,30,0.671,31,2.148,32,1.325,33,0.254,38,1.382,66,0.011,67,0.011,68,1.019,82,1.551,83,1.551,85,1.615,89,2.968,92,1.615,108,2.075,113,1.911,118,1.049,119,2.192,127,1.091,172,1.551,180,1.615,187,1.998,188,2.826,200,2.192,202,1.683,374,2.757,561,4.294,562,4.294,563,4.294,565,4.294,609,4.751,635,4.294,637,3.331,638,3.088,640,3.331,644,3.636,681,3.331,682,3.331,914,3.331,1031,3.331,1346,3.331,1347,3.636,1348,5.213,1349,5.213,1350,4.045,1351,4.045,1352,4.045,1354,4.045,1355,4.045,1356,5.194,1364,4.751,1365,4.045,1366,4.294,1367,4.045,1368,3.636,1369,4.045,1370,4.045,1371,3.636,1372,4.045]],["title/interfaces/SearchValues.html",[0,0.035,43,1.474]],["body/interfaces/SearchValues.html",[0,0.069,1,2.205,2,0.744,3,0.178,4,0.178,5,0.16,6,1.725,7,1.4,8,1.458,9,0.16,10,0.288,11,1.887,12,2.407,13,1.887,14,2.52,15,3.027,16,1.366,17,2.52,18,0.537,19,1.887,20,1.887,21,1.887,22,2.52,23,0.692,24,0.289,25,0.015,26,2.482,28,2.482,29,1.623,30,0.38,31,1.869,32,1.196,33,0.332,34,2.646,35,0.91,36,0.947,37,1.651,38,1.462,39,1.651,40,0.744,41,1.345,42,1.803,43,2.114,44,1.725,45,1.106,46,1.803,47,2.592,48,1.725,49,1.803,50,1.725,51,1.887,52,2.303,53,1.66,54,2.205,55,2.191,56,1.803,57,1.887,58,1.803,59,1.803,60,2.205,61,2.407,62,1.583,63,2.205,64,1.583,65,1.803,66,0.01,67,0.01]],["title/components/SimplePaginatorComponent.html",[68,0.664,174,1.358]],["body/components/SimplePaginatorComponent.html",[3,0.122,4,0.122,5,0.11,9,0.11,10,0.22,18,0.491,24,0.276,25,0.015,29,1.233,30,0.55,33,0.122,35,0.624,36,0.649,38,0.894,40,1.203,66,0.008,67,0.008,68,0.872,69,0.999,70,1.552,71,1.085,72,1.085,73,1.085,81,1.041,82,2.552,83,2.552,85,1.49,89,2.54,91,0.96,92,1.49,94,1.763,97,1.271,99,2.174,107,0.82,108,1.271,118,0.649,119,1.356,127,0.675,132,1.085,133,1.618,134,1.618,135,1.085,136,2.145,137,1.085,138,1.085,139,0.999,140,1.085,141,1.041,142,1.552,143,1.085,144,0.999,145,1.041,146,1.085,147,1.085,148,0.999,149,1.085,150,0.999,151,1.222,152,1.085,153,0.999,154,0.96,155,1.618,156,1.041,157,1.085,158,0.999,159,1.085,160,0.96,161,0.922,162,1.085,163,0.96,164,1.552,165,0.999,166,1.085,167,0.96,168,1.085,169,0.999,170,1.041,171,1.085,172,0.96,173,1.085,174,1.975,175,2.492,176,1.085,177,0.999,178,1.375,179,0.999,180,0.999,181,1.085,182,1.085,205,3.073,209,2.203,214,1.085,215,0.922,218,2.359,224,3.956,230,1.785,231,4.608,260,3.315,281,2.501,303,3.718,317,2.108,332,1.041,374,1.688,427,3.354,429,3.354,558,4.01,564,4.01,641,2.249,661,2.249,672,2.249,673,2.249,775,3.354,844,3.354,859,3.674,864,3.073,868,3.073,889,3.731,893,4.234,924,4.01,935,4.461,938,4.461,939,4.461,1005,4.073,1021,5.792,1095,3.073,1203,3.354,1256,3.073,1353,3.354,1356,4.733,1364,3.674,1379,6.443,1380,2.502,1381,5.145,1382,4.303,1383,4.303,1384,4.303,1385,5.145,1386,5.145,1387,5.145,1388,5.289,1389,5.145,1390,2.886,1391,2.886,1392,2.886,1393,2.886,1394,2.886,1395,2.886,1396,2.886,1397,3.731,1398,4.303,1399,2.886,1400,2.886,1401,2.886,1402,2.886,1403,4.303,1404,5.703,1405,2.886,1406,2.886,1407,2.886,1408,5.703,1409,3.731,1410,4.303]],["title/components/SpotifyAPIComponent.html",[68,0.664,177,1.358]],["body/components/SpotifyAPIComponent.html",[3,0.214,4,0.082,5,0.074,7,2.491,9,0.074,10,0.162,12,1.353,18,0.546,23,0.461,24,0.265,25,0.015,29,1.094,30,0.596,33,0.082,34,2.04,35,0.863,36,1.035,38,0.83,40,0.813,41,2.148,43,1.904,48,1.295,50,1.295,60,1.567,62,1.904,63,1.567,64,1.904,65,1.353,66,0.006,67,0.006,68,0.677,69,0.673,70,1.14,71,0.731,72,0.731,73,0.731,81,0.701,82,2.39,83,2.39,85,1.094,91,0.646,92,1.094,94,1.295,97,0.933,99,2.179,107,1.692,108,1.985,118,0.437,127,0.454,132,0.731,133,1.188,134,1.188,135,0.731,136,1.73,137,0.731,138,0.731,139,1.593,140,0.731,141,0.701,142,1.14,143,0.731,144,0.673,145,0.701,146,0.731,147,0.731,148,0.673,149,0.731,150,1.593,151,1.307,152,0.731,153,0.673,154,0.646,155,1.188,156,0.701,157,0.731,158,0.673,159,0.731,160,0.646,161,0.621,162,0.731,163,0.646,164,1.14,165,0.673,166,0.731,167,0.646,168,0.731,169,1.593,170,0.701,171,0.731,172,0.646,173,0.731,174,0.673,175,0.731,176,0.731,177,1.593,178,1.904,179,1.593,180,0.673,181,0.731,182,0.731,183,5.298,185,1.515,187,1.353,188,1.877,200,2.162,202,2.493,206,4.39,214,1.904,215,1.618,218,1.593,220,2.852,230,1.202,232,2.845,236,1.685,237,1.685,238,1.388,239,1.286,246,2.74,281,1.837,286,1.877,314,2.831,317,1.636,332,0.701,333,2.092,334,1.01,338,2.499,374,1.567,393,2.257,394,2.257,411,1.388,505,2.464,524,2.379,575,4.704,579,4.457,591,3.587,617,1.515,630,1.685,632,2.464,633,1.515,634,1.515,645,2.74,646,1.388,647,1.202,648,1.388,668,1.685,669,1.685,676,1.515,698,1.685,699,2.464,739,1.685,819,1.388,873,3.946,892,1.685,906,1.388,916,1.515,917,1.955,919,2.74,920,2.74,944,1.685,956,2.464,977,2.74,980,1.685,1015,1.685,1016,1.685,1025,1.685,1030,1.685,1095,2.257,1388,3.463,1411,3.994,1412,3.994,1413,3.994,1414,3.994,1415,3.994,1416,3.994,1417,3.994,1418,3.994,1419,3.994,1420,3.994,1421,3.994,1422,3.16,1423,3.16,1424,4.601,1425,3.16,1426,3.16,1427,3.994,1428,3.16,1429,5.718,1430,1.943,1431,3.16,1432,1.943,1433,3.16,1434,1.943,1435,3.16,1436,1.943,1437,1.943,1438,3.16,1439,1.943,1440,1.943,1441,1.943,1442,1.943,1443,1.943,1444,1.943,1445,1.943,1446,3.587,1447,1.943,1448,3.587,1449,1.943,1450,1.943,1451,3.114,1452,1.943,1453,1.943,1454,1.943,1455,1.943,1456,2.852,1457,1.943,1458,1.943,1459,1.943,1460,1.515,1461,1.943,1462,1.943,1463,1.943,1464,1.943,1465,1.943,1466,1.943,1467,1.943,1468,4.601,1469,4.601,1470,1.943,1471,5.062,1472,4.601,1473,1.943,1474,3.16,1475,1.943,1476,1.943,1477,1.943,1478,3.16,1479,1.943,1480,3.16,1481,1.943,1482,1.943,1483,1.943,1484,4.601,1485,1.943,1486,1.943,1487,1.943,1488,1.943,1489,1.943,1490,1.943,1491,3.16,1492,1.943,1493,1.943,1494,1.943,1495,1.943,1496,1.943,1497,1.943,1498,1.943,1499,3.16,1500,3.16,1501,3.16,1502,3.16,1503,3.16]],["title/injectables/SpotifyAPIService.html",[302,1.414,1456,2.8]],["body/injectables/SpotifyAPIService.html",[3,0.083,4,0.083,5,0.074,7,0.653,9,0.074,10,0.163,18,0.384,23,0.54,24,0.256,25,0.015,29,1.405,30,0.491,33,0.135,34,1.913,38,1.132,40,0.817,45,0.837,48,2.232,50,2.232,53,1.503,62,0.738,64,0.738,66,0.006,67,0.006,75,2.175,78,3.038,79,3.636,97,0.941,99,1.957,102,2.862,104,3.581,107,1.846,108,0.941,113,1.647,116,4.271,118,0.441,127,0.459,130,1.851,178,2.118,180,0.679,202,2.576,214,1.512,215,1.285,218,1.602,224,1.97,238,1.401,239,1.299,293,2.274,300,3.692,302,1.149,304,1.02,306,3.607,307,3.281,309,2.274,314,2.838,317,2.084,319,2.274,321,3.37,322,2.274,325,1.97,328,3.699,332,0.708,333,1.299,334,1.02,335,1.14,338,2.952,346,2.689,347,2.483,348,3.368,357,4.248,360,3.607,363,1.299,364,2.483,365,4.271,366,4.271,367,4.012,368,1.851,372,4.012,374,1.577,379,3.607,380,1.299,381,3.607,384,2.762,491,2.871,505,1.529,516,2.762,517,1.401,519,1.14,524,2.811,722,2.483,813,1.701,814,1.529,816,1.701,817,1.701,819,3.304,822,4.012,849,4.271,862,4.248,864,2.274,868,2.274,917,4.099,1098,1.401,1110,2.762,1116,1.701,1120,1.701,1129,1.701,1131,4.012,1136,4.012,1142,2.762,1201,5.186,1256,1.401,1377,2.483,1456,2.274,1504,5.253,1505,3.185,1506,4.02,1507,4.02,1508,4.627,1509,4.627,1510,4.627,1511,3.185,1512,3.185,1513,3.185,1514,3.185,1515,3.185,1516,4.942,1517,3.185,1518,5.449,1519,2.862,1520,3.185,1521,3.185,1522,4.627,1523,1.962,1524,5.449,1525,3.185,1526,3.185,1527,3.185,1528,4.099,1529,1.962,1530,5.449,1531,5.449,1532,5.449,1533,3.185,1534,3.185,1535,1.962,1536,3.185,1537,1.962,1538,1.962,1539,3.185,1540,4.012,1541,2.762,1542,3.185,1543,2.762,1544,3.185,1545,3.185,1546,3.185,1547,3.185,1548,1.962,1549,3.185,1550,1.962,1551,3.185,1552,3.185,1553,2.762,1554,2.762,1555,3.185,1556,3.185,1557,1.962,1558,3.146,1559,1.962,1560,1.529,1561,1.529,1562,1.962,1563,1.962,1564,1.962,1565,1.962,1566,3.185,1567,1.962,1568,1.962,1569,3.185,1570,1.962,1571,2.871,1572,1.962,1573,3.185,1574,1.962,1575,1.962,1576,3.185,1577,1.962,1578,1.962,1579,1.962,1580,1.962,1581,1.962,1582,3.185,1583,1.962,1584,1.962,1585,1.962,1586,1.962,1587,1.962,1588,1.962,1589,1.962,1590,1.962,1591,1.962,1592,1.962,1593,1.962,1594,1.962,1595,1.962,1596,1.962,1597,1.962,1598,1.962,1599,1.962,1600,1.962]],["title/interfaces/SpotifySearchForm.html",[0,0.035,37,1.538]],["body/interfaces/SpotifySearchForm.html",[0,0.069,1,2.205,2,0.744,3,0.178,4,0.178,5,0.16,6,1.725,7,1.4,8,1.458,9,0.16,10,0.288,11,1.887,12,2.407,13,1.887,14,2.52,15,3.027,16,1.366,17,2.52,18,0.537,19,1.887,20,1.887,21,1.887,22,2.52,23,0.689,24,0.289,25,0.015,26,2.482,28,2.482,29,1.623,30,0.38,31,2.183,32,1.196,33,0.332,34,2.379,35,0.91,36,0.947,37,2.205,38,1.462,39,1.651,40,0.744,41,1.345,42,1.803,43,1.583,44,1.725,45,1.106,46,1.803,47,2.592,48,1.725,49,1.803,50,1.725,51,1.887,52,2.303,53,1.66,54,2.205,55,2.191,56,1.803,57,1.887,58,1.803,59,1.803,60,2.205,61,2.407,62,1.583,63,2.205,64,1.583,65,1.803,66,0.01,67,0.01]],["title/components/SpotifySearchFormComponent.html",[68,0.664,179,1.358]],["body/components/SpotifySearchFormComponent.html",[3,0.112,4,0.112,5,0.101,7,0.882,9,0.101,10,0.207,18,0.467,24,0.268,25,0.015,30,0.581,31,0.783,32,0.753,33,0.112,35,1.271,36,1.099,37,1.04,38,1.604,39,1.918,40,1.138,41,1.29,42,2.653,43,1.838,66,0.008,67,0.008,68,0.828,69,0.918,70,1.456,71,0.997,72,0.997,73,0.997,78,2.144,81,0.957,82,2.521,83,2.521,85,1.398,89,2.413,91,0.882,92,1.398,94,1.654,97,1.192,99,2.009,104,3.058,107,1.67,108,2.049,113,1.654,118,0.596,119,1.246,127,0.62,132,0.997,133,1.518,134,1.518,135,0.997,136,2.055,137,0.997,138,0.997,139,0.918,140,0.997,141,0.957,142,1.456,143,0.997,144,0.918,145,0.957,146,0.997,147,0.997,148,0.918,149,0.997,150,0.918,151,0.753,152,0.997,153,0.918,154,0.882,155,1.518,156,0.957,157,0.997,158,0.918,159,0.997,160,0.882,161,0.847,162,0.997,163,0.882,164,1.456,165,0.918,166,0.997,167,0.882,168,0.997,169,0.918,170,0.957,171,0.997,172,0.882,173,0.997,174,0.918,175,0.997,176,0.997,177,0.918,178,2.122,179,1.892,180,2.145,181,0.997,182,0.997,183,4.954,187,1.729,188,2.298,200,2.569,202,1.764,214,0.997,215,0.847,218,0.918,238,1.894,239,1.755,281,2.347,287,3.176,374,2.307,524,1.246,561,3.491,562,3.491,563,3.491,564,3.811,565,3.491,590,4.739,609,3.903,635,3.491,637,1.894,638,1.755,640,1.894,641,2.067,677,2.3,681,2.883,682,2.883,685,3.501,770,3.501,792,3.147,956,4.26,1346,4.954,1353,3.147,1356,4.6,1364,3.491,1368,2.067,1371,2.067,1374,3.501,1376,4.739,1377,4.26,1460,5.407,1540,4.739,1541,4.739,1543,3.501,1601,2.3,1602,4.038,1603,4.038,1604,5.881,1605,5.465,1606,4.038,1607,5.465,1608,4.889,1609,2.652,1610,2.652,1611,2.652,1612,4.038,1613,2.652,1614,2.652,1615,2.652,1616,2.652,1617,2.652,1618,2.652,1619,2.652,1620,4.038,1621,4.038,1622,2.652,1623,2.652,1624,2.652,1625,2.652,1626,5.465,1627,4.038,1628,2.652,1629,2.652,1630,2.652]],["title/interfaces/StationItem.html",[0,0.035,474,2.037]],["body/interfaces/StationItem.html",[0,0.067,2,0.897,3,0.215,4,0.215,5,0.193,9,0.193,10,0.325,16,1.235,18,0.692,23,0.693,24,0.241,25,0.015,30,0.458,31,2.044,32,1.443,33,0.322,53,2.141,55,2.197,66,0.012,67,0.012,291,3.978,407,2.64,421,2.507,467,2.952,473,3.298,474,3.298,511,2.64,535,3.688,896,2.175,897,2.952,898,3.925,899,3.925,900,3.925,901,3.925,902,3.925,903,2.787,904,3.482]],["title/interfaces/TokenCheckInfo.html",[0,0.035,1519,2.425]],["body/interfaces/TokenCheckInfo.html",[0,0.064,2,0.992,3,0.237,4,0.237,5,0.213,9,0.213,10,0.345,23,0.652,24,0.256,25,0.015,29,1.458,33,0.306,66,0.013,67,0.013,209,3.098,215,2.156,363,3.715,1516,5.082,1519,4.172,1528,4.172,1558,3.471,1571,5.359,1631,4.008,1632,4.375,1633,4.375,1634,4.375]],["title/interfaces/TokenInfo.html",[0,0.035,1528,2.425]],["body/interfaces/TokenInfo.html",[0,0.064,2,0.98,3,0.235,4,0.235,5,0.211,9,0.211,10,0.343,23,0.668,24,0.273,25,0.015,29,1.616,33,0.304,66,0.012,67,0.012,209,2.377,363,3.673,1516,4.435,1519,3.432,1528,4.452,1558,3.432,1571,3.963,1631,3.963,1632,5.828,1633,5.828,1634,5.828]],["title/interfaces/TokenStored.html",[0,0.035,1558,2.425]],["body/interfaces/TokenStored.html",[0,0.064,2,0.996,3,0.238,4,0.238,5,0.214,9,0.214,10,0.346,23,0.616,24,0.257,25,0.015,29,1.625,33,0.307,66,0.013,67,0.013,209,2.415,363,4.975,1516,5.088,1519,3.487,1528,4.648,1558,4.184,1571,4.027,1631,4.027,1632,4.395,1633,4.395,1634,4.395]],["title/interfaces/TypeOption.html",[0,0.035,39,1.538]],["body/interfaces/TypeOption.html",[0,0.069,1,2.195,2,0.739,3,0.177,4,0.177,5,0.159,6,1.713,7,1.39,8,1.448,9,0.159,10,0.286,11,1.874,12,2.396,13,1.874,14,2.508,15,3.019,16,1.36,17,2.508,18,0.534,19,1.874,20,1.874,21,1.874,22,2.508,23,0.691,24,0.274,25,0.015,26,2.474,28,2.474,29,1.621,30,0.377,31,1.862,32,1.187,33,0.331,34,2.64,35,0.904,36,0.94,37,1.64,38,1.163,39,2.195,40,1.19,41,2.015,42,2.884,43,1.572,44,1.713,45,1.099,46,1.791,47,2.583,48,1.713,49,1.791,50,1.713,51,1.874,52,2.292,53,1.652,54,2.195,55,2.184,56,1.791,57,1.874,58,1.791,59,1.791,60,2.195,61,2.396,62,1.572,63,2.195,64,1.572,65,1.791,66,0.01,67,0.01]],["title/interfaces/ZipCodeItem.html",[0,0.035,801,2.425]],["body/interfaces/ZipCodeItem.html",[0,0.062,2,0.922,3,0.221,4,0.221,5,0.198,9,0.198,10,0.33,16,1.269,23,0.692,24,0.278,25,0.015,30,0.471,33,0.296,66,0.012,67,0.012,161,1.668,209,3.001,595,3.751,649,4.272,650,3.727,651,3.541,652,3.727,801,3.992,833,5.372,834,5.372,836,5.372,896,2.235,1635,3.727,1636,5.706,1637,3.455,1638,4.069,1639,4.069,1640,4.069,1641,4.069]],["title/interfaces/ZipCodeListItem.html",[0,0.035,595,2.279]],["body/interfaces/ZipCodeListItem.html",[0,0.062,2,0.922,3,0.221,4,0.221,5,0.198,9,0.198,10,0.33,16,1.78,23,0.692,24,0.278,25,0.015,30,0.471,33,0.296,66,0.012,67,0.012,161,1.668,209,3.001,595,4.072,649,4.272,650,3.727,651,3.541,652,3.727,801,3.228,833,5.372,834,5.372,836,5.372,896,2.235,1635,3.727,1636,4.069,1637,3.455,1638,4.069,1639,4.069,1640,4.069,1641,4.069]],["title/interfaces/ZipCodesState.html",[0,0.035,1637,2.595]],["body/interfaces/ZipCodesState.html",[0,0.061,2,0.909,3,0.217,4,0.217,5,0.195,9,0.195,10,0.327,16,1.25,23,0.665,24,0.284,25,0.015,30,0.464,33,0.294,66,0.012,67,0.012,161,2.327,209,3.379,595,4.233,649,4.82,650,3.673,651,3.509,652,3.673,801,3.181,833,4.567,834,4.567,836,4.567,896,2.203,1635,3.673,1636,4.009,1637,4.233,1638,5.677,1639,5.677,1640,5.677,1641,5.677]],["title/coverage.html",[1642,4.645]],["body/coverage.html",[0,0.07,1,0.961,5,0.093,6,2.914,7,2.475,8,2.558,24,0.144,25,0.015,26,0.961,28,0.961,34,0.921,35,0.821,37,0.961,38,0.509,39,0.961,43,0.921,47,1.003,54,0.961,60,0.961,62,0.921,63,0.961,64,0.921,66,0.007,67,0.007,68,1.252,69,0.848,74,2.123,91,0.814,125,2.712,139,0.848,141,0.883,144,0.848,148,0.848,150,0.848,153,0.848,158,0.848,160,0.814,163,0.814,165,1.815,167,0.814,169,0.848,172,0.814,174,0.848,177,0.848,179,0.848,183,3.322,184,2.123,185,1.909,186,2.123,235,1.909,286,3.837,302,2.334,303,1.423,305,2.123,342,1.749,343,2.123,374,0.961,389,3.743,390,2.123,391,2.123,392,2.123,407,1.273,418,1.621,421,3.194,452,1.909,453,2.96,454,2.123,473,1.273,474,1.273,509,1.909,511,1.273,519,1.423,553,2.123,554,2.123,556,1.749,571,1.749,577,1.621,595,1.423,599,1.621,622,1.909,647,1.514,651,2.875,654,1.621,655,1.749,659,1.909,793,2.123,801,1.514,815,1.909,842,1.749,843,2.123,844,1.909,845,2.123,896,3.006,897,3.488,903,1.343,904,1.343,905,2.123,906,1.749,907,2.123,914,3.322,915,3.297,916,2.96,929,1.749,937,1.621,974,1.423,1017,1.621,1018,2.712,1021,1.909,1023,1.343,1027,1.909,1031,2.712,1097,2.123,1098,3.322,1153,2.96,1154,2.96,1166,1.749,1185,1.621,1192,2.96,1193,2.123,1196,2.123,1197,2.123,1217,2.123,1249,1.909,1256,4.937,1263,2.123,1264,2.123,1269,3.322,1270,2.96,1285,2.123,1306,2.123,1307,2.123,1324,2.123,1335,1.514,1336,3.469,1337,1.514,1346,3.322,1347,2.96,1366,1.749,1379,2.123,1380,2.123,1446,1.909,1448,1.909,1451,1.909,1456,1.749,1460,1.909,1504,2.96,1519,1.514,1528,1.514,1558,1.514,1560,1.909,1561,1.909,1601,2.123,1631,3.322,1635,3.322,1637,1.621,1642,2.123,1643,2.449,1644,2.449,1645,2.449,1646,2.449,1647,3.293,1648,7.113,1649,2.123,1650,7.531,1651,2.123,1652,6.001,1653,6.001,1654,6.001,1655,2.449,1656,1.909,1657,1.909,1658,2.123,1659,1.909,1660,4.544,1661,4.544,1662,2.123,1663,6.001,1664,1.909,1665,2.123,1666,1.909,1667,2.123,1668,1.909,1669,6.001,1670,6.644,1671,4.652,1672,4.652,1673,3.797,1674,2.449,1675,3.293,1676,2.449,1677,2.123,1678,2.449,1679,3.797,1680,2.449,1681,2.449,1682,2.449,1683,5.241,1684,2.449,1685,2.449,1686,2.449,1687,2.449,1688,2.449,1689,2.449,1690,2.123,1691,2.123,1692,4.085,1693,4.085,1694,2.123,1695,2.123,1696,2.449,1697,2.449]],["title/dependencies.html",[1698,2.836,1699,4.09]],["body/dependencies.html",[25,0.015,32,1.598,66,0.013,67,0.013,118,1.265,123,3.724,230,3.479,334,2.924,414,4.878,415,4.878,416,4.878,508,4.878,1012,4.878,1699,4.878,1700,8.05,1701,5.626,1702,5.626,1703,5.626,1704,6.756,1705,6.756,1706,4.878,1707,5.626,1708,5.626,1709,5.626,1710,5.626,1711,5.626,1712,5.626,1713,5.626,1714,5.626]],["title/miscellaneous/enumerations.html",[1715,1.795,1716,4.09]],["body/miscellaneous/enumerations.html",[9,0.197,25,0.015,40,1.437,66,0.012,67,0.012,142,2.319,145,1.871,154,1.725,178,1.657,429,4.043,557,4.497,649,4.255,651,2.845,917,3.976,1170,4.591,1184,5.012,1656,4.043,1657,5.694,1659,4.043,1715,2.845,1716,4.497,1717,6.429,1718,6.058,1719,4.497,1720,6.429,1721,6.987,1722,6.987,1723,6.987,1724,6.987,1725,5.186,1726,5.186,1727,5.186,1728,5.186,1729,5.186,1730,5.186,1731,4.497,1732,5.186,1733,5.186,1734,5.186,1735,5.186,1736,5.186,1737,5.186]],["title/miscellaneous/functions.html",[1715,1.795,1738,4.09]],["body/miscellaneous/functions.html",[9,0.181,18,0.676,23,0.518,24,0.269,25,0.015,45,1.252,49,3.207,66,0.011,67,0.011,75,2.239,78,2.779,79,3.886,80,5.284,107,2.012,108,1.407,178,1.522,214,2.664,215,2.263,287,2.769,300,2.769,307,3.344,321,3.769,325,4.156,328,4.156,346,2.769,348,4.034,356,4.131,368,2.769,377,3.402,382,5.827,917,2.946,958,4.131,1027,4.751,1077,4.131,1122,4.131,1553,5.284,1554,4.131,1662,4.131,1664,4.751,1665,4.131,1666,4.751,1667,4.131,1668,4.751,1690,4.131,1691,5.284,1692,3.714,1693,5.238,1694,5.827,1695,5.827,1715,2.614,1738,4.131,1739,4.764,1740,4.764,1741,4.764,1742,5.284,1743,4.764,1744,4.764,1745,7.488,1746,7.488,1747,4.764,1748,4.764,1749,4.764,1750,4.131,1751,4.764,1752,4.764,1753,4.764,1754,4.764]],["title/index.html",[9,0.124,1755,3.271,1756,3.271]],["body/index.html",[25,0.013,66,0.013,67,0.013,78,2.729,102,4.302,104,2.917,130,3.435,131,5.423,299,4.607,307,3.242,311,5.124,346,3.435,383,4.22,1134,5.124,1750,5.124,1757,5.91,1758,5.91,1759,5.91,1760,5.91,1761,5.91,1762,5.91,1763,5.91,1764,5.91,1765,5.91,1766,5.91,1767,5.91,1768,5.91,1769,6.957,1770,5.91,1771,5.91,1772,5.91]],["title/modules.html",[1773,4.645]],["body/modules.html",[25,0.014,66,0.014,67,0.014,1773,5.537]],["title/overview.html",[1774,4.645]],["body/overview.html",[2,1.105,25,0.013,66,0.013,67,0.013,70,2.256,304,3.251,448,5.424,519,3.636,893,4.141,1731,5.424,1774,5.424,1775,6.255]],["title/properties.html",[10,0.241,1698,2.836]],["body/properties.html",[10,0.324,25,0.014,66,0.014,67,0.014,1776,6.336,1777,6.336]],["title/miscellaneous/typealiases.html",[1715,1.795,1778,4.717]],["body/miscellaneous/typealiases.html",[6,2.53,7,2.054,8,2.472,9,0.234,24,0.234,25,0.014,34,2.684,35,1.335,36,1.389,66,0.013,67,0.013,1715,3.389,1779,6.177,1780,5.356]],["title/miscellaneous/variables.html",[1715,1.795,1781,4.09]],["body/miscellaneous/variables.html",[7,1.308,9,0.149,18,0.627,23,0.519,24,0.293,25,0.015,27,2.044,29,1.321,40,1.372,66,0.01,67,0.01,78,2.576,102,2.433,113,1.611,154,1.308,178,1.716,218,2.69,224,3.32,235,4.185,286,1.849,296,3.411,303,2.286,342,2.809,374,2.106,389,2.809,421,1.942,428,3.411,430,3.411,509,4.185,555,3.411,622,4.185,651,2.158,738,5.12,748,3.411,773,3.411,815,4.185,842,2.809,891,3.411,937,2.604,1098,3.834,1112,3.411,1168,3.066,1172,3.066,1175,3.066,1178,3.066,1180,3.066,1185,3.554,1397,4.655,1409,3.411,1446,4.185,1448,4.185,1451,4.185,1504,3.066,1516,2.604,1560,4.185,1561,4.185,1647,3.411,1649,4.655,1651,4.655,1656,3.066,1657,4.185,1658,3.411,1659,3.066,1660,3.411,1661,5.961,1664,3.066,1666,3.066,1668,3.066,1675,4.655,1677,5.3,1692,3.066,1693,4.765,1706,3.411,1715,2.158,1718,3.411,1719,3.411,1742,4.655,1780,5.961,1781,3.411,1782,5.369,1783,3.933,1784,3.933,1785,3.933,1786,3.933,1787,3.933,1788,3.933,1789,3.933,1790,3.933,1791,3.933,1792,5.369,1793,3.933,1794,3.933,1795,3.933,1796,3.933,1797,3.933,1798,3.933,1799,3.933,1800,3.933,1801,3.933,1802,3.933,1803,3.933,1804,3.933,1805,5.369,1806,3.933,1807,3.933,1808,3.933,1809,5.369,1810,3.933]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"components/HomeComponent.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"interfaces/ListItemObject.html":{},"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":286,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/CatPopulationComponent.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"components/SpotifyAPIComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":1044,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["0.0.0",{"_index":1777,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1045,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["0.5",{"_index":446,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["0/1",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["0/37",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["005cbb",{"_index":443,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["08",{"_index":1729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["0px",{"_index":1036,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["1",{"_index":893,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/SimplePaginatorComponent.html":{},"overview.html":{}}}],["1.0",{"_index":285,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/CatPopulationComponent.html":{}}}],["1.5rem",{"_index":1311,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["1/1",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1397,"title":{},"body":{"components/SimplePaginatorComponent.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":1256,"title":{},"body":{"injectables/LoadingService.html":{},"components/SimplePaginatorComponent.html":{},"injectables/SpotifyAPIService.html":{},"coverage.html":{}}}],["11.0.2",{"_index":1712,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":711,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["15",{"_index":427,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/SimplePaginatorComponent.html":{}}}],["17",{"_index":1731,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["19.0.1",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":752,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["2.3.0",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":428,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"miscellaneous/variables.html":{}}}],["22",{"_index":1733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["25",{"_index":429,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/SimplePaginatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["3",{"_index":757,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["3/3",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":430,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"miscellaneous/variables.html":{}}}],["34",{"_index":1775,"title":{},"body":{"overview.html":{}}}],["3qhr.json",{"_index":494,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["4.4.6",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["40a7ec852b9f4dbb9daaedd86ab8239a",{"_index":1549,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["43",{"_index":1730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["5",{"_index":1005,"title":{},"body":{"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{},"components/SimplePaginatorComponent.html":{}}}],["5/5",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1398,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["64",{"_index":717,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["7.0.0",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["70263a73066d41229e51903cd81bf9d9",{"_index":1556,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["8",{"_index":448,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"overview.html":{}}}],["8/8",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["86400000",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9/9",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["9999",{"_index":821,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["99998",{"_index":1728,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["99999",{"_index":1726,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["__v",{"_index":1345,"title":{},"body":{"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["_blank",{"_index":275,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["_characterslist",{"_index":1100,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["_filter",{"_index":586,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["_filter(value",{"_index":593,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["_getlistitemobject",{"_index":587,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["_getlistitemobject(value",{"_index":596,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["_id",{"_index":966,"title":{},"body":{"components/DisneyAPIComponent.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["_list",{"_index":455,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["_mapzipcodelistitem",{"_index":796,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["_mapzipcodelistitem(list",{"_index":800,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["_maxdate",{"_index":456,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["_mindate",{"_index":457,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["_search",{"_index":1413,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["_stations",{"_index":458,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["a58g.json",{"_index":811,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["abre",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["abrir",{"_index":1086,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["access_token",{"_index":1632,"title":{},"body":{"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{}}}],["accessors",{"_index":464,"title":{},"body":{"injectables/CatDammingsService.html":{},"injectables/DisneyAPIService.html":{}}}],["activatedroute",{"_index":1314,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["actual",{"_index":1136,"title":{},"body":{"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["actual_component",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["al",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{}}}],["album",{"_index":35,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"interfaces/ImageItemInfo.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/TypeOption.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["album_type",{"_index":11,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["albumes",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["albumresultitem",{"_index":1,"title":{"interfaces/AlbumResultItem.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"coverage.html":{}}}],["albumresultitem).artists?.map",{"_index":259,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["albumresultitem).release_date",{"_index":255,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["albumresultitem).total_tracks",{"_index":257,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["albums",{"_index":65,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SpotifyAPIComponent.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["albumsearchresponse",{"_index":64,"title":{"interfaces/AlbumSearchResponse.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"coverage.html":{}}}],["albumsearchresponse).albums",{"_index":1477,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["albumsearchresult",{"_index":63,"title":{"interfaces/AlbumSearchResult.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SpotifyAPIComponent.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"coverage.html":{}}}],["alias",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1779,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allies",{"_index":1342,"title":{},"body":{"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["altimage",{"_index":1078,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{}}}],["amountpages",{"_index":894,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["angular",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/BreakpointService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{},"index.html":{}}}],["angular/animations",{"_index":1012,"title":{},"body":{"components/DisneyAPIComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":331,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["angular/cdk/overlay",{"_index":1246,"title":{},"body":{"injectables/LoadingService.html":{}}}],["angular/cdk/portal",{"_index":1247,"title":{},"body":{"injectables/LoadingService.html":{}}}],["angular/common",{"_index":230,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":380,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"injectables/CatPopulationService.html":{},"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["angular/compiler",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":633,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["angular/forms",{"_index":32,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"components/CatPopulationComponent.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TypeOption.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":636,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["angular/material/button",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalWrapperComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["angular/material/card",{"_index":233,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/DisneyAPIComponent.html":{}}}],["angular/material/chips",{"_index":234,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/DisneyAPIComponent.html":{}}}],["angular/material/dialog",{"_index":413,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/DisneyAPIComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{}}}],["angular/material/expansion",{"_index":1365,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{}}}],["angular/material/form",{"_index":637,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{}}}],["angular/material/grid",{"_index":639,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["angular/material/icon",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["angular/material/input",{"_index":640,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{}}}],["angular/material/list",{"_index":1183,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["angular/material/paginator",{"_index":892,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"components/SpotifyAPIComponent.html":{}}}],["angular/material/progress",{"_index":1268,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["angular/material/select",{"_index":641,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["angular/material/sidenav",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["angular/material/stepper",{"_index":642,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["angular/material/table",{"_index":1014,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["angular/material/tabs",{"_index":643,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["angular/material/toolbar",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/platform",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"components/PageTitleComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":1007,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["animate('225ms",{"_index":1041,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["animation",{"_index":444,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["animations",{"_index":1033,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["anterior",{"_index":889,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"components/SimplePaginatorComponent.html":{}}}],["api",{"_index":917,"title":{},"body":{"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["api'},{'name",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["api.component.html",{"_index":919,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["api.component.scss",{"_index":920,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["api.component.ts",{"_index":916,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{},"coverage.html":{}}}],["api.component.ts:101",{"_index":973,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:102",{"_index":1006,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:103",{"_index":979,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:104",{"_index":978,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:105",{"_index":1003,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:106",{"_index":986,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:108",{"_index":1002,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:119",{"_index":1441,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:131",{"_index":1434,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:135",{"_index":952,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:139",{"_index":1436,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:141",{"_index":950,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:145",{"_index":1430,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:148",{"_index":949,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:153",{"_index":1432,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:159",{"_index":1439,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:163",{"_index":951,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:174",{"_index":962,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:180",{"_index":960,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:186",{"_index":948,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:191",{"_index":946,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:197",{"_index":959,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:202",{"_index":955,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:50",{"_index":1457,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:51",{"_index":1444,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:52",{"_index":1443,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:54",{"_index":1453,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:55",{"_index":1445,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:57",{"_index":1442,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:59",{"_index":1454,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:60",{"_index":1455,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:62",{"_index":1447,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:63",{"_index":1449,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:64",{"_index":1452,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:65",{"_index":1450,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:66",{"_index":980,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:67",{"_index":977,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:68",{"_index":1004,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:69",{"_index":965,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:71",{"_index":963,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:73",{"_index":987,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:75",{"_index":944,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:79",{"_index":1437,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["api.component.ts:85",{"_index":972,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:91",{"_index":975,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:92",{"_index":981,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:93",{"_index":984,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.component.ts:99",{"_index":985,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["api.constants",{"_index":237,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["api.constants.ts",{"_index":1661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api.model",{"_index":239,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"injectables/DisneyAPIService.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{}}}],["api.model.ts",{"_index":8,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api.service",{"_index":1025,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["api.service.ts",{"_index":1098,"title":{},"body":{"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api.service.ts:117",{"_index":1523,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["api.service.ts:145",{"_index":1538,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["api.service.ts:16",{"_index":1137,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["api.service.ts:21",{"_index":1133,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["api.service.ts:26",{"_index":1138,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["api.service.ts:28",{"_index":1550,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["api.service.ts:31",{"_index":1135,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["api.service.ts:32",{"_index":1557,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["api.service.ts:36",{"_index":1129,"title":{},"body":{"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["api.service.ts:40",{"_index":1548,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["api.service.ts:43",{"_index":1140,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["api.service.ts:44",{"_index":1513,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["api.service.ts:45",{"_index":1107,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["api.service.ts:57",{"_index":1116,"title":{},"body":{"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["api.service.ts:66",{"_index":1529,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["api.service.ts:67",{"_index":1109,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["api.service.ts:74",{"_index":1535,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["api.service.ts:77",{"_index":1123,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["api.service.ts:87",{"_index":1120,"title":{},"body":{"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["api/components/artist",{"_index":184,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"coverage.html":{}}}],["api/components/search",{"_index":1346,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["api/disney",{"_index":915,"title":{},"body":{"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"coverage.html":{}}}],["api/spotify",{"_index":7,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/TypeOption.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apliación",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["aplicación",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/functions.html":{}}}],["app",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["app.component.html",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":69,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1649,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["append('page",{"_index":1149,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["append('pagesize",{"_index":1148,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["application/x",{"_index":1587,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["applicationconfig",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aqu",{"_index":1772,"title":{},"body":{"index.html":{}}}],["array.from(codesmap.values",{"_index":838,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["artist",{"_index":36,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"interfaces/ImageItemInfo.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/TypeOption.html":{},"miscellaneous/typealiases.html":{}}}],["artist.name",{"_index":298,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["artista",{"_index":1543,"title":{},"body":{"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{}}}],["artistalbumdatacomponent",{"_index":139,"title":{"components/ArtistAlbumDataComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["artistas",{"_index":296,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"miscellaneous/variables.html":{}}}],["artistresultitem",{"_index":54,"title":{"interfaces/ArtistResultItem.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"coverage.html":{}}}],["artistresultitem).followers?.total",{"_index":251,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["artistresultitem).genres",{"_index":249,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["artistresultitem).popularity",{"_index":253,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["artistresultitembase",{"_index":26,"title":{"interfaces/ArtistResultItemBase.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"coverage.html":{}}}],["artists",{"_index":12,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SpotifyAPIComponent.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["artistsearchresponse",{"_index":62,"title":{"interfaces/ArtistSearchResponse.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"coverage.html":{}}}],["artistsearchresponse).artists",{"_index":1476,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["artistsearchresult",{"_index":60,"title":{"interfaces/ArtistSearchResult.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SpotifyAPIComponent.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"coverage.html":{}}}],["artistslist",{"_index":195,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["async",{"_index":769,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["asyncpipe",{"_index":558,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SimplePaginatorComponent.html":{}}}],["atracciones",{"_index":993,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["autenticación",{"_index":1524,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["available_markets",{"_index":13,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["añadidos",{"_index":1128,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["años",{"_index":712,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["backgroundcolor",{"_index":442,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["barcelona",{"_index":1721,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["barchartdata",{"_index":399,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["barchartoptions",{"_index":400,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["barpercentage",{"_index":445,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["base_url",{"_index":1506,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["basechartdirective",{"_index":396,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["baseurl",{"_index":1101,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["behaviorsubject",{"_index":485,"title":{},"body":{"injectables/CatDammingsService.html":{},"injectables/DisneyAPIService.html":{}}}],["behaviorsubject(undefined",{"_index":486,"title":{},"body":{"injectables/CatDammingsService.html":{},"injectables/DisneyAPIService.html":{}}}],["bezier(0.4",{"_index":1043,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["bigger",{"_index":266,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["bigger?.width",{"_index":271,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["body",{"_index":1582,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["boolean",{"_index":209,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"injectables/BreakpointService.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ListItemObject.html":{},"components/SimplePaginatorComponent.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["borderbottom",{"_index":742,"title":{},"body":{"components/CatPopulationComponent.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ListItemObject.html":{}}}],["borderradius",{"_index":447,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["borderwidth",{"_index":449,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["borra",{"_index":354,"title":{},"body":{"injectables/CacheService.html":{}}}],["breakpoint",{"_index":323,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["breakpointobserver",{"_index":315,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["breakpoints",{"_index":310,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["breakpointservice",{"_index":303,"title":{"injectables/BreakpointService.html":{}},"body":{"injectables/BreakpointService.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SimplePaginatorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["browser",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["buildform",{"_index":1351,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{}}}],["buscar",{"_index":1377,"title":{},"body":{"components/SearchFilterComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{}}}],["búqueda",{"_index":1542,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["búsqueda",{"_index":1540,"title":{},"body":{"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{}}}],["cach",{"_index":356,"title":{},"body":{"injectables/CacheService.html":{},"miscellaneous/functions.html":{}}}],["cachear",{"_index":344,"title":{},"body":{"injectables/CacheService.html":{}}}],["cacheinterceptor",{"_index":1664,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["cacheinterceptor(req",{"_index":1744,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cacheservice",{"_index":342,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cadena",{"_index":1201,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{},"injectables/SpotifyAPIService.html":{}}}],["caducado",{"_index":1515,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["caducidad",{"_index":1521,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["cambian",{"_index":877,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["cambiar",{"_index":880,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["campo",{"_index":1626,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["carga",{"_index":1117,"title":{},"body":{"injectables/DisneyAPIService.html":{},"injectables/LoadingService.html":{}}}],["cargando",{"_index":1240,"title":{},"body":{"injectables/LoadingService.html":{}}}],["cat",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cat_dammings",{"_index":1737,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cat_population",{"_index":1735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cataluña",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catdammingscomponent",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["catdammingshistoricchartcomponent",{"_index":144,"title":{"components/CatDammingsHistoricChartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["catdammingsservice",{"_index":452,"title":{"injectables/CatDammingsService.html":{}},"body":{"injectables/CatDammingsService.html":{},"coverage.html":{}}}],["catpopulationcomponent",{"_index":148,"title":{"components/CatPopulationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["catpopulationservice",{"_index":571,"title":{"injectables/CatPopulationService.html":{}},"body":{"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"coverage.html":{}}}],["cdr",{"_index":921,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["cerrar",{"_index":1304,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["changedetection",{"_index":393,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["changedetectionstrategy",{"_index":411,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":394,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["changedetectorref",{"_index":964,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["changepage",{"_index":1422,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["changepage(event",{"_index":1428,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["changepagelimit",{"_index":1423,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["changepagelimit(pagelimit",{"_index":1431,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["changepagesize",{"_index":938,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SimplePaginatorComponent.html":{}}}],["changepagesize(value",{"_index":945,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["changes",{"_index":851,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["characters",{"_index":922,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["characterslist",{"_index":1106,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["chart",{"_index":395,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["chart'},{'name",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["chart.component.html",{"_index":397,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["chart.component.scss",{"_index":398,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["chart.component.ts",{"_index":392,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:23",{"_index":409,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["chart.component.ts:25",{"_index":410,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["chart.component.ts:27",{"_index":404,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["chart.component.ts:28",{"_index":406,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["chart.component.ts:30",{"_index":402,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["chart.js",{"_index":414,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"dependencies.html":{}}}],["chart/historic",{"_index":391,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"coverage.html":{}}}],["chartdata",{"_index":403,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["chartoptions",{"_index":405,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["charts",{"_index":416,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"dependencies.html":{}}}],["checktoken",{"_index":1508,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["cierra",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["city",{"_index":684,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["cityform",{"_index":572,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["citysearchcode",{"_index":573,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["cityselected",{"_index":574,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["cityselected.codi_postal",{"_index":781,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["cityselected.nom_municipi",{"_index":780,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["ciudad",{"_index":772,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["class",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{}}}],["clear",{"_index":1608,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["clearform",{"_index":1605,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["client",{"_index":1507,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["cliente",{"_index":1551,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["close",{"_index":1294,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["close(value",{"_index":1296,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["code",{"_index":738,"title":{},"body":{"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"miscellaneous/variables.html":{}}}],["code.codi_municipi",{"_index":764,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["codes",{"_index":746,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["codes.constants",{"_index":652,"title":{},"body":{"components/CatPopulationComponent.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["codes.constants.ts",{"_index":1657,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["codes.includes(item.codi_postal[0].slice(0",{"_index":751,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["codes.model",{"_index":657,"title":{},"body":{"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{}}}],["codes.model.ts",{"_index":1635,"title":{},"body":{"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"coverage.html":{}}}],["codes.pipe",{"_index":660,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["codes.pipe.ts",{"_index":1197,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{},"coverage.html":{}}}],["codes.pipe.ts:16",{"_index":1210,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["codes.push(zip_codes.tremp",{"_index":749,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["codesmap",{"_index":827,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["codesmap.get(item.codi_municipi)?.codi_postal",{"_index":831,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["codesmap.has(item.codi_municipi",{"_index":829,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["codesmap.set(item.codi_municipi",{"_index":832,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["codi",{"_index":1325,"title":{},"body":{"interfaces/PopulationDataResponse.html":{}}}],["codi_municipi",{"_index":833,"title":{},"body":{"injectables/CatPopulationService.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["codi_postal",{"_index":834,"title":{},"body":{"injectables/CatPopulationService.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["collapsed",{"_index":1040,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["column",{"_index":1082,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["column.id",{"_index":789,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["column.value",{"_index":791,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["columnstitles",{"_index":923,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["columnstitles[\"imageurl",{"_index":1087,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["columnstitles[\"sourceurl",{"_index":1085,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["columnstitles[column",{"_index":1083,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["como",{"_index":1142,"title":{},"body":{"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["component",{"_index":68,"title":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["componente",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/LoadingService.html":{}}}],["componentes",{"_index":1760,"title":{},"body":{"index.html":{}}}],["componentportal",{"_index":1241,"title":{},"body":{"injectables/LoadingService.html":{}}}],["componentportal(loadingspinnercomponent",{"_index":1259,"title":{},"body":{"injectables/LoadingService.html":{}}}],["components",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"overview.html":{}}}],["components/artist",{"_index":1459,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["components/data",{"_index":1015,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["components/drawer",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["components/loading",{"_index":1248,"title":{},"body":{"injectables/LoadingService.html":{}}}],["components/modal",{"_index":417,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/DisneyAPIComponent.html":{}}}],["components/page",{"_index":646,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/HomeComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["components/search",{"_index":1030,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["components/simple",{"_index":1020,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["comprobar",{"_index":308,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["comprueba",{"_index":1514,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["computed",{"_index":629,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["comunes",{"_index":1126,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["con",{"_index":365,"title":{},"body":{"injectables/CacheService.html":{},"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/SpotifyAPIService.html":{}}}],["const",{"_index":524,"title":{},"body":{"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{},"components/PageTitleComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{}}}],["constants/cat",{"_index":650,"title":{},"body":{"components/CatPopulationComponent.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["constants/common.constants",{"_index":510,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["constants/routes.constants",{"_index":1186,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"components/PageTitleComponent.html":{}}}],["constants/spotify",{"_index":236,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["constructor",{"_index":317,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"injectables/LoadingService.html":{},"interfaces/MenuItem.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{}}}],["contendr",{"_index":1233,"title":{},"body":{"injectables/LoadingService.html":{}}}],["contenedor",{"_index":1231,"title":{},"body":{"injectables/LoadingService.html":{}}}],["content",{"_index":1586,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["context",{"_index":822,"title":{},"body":{"injectables/CatPopulationService.html":{},"injectables/SpotifyAPIService.html":{}}}],["context.util",{"_index":817,"title":{},"body":{"injectables/CatPopulationService.html":{},"injectables/SpotifyAPIService.html":{}}}],["context.util.ts",{"_index":1693,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["contexto",{"_index":1553,"title":{},"body":{"injectables/SpotifyAPIService.html":{},"miscellaneous/functions.html":{}}}],["controlar",{"_index":1218,"title":{},"body":{"injectables/LoadingService.html":{}}}],["corresponde",{"_index":324,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["cortos",{"_index":995,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["count",{"_index":1339,"title":{},"body":{"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["coverage",{"_index":1642,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":1230,"title":{},"body":{"injectables/LoadingService.html":{}}}],["createdat",{"_index":1343,"title":{},"body":{"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["createoverlay",{"_index":1225,"title":{},"body":{"injectables/LoadingService.html":{}}}],["cuando",{"_index":876,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"injectables/LoadingService.html":{}}}],["cubic",{"_index":1042,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["current",{"_index":267,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["current?.width",{"_index":272,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["currentpage",{"_index":924,"title":{},"body":{"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/SimplePaginatorComponent.html":{}}}],["currentpostalcodes",{"_index":830,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["currenttime",{"_index":1576,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["currentvalue",{"_index":536,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["custompaginatorintl",{"_index":842,"title":{"injectables/CustomPaginatorIntl.html":{}},"body":{"injectables/CustomPaginatorIntl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["códigos",{"_index":1199,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["d25b.json",{"_index":808,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["dammings",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dammings'},{'name",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["dammings.component.ts",{"_index":1675,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dammings.model",{"_index":422,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{}}}],["dammings.model.ts",{"_index":897,"title":{},"body":{"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{},"coverage.html":{}}}],["dammings.service.ts",{"_index":454,"title":{},"body":{"injectables/CatDammingsService.html":{},"coverage.html":{}}}],["dammings.service.ts:107",{"_index":475,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:16",{"_index":495,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:19",{"_index":492,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:21",{"_index":488,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:23",{"_index":489,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:25",{"_index":490,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:27",{"_index":487,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:30",{"_index":497,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:33",{"_index":499,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:36",{"_index":501,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:39",{"_index":503,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:41",{"_index":469,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:47",{"_index":470,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:57",{"_index":484,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:66",{"_index":478,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings.service.ts:97",{"_index":482,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["dammings/cat",{"_index":421,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dammings/components/historic",{"_index":390,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"coverage.html":{}}}],["dammingsinfoitem",{"_index":511,"title":{"interfaces/DammingsInfoItem.html":{}},"body":{"injectables/CatDammingsService.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{},"coverage.html":{}}}],["dammingsinforesponse",{"_index":473,"title":{"interfaces/DammingsInfoResponse.html":{}},"body":{"injectables/CatDammingsService.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{},"coverage.html":{}}}],["data",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["data'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["data.html",{"_index":193,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.id",{"_index":784,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["data.map((item",{"_index":530,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["data.next",{"_index":1481,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["data.previous",{"_index":1479,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["data.rows",{"_index":786,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["data.scss",{"_index":194,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.total",{"_index":1483,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["data.ts",{"_index":186,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"coverage.html":{}}}],["data.ts:27",{"_index":210,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:28",{"_index":208,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:30",{"_index":222,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:31",{"_index":221,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:32",{"_index":226,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:33",{"_index":223,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:34",{"_index":228,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:35",{"_index":227,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:36",{"_index":229,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:37",{"_index":219,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:39",{"_index":225,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:41",{"_index":211,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:49",{"_index":216,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:71",{"_index":217,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data.ts:88",{"_index":213,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["data/artist",{"_index":185,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/SpotifyAPIComponent.html":{},"coverage.html":{}}}],["datanotfoundcomponent",{"_index":150,"title":{"components/DataNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["datasets",{"_index":434,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["datasource",{"_index":925,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["date",{"_index":291,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"injectables/CatDammingsService.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{}}}],["date().gettime",{"_index":1563,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["date(item.dia",{"_index":532,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["date.gettime",{"_index":537,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["datepipe",{"_index":190,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["datos",{"_index":360,"title":{},"body":{"injectables/CacheService.html":{},"components/DataNotFoundComponent.html":{},"injectables/SpotifyAPIService.html":{}}}],["de",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatPopulationComponent.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["decimalpipe",{"_index":189,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/CatPopulationComponent.html":{}}}],["decorators",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CatPopulationComponent.html":{}}}],["default",{"_index":218,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"components/ModalImageViewerComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{}}}],["del",{"_index":849,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{}}}],["deletecache",{"_index":349,"title":{},"body":{"injectables/CacheService.html":{}}}],["deletecache(key",{"_index":352,"title":{},"body":{"injectables/CacheService.html":{}}}],["demo",{"_index":1769,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":1699,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["desarollo",{"_index":1763,"title":{},"body":{"index.html":{}}}],["description",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"injectables/SpotifyAPIService.html":{},"miscellaneous/functions.html":{}}}],["destroyref",{"_index":575,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["devuelve",{"_index":321,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{},"miscellaneous/functions.html":{}}}],["dia",{"_index":898,"title":{},"body":{"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{}}}],["dialog",{"_index":926,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["dialogref",{"_index":1293,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["diferentes",{"_index":311,"title":{},"body":{"injectables/BreakpointService.html":{},"index.html":{}}}],["directive",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["directives",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["disablenext",{"_index":1385,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["disablenextpage",{"_index":927,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["disableprevious",{"_index":1386,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["disablepreviouspage",{"_index":928,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["disney",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["disney_api",{"_index":1734,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disneyapicomponent",{"_index":153,"title":{"components/DisneyAPIComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["disneyapiservice",{"_index":929,"title":{"injectables/DisneyAPIService.html":{}},"body":{"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"coverage.html":{}}}],["displayedcolumns",{"_index":930,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["displayedcolumnswithexpand",{"_index":931,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["displayfn",{"_index":576,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["dispositivo",{"_index":329,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["dispositivos",{"_index":312,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["documentation",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["dones_de_0_a_14_anys",{"_index":1326,"title":{},"body":{"interfaces/PopulationDataResponse.html":{}}}],["dones_de_15_a_64_anys",{"_index":1327,"title":{},"body":{"interfaces/PopulationDataResponse.html":{}}}],["dones_de_65_anys_i_m_s",{"_index":1328,"title":{},"body":{"interfaces/PopulationDataResponse.html":{}}}],["drawer",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["drawermenucomponent",{"_index":91,"title":{"components/DrawerMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["drawerref",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["dynamic",{"_index":1706,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["effect",{"_index":1013,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["ejecutar",{"_index":1764,"title":{},"body":{"index.html":{}}}],["el",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{},"index.html":{}}}],["element",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["element[column",{"_index":1084,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["element[itemexpandedinfo.field",{"_index":1096,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["elementos",{"_index":1203,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"components/SimplePaginatorComponent.html":{}}}],["elemntos",{"_index":1204,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["embalsado",{"_index":441,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["embalses",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emite",{"_index":875,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["emitreset",{"_index":1354,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{}}}],["emitsearch",{"_index":1355,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{}}}],["en",{"_index":300,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/CustomPaginatorIntl.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/SpotifyAPIService.html":{},"miscellaneous/functions.html":{}}}],["encontrado",{"_index":913,"title":{},"body":{"components/DataNotFoundComponent.html":{}}}],["enemies",{"_index":989,"title":{},"body":{"components/DisneyAPIComponent.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["enemigos",{"_index":988,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["enlace",{"_index":1748,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entrada",{"_index":355,"title":{},"body":{"injectables/CacheService.html":{}}}],["enumerations",{"_index":1716,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["errorloading",{"_index":1640,"title":{},"body":{"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["es",{"_index":287,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"injectables/BreakpointService.html":{},"components/CatPopulationComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"components/SearchFilterComponent.html":{},"components/SpotifySearchFormComponent.html":{},"miscellaneous/functions.html":{}}}],["esta",{"_index":869,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"injectables/LoadingService.html":{}}}],["establece",{"_index":1124,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["estaci",{"_index":899,"title":{},"body":{"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{}}}],["etiquetas",{"_index":878,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["event",{"_index":956,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["event.pageindex",{"_index":1492,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["event.pagesize",{"_index":1487,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["event.preventdefault",{"_index":1623,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["event.previouspageindex",{"_index":1491,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["event.stoppropagation",{"_index":1076,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["eventcoalescing",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1356,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["expand",{"_index":983,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["expanded",{"_index":1039,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["expandedelement",{"_index":932,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["expires_in",{"_index":1633,"title":{},"body":{"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{}}}],["expiretime",{"_index":1573,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"components/HomeComponent.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"interfaces/ListItemObject.html":{},"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["extends",{"_index":55,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/StationItem.html":{},"interfaces/TypeOption.html":{}}}],["external_url_spotify_key",{"_index":235,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["external_urls",{"_index":14,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["externo",{"_index":1749,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":224,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/CatPopulationComponent.html":{},"injectables/LoadingService.html":{},"components/SimplePaginatorComponent.html":{},"injectables/SpotifyAPIService.html":{},"miscellaneous/variables.html":{}}}],["fecha",{"_index":289,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["field",{"_index":638,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"components/HomeComponent.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"interfaces/ListItemObject.html":{},"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"coverage.html":{}}}],["films",{"_index":991,"title":{},"body":{"components/DisneyAPIComponent.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["filter",{"_index":644,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{}}}],["filter'},{'name",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["filter((code",{"_index":737,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["filter.component",{"_index":1032,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["filter.component.html",{"_index":1350,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{}}}],["filter.component.ts",{"_index":1347,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"coverage.html":{}}}],["filter.component.ts:35",{"_index":1358,"title":{},"body":{"components/SearchFilterComponent.html":{}}}],["filter.component.ts:36",{"_index":1357,"title":{},"body":{"components/SearchFilterComponent.html":{}}}],["filter.component.ts:38",{"_index":1363,"title":{},"body":{"components/SearchFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":1360,"title":{},"body":{"components/SearchFilterComponent.html":{}}}],["filter.component.ts:44",{"_index":1359,"title":{},"body":{"components/SearchFilterComponent.html":{}}}],["filter.component.ts:53",{"_index":1362,"title":{},"body":{"components/SearchFilterComponent.html":{}}}],["filter.component.ts:59",{"_index":1361,"title":{},"body":{"components/SearchFilterComponent.html":{}}}],["filter/search",{"_index":1031,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"coverage.html":{}}}],["filter_province_options",{"_index":622,"title":{},"body":{"components/CatPopulationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filterbyprovincecode",{"_index":588,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["filtercharacters",{"_index":1102,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["filtercharacters(name",{"_index":1108,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["filteredinfoitem",{"_index":904,"title":{"interfaces/FilteredInfoItem.html":{}},"body":{"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{},"coverage.html":{}}}],["filteredinfoitemdate",{"_index":407,"title":{"interfaces/FilteredInfoItemDate.html":{}},"body":{"components/CatDammingsHistoricChartComponent.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{},"coverage.html":{}}}],["filterform",{"_index":903,"title":{"interfaces/FilterForm.html":{}},"body":{"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{},"coverage.html":{}}}],["filtersearch",{"_index":933,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["filtrada",{"_index":1113,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["filtrar",{"_index":1115,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["filtro",{"_index":1373,"title":{},"body":{"components/SearchFilterComponent.html":{}}}],["final",{"_index":1410,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["firstpage",{"_index":1387,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["firstpagelabel",{"_index":852,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["flotantes",{"_index":1232,"title":{},"body":{"injectables/LoadingService.html":{}}}],["followers",{"_index":56,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["font",{"_index":1309,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["for(artist",{"_index":297,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["for(column",{"_index":788,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{}}}],["for(genre",{"_index":280,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["for(item",{"_index":1095,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["for(itemexpandedinfo",{"_index":1091,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["for(row",{"_index":785,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["form",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{}}}],["form.component",{"_index":1461,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["form.component.html",{"_index":1602,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["form.component.scss",{"_index":1603,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["form.component.ts",{"_index":1601,"title":{},"body":{"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:33",{"_index":1609,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["form.component.ts:34",{"_index":1610,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["form.component.ts:37",{"_index":1617,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["form.component.ts:39",{"_index":1618,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["form.component.ts:54",{"_index":1615,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["form.component.ts:58",{"_index":1614,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["form.component.ts:71",{"_index":1611,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["form.component.ts:76",{"_index":1616,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["form.component.ts:87",{"_index":1613,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["form.controls.name.haserror('required",{"_index":1375,"title":{},"body":{"components/SearchFilterComponent.html":{}}}],["form.controls.name.haserror(\\'required",{"_index":1378,"title":{},"body":{"components/SearchFilterComponent.html":{}}}],["form/spotify",{"_index":1460,"title":{},"body":{"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["formatedpopulationdata",{"_index":577,"title":{"interfaces/FormatedPopulationData.html":{}},"body":{"components/CatPopulationComponent.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ListItemObject.html":{},"coverage.html":{}}}],["formbuilder",{"_index":578,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["formcontrol",{"_index":31,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"components/CatPopulationComponent.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TypeOption.html":{}}}],["formcontrol(undefined",{"_index":685,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["formgroup",{"_index":609,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{}}}],["formsmodule",{"_index":561,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{}}}],["found",{"_index":908,"title":{},"body":{"components/DataNotFoundComponent.html":{}}}],["found'},{'name",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["found.component",{"_index":1016,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["found.component.html",{"_index":909,"title":{},"body":{"components/DataNotFoundComponent.html":{}}}],["found.component.scss",{"_index":910,"title":{},"body":{"components/DataNotFoundComponent.html":{}}}],["found.component.ts",{"_index":907,"title":{},"body":{"components/DataNotFoundComponent.html":{},"coverage.html":{}}}],["found/data",{"_index":906,"title":{},"body":{"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{},"coverage.html":{}}}],["fuende",{"_index":969,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["function",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1738,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generos",{"_index":279,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["genre",{"_index":282,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["genres",{"_index":58,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["get(`${this.baseurl}/character",{"_index":1150,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["get(`${this.zipcodesapiurl",{"_index":824,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["get(this.url",{"_index":518,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["getallcharacters",{"_index":1103,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["getcache",{"_index":350,"title":{},"body":{"injectables/CacheService.html":{}}}],["getcache(key",{"_index":358,"title":{},"body":{"injectables/CacheService.html":{}}}],["getcharacterslist",{"_index":1139,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["gethttprequest",{"_index":1104,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["gethttprequest(params",{"_index":1119,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["getlist",{"_index":502,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["getmaxdate",{"_index":496,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["getmindate",{"_index":498,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["getpopulationdata",{"_index":797,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["getpopulationdata(code",{"_index":803,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["getrangelabel",{"_index":857,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["getrangelabel(page",{"_index":858,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["getstations",{"_index":500,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["gettimeinseconds",{"_index":1509,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["getting",{"_index":1755,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1510,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["gettokenstring",{"_index":1511,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["gettokenstring(token",{"_index":1527,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["getzipcodes",{"_index":798,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["girona",{"_index":1724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gopage",{"_index":939,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SimplePaginatorComponent.html":{}}}],["gopage(value",{"_index":947,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["gotoexternallink",{"_index":1027,"title":{},"body":{"components/DisneyAPIComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gotoexternallink(link",{"_index":1077,"title":{},"body":{"components/DisneyAPIComponent.html":{},"miscellaneous/functions.html":{}}}],["grant_type=client_credentials&client_id=${this.client}&client_secret=${this.key",{"_index":1583,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["gráfico",{"_index":1219,"title":{},"body":{"injectables/LoadingService.html":{}}}],["guarda",{"_index":372,"title":{},"body":{"injectables/CacheService.html":{},"injectables/SpotifyAPIService.html":{}}}],["guardada",{"_index":361,"title":{},"body":{"injectables/CacheService.html":{}}}],["guardado",{"_index":1517,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["h3",{"_index":1308,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["ha",{"_index":384,"title":{},"body":{"injectables/CacheService.html":{},"injectables/SpotifyAPIService.html":{}}}],["hace",{"_index":1539,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["hacer",{"_index":1505,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["han",{"_index":912,"title":{},"body":{"components/DataNotFoundComponent.html":{}}}],["handlechangepagesize",{"_index":1384,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["handlechangepagesize(data",{"_index":1403,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["handlecityselected",{"_index":589,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["handlecityselected(item",{"_index":601,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["handleclear",{"_index":1424,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["handlesearch",{"_index":1425,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["handlesearch(searchvalues",{"_index":1435,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["handlesearchenter",{"_index":1606,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["handlesearchenter(event",{"_index":1612,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["hasbackdrop",{"_index":1257,"title":{},"body":{"injectables/LoadingService.html":{}}}],["headers",{"_index":1585,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["height",{"_index":44,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"components/DisneyAPIComponent.html":{},"interfaces/ImageItemInfo.html":{},"injectables/LoadingService.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["historic",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["home",{"_index":1170,"title":{},"body":{"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["home'},{'name",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["home.component.html",{"_index":1194,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":158,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["homes_de_0_a_14_anys",{"_index":1329,"title":{},"body":{"interfaces/PopulationDataResponse.html":{}}}],["homes_de_15_a_64_anys",{"_index":1330,"title":{},"body":{"interfaces/PopulationDataResponse.html":{}}}],["homes_de_65_anys_i_m_s",{"_index":1331,"title":{},"body":{"interfaces/PopulationDataResponse.html":{}}}],["href",{"_index":15,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["html",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["http",{"_index":348,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{},"miscellaneous/functions.html":{}}}],["http://localhost:4200",{"_index":1768,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":491,"title":{},"body":{"injectables/CatDammingsService.html":{},"injectables/CatPopulationService.html":{},"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["httpcontext",{"_index":813,"title":{},"body":{"injectables/CatPopulationService.html":{},"injectables/SpotifyAPIService.html":{}}}],["httpcontext().set(no_cache",{"_index":823,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["httpcontext().set(spotify_request",{"_index":1552,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["httpcontexttoken",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httphandlerfn",{"_index":1746,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpinterceptorfn",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpparams",{"_index":814,"title":{},"body":{"injectables/CatPopulationService.html":{},"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["httpparams().append('$limit",{"_index":820,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["httpparams().append('codi",{"_index":839,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["httpparams().append('q",{"_index":1594,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["httprequest",{"_index":1745,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpresponse",{"_index":362,"title":{},"body":{"injectables/CacheService.html":{}}}],["https://analisi.transparenciacatalunya.cat/resource/b4rr",{"_index":807,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["https://analisi.transparenciacatalunya.cat/resource/gn9e",{"_index":493,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["https://analisi.transparenciacatalunya.cat/resource/tp8v",{"_index":810,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["https://api.disneyapi.dev",{"_index":1132,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["https://api.spotify.com/v1",{"_index":1547,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["i.dia.tolocaledatestring()).reverse",{"_index":433,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["icon",{"_index":1169,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["id",{"_index":16,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DisneyAPIComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ListItemObject.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/StationItem.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["id_estaci",{"_index":535,"title":{},"body":{"injectables/CatDammingsService.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{}}}],["identificador",{"_index":1636,"title":{},"body":{"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["identifier",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["idioma",{"_index":881,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["if(!loadingservice.isloading",{"_index":1080,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["if(artistslist.length",{"_index":295,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["if(breakpointservice.ishandsetportrait",{"_index":768,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["if(cityselected",{"_index":779,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["if(column.value",{"_index":790,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["if(datasource.length",{"_index":1081,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["if(element[itemexpandedinfo.field].length",{"_index":1093,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["if(form",{"_index":1374,"title":{},"body":{"components/SearchFilterComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["if(form.controls.search.haserror('required",{"_index":1625,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["if(form.controls.search.haserror(\\'required",{"_index":1629,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["if(form.controls.type.haserror('required",{"_index":1628,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["if(form.controls.type.haserror(\\'required",{"_index":1630,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["if(formatedpopulationdata",{"_index":783,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["if(genres.length",{"_index":278,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["if(image",{"_index":277,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["if(isartist",{"_index":283,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["if(result",{"_index":1499,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["if(showfirstlastpage",{"_index":1408,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["if(spotifyurl",{"_index":301,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["if(title",{"_index":1303,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["if(totalitems",{"_index":1500,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["if(url",{"_index":1284,"title":{},"body":{"components/ModalImageViewerComponent.html":{}}}],["image",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["image.width",{"_index":270,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["imageiteminfo",{"_index":28,"title":{"interfaces/ImageItemInfo.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"coverage.html":{}}}],["imagen",{"_index":971,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["images",{"_index":17,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["imageurl",{"_index":970,"title":{},"body":{"components/DisneyAPIComponent.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["implements",{"_index":187,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"components/HomeComponent.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["imports",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ListItemObject.html":{},"injectables/LoadingService.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicador",{"_index":1239,"title":{},"body":{"injectables/LoadingService.html":{}}}],["indicar",{"_index":1554,"title":{},"body":{"injectables/SpotifyAPIService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"components/HomeComponent.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"interfaces/ListItemObject.html":{},"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["info.name",{"_index":276,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["información",{"_index":366,"title":{},"body":{"injectables/CacheService.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{}}}],["informaciónm",{"_index":1536,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["iniciar",{"_index":1530,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["inicio",{"_index":1409,"title":{},"body":{"components/SimplePaginatorComponent.html":{},"miscellaneous/variables.html":{}}}],["initeffects",{"_index":940,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["initform",{"_index":590,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["initial_list_limit",{"_index":1446,"title":{},"body":{"components/SpotifyAPIComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initial_list_offset",{"_index":1448,"title":{},"body":{"components/SpotifyAPIComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialvalue",{"_index":698,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["initsignals",{"_index":591,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["inject",{"_index":332,"title":{},"body":{"injectables/BreakpointService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"injectables/LoadingService.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{}}}],["inject(activatedroute",{"_index":1319,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["inject(breakpointobserver",{"_index":337,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["inject(breakpointservice",{"_index":673,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SimplePaginatorComponent.html":{}}}],["inject(catpopulationservice",{"_index":665,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["inject(changedetectorref",{"_index":1053,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["inject(decimalpipe",{"_index":675,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["inject(destroyref",{"_index":669,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["inject(disneyapiservice",{"_index":1047,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["inject(formbuilder",{"_index":667,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["inject(httpclient",{"_index":517,"title":{},"body":{"injectables/CatDammingsService.html":{},"injectables/CatPopulationService.html":{},"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["inject(injector",{"_index":617,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["inject(joinpostalcodespipe",{"_index":671,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["inject(loadingservice",{"_index":1051,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["inject(mat_dialog_data",{"_index":408,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{}}}],["inject(matdialog",{"_index":1049,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["inject(matdialogref",{"_index":1301,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["inject(overlay",{"_index":1252,"title":{},"body":{"injectables/LoadingService.html":{}}}],["inject(router",{"_index":1188,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["inject(spotifyapiservice",{"_index":1463,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["injectable",{"_index":302,"title":{"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{}},"body":{"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{},"coverage.html":{}}}],["injectables",{"_index":304,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{},"overview.html":{}}}],["injector",{"_index":579,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["input",{"_index":231,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalWrapperComponent.html":{},"components/SimplePaginatorComponent.html":{}}}],["inputs",{"_index":205,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/DrawerMenuComponent.html":{},"components/ModalWrapperComponent.html":{},"components/SimplePaginatorComponent.html":{}}}],["interceptors",{"_index":1651,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ListItemObject.html":{},"interfaces/MenuItem.html":{},"interfaces/ModalImageViewerData.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ListItemObject.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ListItemObject.html":{},"interfaces/MenuItem.html":{},"interfaces/ModalImageViewerData.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"overview.html":{}}}],["interop",{"_index":634,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["intl.service.ts",{"_index":845,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"coverage.html":{}}}],["intl.service.ts:13",{"_index":885,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["intl.service.ts:17",{"_index":883,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["intl.service.ts:21",{"_index":887,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["intl.service.ts:25",{"_index":888,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["intl.service.ts:29",{"_index":890,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["intl.service.ts:33",{"_index":874,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["intl.service.ts:42",{"_index":861,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["io",{"_index":847,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["isartist",{"_index":206,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["isbigger",{"_index":269,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["ishandsetportrait",{"_index":316,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["isloading",{"_index":1221,"title":{},"body":{"injectables/LoadingService.html":{}}}],["isnumber",{"_index":743,"title":{},"body":{"components/CatPopulationComponent.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ListItemObject.html":{}}}],["isok",{"_index":1571,"title":{},"body":{"injectables/SpotifyAPIService.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{}}}],["istitle",{"_index":744,"title":{},"body":{"components/CatPopulationComponent.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ListItemObject.html":{}}}],["istitleleft",{"_index":745,"title":{},"body":{"components/CatPopulationComponent.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ListItemObject.html":{}}}],["item",{"_index":260,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/PageTitleComponent.html":{},"components/SimplePaginatorComponent.html":{}}}],["item.any",{"_index":704,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["item.codi_municipi",{"_index":755,"title":{},"body":{"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{}}}],["item.codi_municipi.includes(value",{"_index":761,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["item.codi_postal",{"_index":835,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["item.dones_de_0_a_14_anys",{"_index":715,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["item.dones_de_15_a_64_anys",{"_index":719,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["item.estaci",{"_index":546,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["item.external_urls[external_url_spotify_key",{"_index":262,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["item.homes_de_0_a_14_anys",{"_index":714,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["item.homes_de_15_a_64_anys",{"_index":718,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["item.homes_de_65_anys_i_m_s",{"_index":724,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["item.icon",{"_index":1190,"title":{},"body":{"components/DrawerMenuComponent.html":{}}}],["item.id",{"_index":1503,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["item.name",{"_index":261,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["item.nom_municipi",{"_index":837,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["item.nom_municipi.tolocalelowercase().includes(value.tolowercase",{"_index":760,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["item.option.value",{"_index":765,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["item.title",{"_index":1191,"title":{},"body":{"components/DrawerMenuComponent.html":{}}}],["item.total_de_15_a_64_anys",{"_index":720,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["item.total_de_65_anys_i_m_s",{"_index":716,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["item[0",{"_index":1322,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["itemexpandedinfo",{"_index":1092,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["itemexpandedinfo.title",{"_index":1094,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["items",{"_index":61,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["itemsexpandedinfo",{"_index":934,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["itemslist",{"_index":1638,"title":{},"body":{"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["itemsperpagelabel",{"_index":853,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["itemstation",{"_index":550,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["itemstation.name",{"_index":551,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["itemstoelipsis",{"_index":1209,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["itemstoshow",{"_index":1213,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["itemstoshow.join",{"_index":1215,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["joinpostalcodes",{"_index":782,"title":{},"body":{"components/CatPopulationComponent.html":{},"pipes/JoinPostalCodesPipe.html":{}}}],["joinpostalcodespipe",{"_index":556,"title":{"pipes/JoinPostalCodesPipe.html":{}},"body":{"components/CatPopulationComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"coverage.html":{}}}],["json.parse(keyinfo",{"_index":1572,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["json.stringify(tokenstored",{"_index":1568,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["key",{"_index":53,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DisneyAPIComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/StationItem.html":{},"interfaces/TypeOption.html":{}}}],["keyboard_arrow_down",{"_index":1090,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["keyboard_arrow_up",{"_index":1089,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["keyinfo",{"_index":1569,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["la",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CatPopulationComponent.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/SpotifyAPIService.html":{},"miscellaneous/functions.html":{}}}],["label",{"_index":439,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["labels",{"_index":431,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["lanzamiento",{"_index":290,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["las",{"_index":377,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"miscellaneous/functions.html":{}}}],["lastpage",{"_index":935,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SimplePaginatorComponent.html":{}}}],["lastpagelabel",{"_index":854,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["lbum",{"_index":1544,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["legend",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["length",{"_index":860,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["limit",{"_index":48,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["limite",{"_index":1202,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["link",{"_index":958,"title":{},"body":{"components/DisneyAPIComponent.html":{},"miscellaneous/functions.html":{}}}],["link.util",{"_index":1029,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["link.util.ts",{"_index":1691,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":468,"title":{},"body":{"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{}}}],["list.foreach((item",{"_index":828,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["lista",{"_index":1111,"title":{},"body":{"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{}}}],["listado",{"_index":872,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["listitemobject",{"_index":599,"title":{"interfaces/ListItemObject.html":{}},"body":{"components/CatPopulationComponent.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ListItemObject.html":{},"coverage.html":{}}}],["listlimit",{"_index":1414,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["listoffset",{"_index":1415,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["literal",{"_index":27,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"components/DisneyAPIComponent.html":{},"interfaces/PopulationDataResponse.html":{},"miscellaneous/variables.html":{}}}],["llamada",{"_index":347,"title":{},"body":{"injectables/CacheService.html":{},"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["llamadas",{"_index":357,"title":{},"body":{"injectables/CacheService.html":{},"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["lleida",{"_index":1723,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lo",{"_index":1525,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["loaddata",{"_index":459,"title":{},"body":{"injectables/CatDammingsService.html":{},"components/DisneyAPIComponent.html":{}}}],["loaded",{"_index":1639,"title":{},"body":{"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["loading",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["loadingcomponent",{"_index":1222,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadinginterceptor",{"_index":1666,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loadinginterceptor(req",{"_index":1751,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadingservice",{"_index":937,"title":{"injectables/LoadingService.html":{}},"body":{"components/DisneyAPIComponent.html":{},"injectables/LoadingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadingspinnercomponent",{"_index":160,"title":{"components/LoadingSpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["los",{"_index":309,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["ltima",{"_index":886,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["managestationslist",{"_index":460,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["managestationslist(stationslisted",{"_index":471,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["manejar",{"_index":1244,"title":{},"body":{"injectables/LoadingService.html":{}}}],["manejo",{"_index":1099,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["map",{"_index":333,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/CatPopulationService.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{}}}],["map((i",{"_index":436,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["map((token",{"_index":1592,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["mapa",{"_index":376,"title":{},"body":{"injectables/CacheService.html":{}}}],["mat_dialog_data",{"_index":412,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{}}}],["mat_form_field_default_options",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matautocompletemodule",{"_index":566,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["matautocompleteselectedevent",{"_index":602,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["matbutton",{"_index":1291,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["matbuttonmodule",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["matcardmodule",{"_index":192,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/DisneyAPIComponent.html":{}}}],["matching",{"_index":67,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"components/HomeComponent.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"interfaces/ListItemObject.html":{},"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":191,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/DisneyAPIComponent.html":{}}}],["matdialog",{"_index":976,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["matdialogactions",{"_index":1289,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["matdialogclose",{"_index":1290,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["matdialogcontent",{"_index":1288,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["matdialogref",{"_index":1298,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["matdialogtitle",{"_index":1287,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["matdrawer",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["material",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomPaginatorIntl.html":{},"index.html":{}}}],["matexpansionmodule",{"_index":1348,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{}}}],["matexpansionpanelactionrow",{"_index":1349,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{}}}],["matformfield",{"_index":1381,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["matformfieldmodule",{"_index":563,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{}}}],["matgridlistmodule",{"_index":568,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["math.ceil(length",{"_index":895,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["math.trunc(new",{"_index":1562,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["maticonmodule",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["matinputmodule",{"_index":565,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{}}}],["matlistmodule",{"_index":1155,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["matpaginatorintl",{"_index":891,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"miscellaneous/variables.html":{}}}],["matpaginatormodule",{"_index":1412,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["matprogressspinnermodule",{"_index":1265,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["matselectchange",{"_index":1404,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["matselectmodule",{"_index":564,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["matsidenavmodule",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["matstepper",{"_index":624,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["matsteppermodule",{"_index":560,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["mattablemodule",{"_index":918,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["mattabsmodule",{"_index":567,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["mattoolbarmodule",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["max",{"_index":480,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["max?.gettime",{"_index":539,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["maxdate",{"_index":465,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["maxvalue",{"_index":538,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["mayor",{"_index":1205,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["mediumdate",{"_index":292,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["men",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["menu",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["menu'},{'name",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["menu.component",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.component.html",{"_index":1156,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["menu.component.scss",{"_index":1157,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["menu.component.ts",{"_index":1154,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["menu.component.ts:22",{"_index":1162,"title":{},"body":{"components/DrawerMenuComponent.html":{}}}],["menu.component.ts:24",{"_index":1161,"title":{},"body":{"components/DrawerMenuComponent.html":{}}}],["menu.component.ts:30",{"_index":1182,"title":{},"body":{"components/DrawerMenuComponent.html":{}}}],["menu.component.ts:58",{"_index":1164,"title":{},"body":{"components/DrawerMenuComponent.html":{}}}],["menu/drawer",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["menuitem",{"_index":1166,"title":{"interfaces/MenuItem.html":{}},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["menuitems",{"_index":1158,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["metadata",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["methods",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{}}}],["min",{"_index":481,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["min?.gettime",{"_index":541,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["mindate",{"_index":466,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["minheight",{"_index":1037,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["minvalue",{"_index":540,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["miscellaneous",{"_index":1715,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["modalimageviewercomponent",{"_index":163,"title":{"components/ModalImageViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["modalimageviewerdata",{"_index":1017,"title":{"interfaces/ModalImageViewerData.html":{}},"body":{"components/DisneyAPIComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"coverage.html":{}}}],["modalwrappercomponent",{"_index":167,"title":{"components/ModalWrapperComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["models/cat",{"_index":420,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{}}}],["models/disney",{"_index":1143,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["models/spotify",{"_index":238,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{}}}],["models/token/token.model",{"_index":1559,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["modules",{"_index":1773,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mostrando",{"_index":870,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"pipes/JoinPostalCodesPipe.html":{}}}],["mostrar",{"_index":866,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{}}}],["mouseevent",{"_index":954,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["movie",{"_index":1173,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["muestra",{"_index":1236,"title":{},"body":{"injectables/LoadingService.html":{}}}],["music_note",{"_index":1176,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["más",{"_index":723,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["método",{"_index":319,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/DisneyAPIService.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{}}}],["móvil",{"_index":326,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["name",{"_index":18,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"components/HomeComponent.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TypeOption.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["navega",{"_index":1747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["navegar",{"_index":1750,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1160,"title":{},"body":{"components/DrawerMenuComponent.html":{}}}],["navigate(path",{"_index":1163,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["nbsp",{"_index":1088,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["new",{"_index":374,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"injectables/LoadingService.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newmax",{"_index":542,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["newmin",{"_index":543,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["next",{"_index":49,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"miscellaneous/functions.html":{}}}],["nextlink",{"_index":1416,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["nextpage",{"_index":1341,"title":{},"body":{"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["nextpagelabel",{"_index":855,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["nextpreviouspage",{"_index":1426,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["nextpreviouspage(event",{"_index":1438,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["ng2",{"_index":415,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"dependencies.html":{}}}],["ngclass",{"_index":1411,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["ngoninit",{"_index":200,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["ngtemplateoutlet",{"_index":559,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["nivell_absolut",{"_index":900,"title":{},"body":{"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{}}}],["no_cache",{"_index":815,"title":{},"body":{"injectables/CatPopulationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["no_consta",{"_index":1725,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nocache",{"_index":1694,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nom_municipi",{"_index":836,"title":{},"body":{"injectables/CatPopulationService.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["nombre",{"_index":967,"title":{},"body":{"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/SearchFilterComponent.html":{}}}],["nonnullable",{"_index":681,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{}}}],["normal",{"_index":1313,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["npm",{"_index":1766,"title":{},"body":{"index.html":{}}}],["null",{"_index":57,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["number",{"_index":29,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/CacheService.html":{},"components/CatPopulationComponent.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"miscellaneous/variables.html":{}}}],["número",{"_index":293,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"injectables/CustomPaginatorIntl.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/SpotifyAPIService.html":{}}}],["nümero",{"_index":1546,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["o",{"_index":722,"title":{},"body":{"components/CatPopulationComponent.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{}}}],["object",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.entries(titles).find",{"_index":1321,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["objeto",{"_index":364,"title":{},"body":{"injectables/CacheService.html":{},"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["observable",{"_index":328,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/CatDammingsService.html":{},"injectables/CatPopulationService.html":{},"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{},"miscellaneous/functions.html":{}}}],["observar",{"_index":330,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["observe([breakpoints.handsetportrait",{"_index":339,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["obtener",{"_index":1130,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["obtenida",{"_index":1141,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["obtiene",{"_index":1110,"title":{},"body":{"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["oculta",{"_index":1238,"title":{},"body":{"injectables/LoadingService.html":{}}}],["of(tokeninfo.token",{"_index":1581,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["of(undefined",{"_index":1473,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["offset",{"_index":50,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["one_day_miliseconds",{"_index":509,"title":{},"body":{"injectables/CatDammingsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":188,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["openimage",{"_index":941,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["openimage(event",{"_index":953,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["opensourceurl",{"_index":942,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["opensourceurl(event",{"_index":957,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["openurl",{"_index":201,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["openurl(url",{"_index":212,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["option",{"_index":753,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["option.codi_municipi",{"_index":776,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["option.name",{"_index":774,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["option.nom_municipi",{"_index":777,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["optional",{"_index":215,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/TokenCheckInfo.html":{},"miscellaneous/functions.html":{}}}],["otros_diversos",{"_index":1727,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["output",{"_index":1364,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["outputs",{"_index":1353,"title":{},"body":{"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["overlay",{"_index":1223,"title":{},"body":{"injectables/LoadingService.html":{}}}],["overlayref",{"_index":1224,"title":{},"body":{"injectables/LoadingService.html":{}}}],["overview",{"_index":1774,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.e",{"_index":879,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["package",{"_index":1698,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["page_size_options",{"_index":1451,"title":{},"body":{"components/SpotifyAPIComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pageevent",{"_index":1429,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["pagelimit",{"_index":1433,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["pagesize",{"_index":859,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/SimplePaginatorComponent.html":{}}}],["pagesizeoptions",{"_index":1388,"title":{},"body":{"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["pagetitlecomponent",{"_index":169,"title":{"components/PageTitleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["paginación",{"_index":850,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["paginador",{"_index":865,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["paginator",{"_index":844,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"components/SimplePaginatorComponent.html":{},"coverage.html":{}}}],["paginator'},{'name",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["paginator.component",{"_index":1022,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["paginator.component.html",{"_index":1382,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.scss",{"_index":1383,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.ts",{"_index":1380,"title":{},"body":{"components/SimplePaginatorComponent.html":{},"coverage.html":{}}}],["paginator.component.ts:18",{"_index":1399,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.ts:19",{"_index":1396,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.ts:20",{"_index":1393,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.ts:21",{"_index":1392,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.ts:22",{"_index":1391,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.ts:23",{"_index":1394,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.ts:24",{"_index":1395,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.ts:25",{"_index":1400,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.ts:27",{"_index":1402,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.ts:28",{"_index":1401,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.ts:30",{"_index":1406,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.ts:32",{"_index":1405,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator.component.ts:34",{"_index":1390,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["paginator/simple",{"_index":1021,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SimplePaginatorComponent.html":{},"coverage.html":{}}}],["panelopened",{"_index":196,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["para",{"_index":307,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["param",{"_index":381,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/SpotifyAPIService.html":{}}}],["parameters",{"_index":214,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"components/ModalWrapperComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":819,"title":{},"body":{"injectables/CatPopulationService.html":{},"injectables/DisneyAPIService.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{}}}],["params.append('limit",{"_index":1596,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["params.append('offset",{"_index":1597,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["params.get('limit",{"_index":1497,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["params.get('offset",{"_index":1495,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["parkattractions",{"_index":994,"title":{},"body":{"components/DisneyAPIComponent.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["parque",{"_index":992,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["parsefloat(i.percentatge_volum_embassat",{"_index":437,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["parseint(item.dones_de_0_a_14_anys",{"_index":729,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["parseint(item.dones_de_15_a_64_anys",{"_index":730,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["parseint(item.dones_de_65_anys_i_m_s",{"_index":731,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["parseint(item.homes_de_0_a_14_anys",{"_index":726,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["parseint(item.homes_de_15_a_64_anys",{"_index":727,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["parseint(item.homes_de_65_anys_i_m_s",{"_index":728,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["parseint(item.total_de_0_a_14_anys",{"_index":732,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["parseint(item.total_de_15_a_64_anys",{"_index":733,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["parseint(item.total_de_65_anys_i_m_s",{"_index":734,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["parseint(limit",{"_index":1498,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["parseint(offset",{"_index":1496,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["parámetros",{"_index":1125,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["path",{"_index":1165,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"components/PageTitleComponent.html":{}}}],["películas",{"_index":990,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["percentatge_volum_embassat",{"_index":901,"title":{},"body":{"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{}}}],["personaje",{"_index":1114,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["personajes",{"_index":1112,"title":{},"body":{"injectables/DisneyAPIService.html":{},"miscellaneous/variables.html":{}}}],["peticiones",{"_index":1753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["petición",{"_index":1122,"title":{},"body":{"injectables/DisneyAPIService.html":{},"miscellaneous/functions.html":{}}}],["pipe",{"_index":519,"title":{"pipes/JoinPostalCodesPipe.html":{}},"body":{"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/SpotifyAPIService.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(map((list",{"_index":825,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["pipe(map((result",{"_index":340,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["pipe(takeuntildestroyed(this.destroyref",{"_index":687,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["pipes",{"_index":1195,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["pipes/join",{"_index":658,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["pipetransform",{"_index":1211,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["pistas",{"_index":294,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["población",{"_index":773,"title":{},"body":{"components/CatPopulationComponent.html":{},"miscellaneous/variables.html":{}}}],["popularidad",{"_index":284,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["popularity",{"_index":59,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["population",{"_index":557,"title":{},"body":{"components/CatPopulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["population'},{'name",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["population.component.html",{"_index":569,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.scss",{"_index":570,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts",{"_index":554,"title":{},"body":{"components/CatPopulationComponent.html":{},"coverage.html":{}}}],["population.component.ts:101",{"_index":592,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:112",{"_index":606,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:117",{"_index":604,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:149",{"_index":605,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:316",{"_index":598,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:331",{"_index":600,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:345",{"_index":615,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:356",{"_index":594,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:364",{"_index":603,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:78",{"_index":626,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:80",{"_index":608,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:81",{"_index":618,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:82",{"_index":616,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:83",{"_index":614,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:84",{"_index":619,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:85",{"_index":613,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:87",{"_index":607,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:89",{"_index":627,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:90",{"_index":620,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:92",{"_index":621,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:93",{"_index":610,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:95",{"_index":623,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:96",{"_index":628,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:98",{"_index":612,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.component.ts:99",{"_index":611,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.service",{"_index":663,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population.service.ts",{"_index":793,"title":{},"body":{"injectables/CatPopulationService.html":{},"coverage.html":{}}}],["population.service.ts:15",{"_index":806,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["population.service.ts:17",{"_index":812,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["population.service.ts:19",{"_index":809,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["population.service.ts:20",{"_index":799,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["population.service.ts:26",{"_index":805,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["population.service.ts:39",{"_index":802,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["population.service.ts:68",{"_index":804,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["population/cat",{"_index":553,"title":{},"body":{"components/CatPopulationComponent.html":{},"coverage.html":{}}}],["population/list.model",{"_index":653,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["population/list.model.ts",{"_index":1192,"title":{},"body":{"interfaces/FormatedPopulationData.html":{},"interfaces/ListItemObject.html":{},"coverage.html":{}}}],["population/population",{"_index":655,"title":{},"body":{"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"interfaces/PopulationDataResponse.html":{},"coverage.html":{}}}],["population/zip",{"_index":651,"title":{},"body":{"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["populationdata",{"_index":580,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["populationdataapiurl",{"_index":794,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["populationdataresponse",{"_index":654,"title":{"interfaces/PopulationDataResponse.html":{}},"body":{"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"interfaces/PopulationDataResponse.html":{},"coverage.html":{}}}],["por",{"_index":864,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"components/SimplePaginatorComponent.html":{},"injectables/SpotifyAPIService.html":{}}}],["post('https://accounts.spotify.com/api/token",{"_index":1584,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["postal",{"_index":659,"title":{},"body":{"components/CatPopulationComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"coverage.html":{}}}],["postales",{"_index":1200,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["previous",{"_index":51,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["previouslink",{"_index":1417,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["previouspage",{"_index":1340,"title":{},"body":{"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["previouspagelabel",{"_index":856,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["primera",{"_index":882,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["principal",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":202,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"injectables/LoadingService.html":{},"interfaces/MenuItem.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{}}}],["probar",{"_index":1759,"title":{},"body":{"index.html":{}}}],["programas",{"_index":997,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["progreso",{"_index":1220,"title":{},"body":{"injectables/LoadingService.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ListItemObject.html":{},"injectables/LoadingService.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"properties.html":{}}}],["provide",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providecharts(withdefaultregisterables",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":335,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"injectables/CatPopulationService.html":{},"injectables/DisneyAPIService.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{}}}],["providehttpclient(withinterceptors(interceptors",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":555,"title":{},"body":{"components/CatPopulationComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["province",{"_index":680,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["province_names",{"_index":1717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["province_names.barcelona",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["province_names.girona",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["province_names.lleida",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["province_names.tarragona",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provinceform",{"_index":581,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["provinces",{"_index":582,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["provincesfilter",{"_index":1641,"title":{},"body":{"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["provincia",{"_index":771,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["pruebas",{"_index":1757,"title":{},"body":{"index.html":{}}}],["public",{"_index":936,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["puede",{"_index":1770,"title":{},"body":{"index.html":{}}}],["pulsando",{"_index":1771,"title":{},"body":{"index.html":{}}}],["página",{"_index":868,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"components/SimplePaginatorComponent.html":{},"injectables/SpotifyAPIService.html":{}}}],["que",{"_index":368,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{},"miscellaneous/functions.html":{}}}],["rango",{"_index":867,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["reactiveformsmodule",{"_index":562,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{}}}],["readonly",{"_index":314,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"injectables/LoadingService.html":{},"interfaces/MenuItem.html":{},"components/PageTitleComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{}}}],["realiz",{"_index":369,"title":{},"body":{"injectables/CacheService.html":{}}}],["realiza",{"_index":1121,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["realizado",{"_index":385,"title":{},"body":{"injectables/CacheService.html":{}}}],["recibida",{"_index":1131,"title":{},"body":{"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["recibido",{"_index":1533,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["referencia",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["reiniciar",{"_index":792,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SearchFilterComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["related",{"_index":1501,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["release_date",{"_index":19,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["release_date_precision",{"_index":20,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["releasedate",{"_index":197,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["renovar",{"_index":1531,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["req",{"_index":382,"title":{},"body":{"injectables/CacheService.html":{},"miscellaneous/functions.html":{}}}],["requerido",{"_index":1376,"title":{},"body":{"components/SearchFilterComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["required",{"_index":207,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["requiresync",{"_index":1059,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["reset",{"_index":1352,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{}}}],["resetsearch",{"_index":943,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["resoluciones",{"_index":313,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["response",{"_index":1474,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["response.model",{"_index":656,"title":{},"body":{"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{}}}],["response.model.ts",{"_index":1324,"title":{},"body":{"interfaces/PopulationDataResponse.html":{},"coverage.html":{}}}],["responsecharacter",{"_index":1335,"title":{"interfaces/ResponseCharacter.html":{}},"body":{"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"coverage.html":{}}}],["responsecharacterlist",{"_index":1023,"title":{"interfaces/ResponseCharacterList.html":{}},"body":{"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"coverage.html":{}}}],["responsedata",{"_index":974,"title":{"interfaces/ResponseData.html":{}},"body":{"components/DisneyAPIComponent.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"coverage.html":{}}}],["responseinfo",{"_index":1337,"title":{"interfaces/ResponseInfo.html":{}},"body":{"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"coverage.html":{}}}],["responsive",{"_index":451,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["respuesta",{"_index":345,"title":{},"body":{"injectables/CacheService.html":{}}}],["result",{"_index":1418,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["result()?.items",{"_index":1502,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["result.matches",{"_index":341,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["resultado",{"_index":373,"title":{},"body":{"injectables/CacheService.html":{}}}],["resultados",{"_index":379,"title":{},"body":{"injectables/CacheService.html":{},"injectables/DisneyAPIService.html":{},"injectables/SpotifyAPIService.html":{}}}],["results",{"_index":66,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"components/HomeComponent.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"interfaces/ListItemObject.html":{},"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resultsearchbase",{"_index":47,"title":{"interfaces/ResultSearchBase.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"coverage.html":{}}}],["return",{"_index":338,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{}}}],["returns",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":438,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["root",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/DisneyAPIService.html":{},"injectables/LoadingService.html":{}}}],["root'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["router",{"_index":1159,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["routeroutlet",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["routes_paths",{"_index":1184,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["routes_paths.cat_dammings",{"_index":1180,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["routes_paths.cat_population",{"_index":1178,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["routes_paths.disney_api",{"_index":1172,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["routes_paths.home",{"_index":1168,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["routes_paths.spotify_api",{"_index":1175,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":787,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["rows",{"_index":705,"title":{},"body":{"components/CatPopulationComponent.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ListItemObject.html":{}}}],["rxjs",{"_index":334,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"dependencies.html":{}}}],["savetoken",{"_index":1512,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["savetoken(token",{"_index":1534,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["script",{"_index":1765,"title":{},"body":{"index.html":{}}}],["se",{"_index":383,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DataNotFoundComponent.html":{},"index.html":{}}}],["search",{"_index":38,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"interfaces/ImageItemInfo.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/TypeOption.html":{},"coverage.html":{}}}],["search(name",{"_index":961,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["search(search",{"_index":1537,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["search).append('type",{"_index":1595,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["searchfiltercomponent",{"_index":172,"title":{"components/SearchFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["searchform",{"_index":1366,"title":{"interfaces/SearchForm.html":{}},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"coverage.html":{}}}],["searchstring",{"_index":1419,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["searchtype",{"_index":34,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["searchvalues",{"_index":43,"title":{"interfaces/SearchValues.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SpotifyAPIComponent.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/TypeOption.html":{},"coverage.html":{}}}],["searchvalues.search",{"_index":1485,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["searchvalues.type",{"_index":1486,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["seguidores",{"_index":288,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["segundos",{"_index":1522,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["seleccione",{"_index":770,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["selected",{"_index":762,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["selector",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["servic",{"_index":846,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["services/breakpoint.service",{"_index":661,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SimplePaginatorComponent.html":{}}}],["services/cat",{"_index":662,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["services/disney",{"_index":1024,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["services/loading.service",{"_index":1026,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["services/spotify",{"_index":1458,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["servicio",{"_index":306,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/DisneyAPIService.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{}}}],["servicios",{"_index":1134,"title":{},"body":{"injectables/DisneyAPIService.html":{},"index.html":{}}}],["servidor",{"_index":1762,"title":{},"body":{"index.html":{}}}],["sesión",{"_index":1532,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["sessionstorage",{"_index":1518,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["sessionstorage.getitem(token_store_key",{"_index":1570,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["sessionstorage.setitem(token_store_key",{"_index":1567,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["set",{"_index":472,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["setalbumartistdata",{"_index":1427,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["setalbumartistdata(info",{"_index":1440,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["setartistalbuminfo",{"_index":203,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["setcache",{"_index":351,"title":{},"body":{"injectables/CacheService.html":{}}}],["setcache(key",{"_index":370,"title":{},"body":{"injectables/CacheService.html":{}}}],["setcommonparams",{"_index":1105,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["setimageinfo",{"_index":204,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["setinfo",{"_index":461,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["setinfo(data",{"_index":477,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["setmaxmindate",{"_index":462,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["setmaxmindate(date",{"_index":479,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["setstationsinfo",{"_index":463,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["setstationsinfo(data",{"_index":483,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["shortfilms",{"_index":996,"title":{},"body":{"components/DisneyAPIComponent.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["showfirstlastpage",{"_index":1389,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["si",{"_index":322,"title":{},"body":{"injectables/BreakpointService.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{}}}],["signal",{"_index":232,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/PageTitleComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["signal(false",{"_index":1464,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["signal(this.data[0].estaci",{"_index":424,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["signal(undefined",{"_index":241,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["signal(value[1",{"_index":1323,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["siguiente",{"_index":775,"title":{},"body":{"components/CatPopulationComponent.html":{},"injectables/CustomPaginatorIntl.html":{},"components/SimplePaginatorComponent.html":{}}}],["simple",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["simplepaginatorcomponent",{"_index":174,"title":{"components/SimplePaginatorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["size",{"_index":1310,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["son",{"_index":1555,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"components/HomeComponent.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"interfaces/ListItemObject.html":{},"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{}}}],["sourceurl",{"_index":968,"title":{},"body":{"components/DisneyAPIComponent.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["special_zip_codes",{"_index":1720,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["spinner",{"_index":1234,"title":{},"body":{"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["spinner.component",{"_index":1250,"title":{},"body":{"injectables/LoadingService.html":{}}}],["spinner.component.html",{"_index":1266,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner.component.scss",{"_index":1267,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner.component.ts",{"_index":1264,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["spinner/loading",{"_index":1249,"title":{},"body":{"injectables/LoadingService.html":{},"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["spotify",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["spotify_api",{"_index":1736,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["spotify_request",{"_index":1560,"title":{},"body":{"injectables/SpotifyAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spotifyapicomponent",{"_index":177,"title":{"components/SpotifyAPIComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["spotifyapiservice",{"_index":1456,"title":{"injectables/SpotifyAPIService.html":{}},"body":{"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"coverage.html":{}}}],["spotifyrequest",{"_index":1695,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["spotifysearchform",{"_index":37,"title":{"interfaces/SpotifySearchForm.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/TypeOption.html":{},"coverage.html":{}}}],["spotifysearchformcomponent",{"_index":179,"title":{"components/SpotifySearchFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["spotifyservice",{"_index":1420,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["spotifyurl",{"_index":198,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["src/.../app.config.ts",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cache.interceptor.ts",{"_index":1739,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../cat",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../common.constants.ts",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../external",{"_index":1740,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../http",{"_index":1742,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../loading.interceptor.ts",{"_index":1741,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../routes.constants.ts",{"_index":1719,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../spotify",{"_index":1780,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../token.interceptor.ts",{"_index":1743,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../zip",{"_index":1718,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:29",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1647,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/data",{"_index":905,"title":{},"body":{"components/DataNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/components/drawer",{"_index":1153,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["src/app/components/loading",{"_index":1263,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["src/app/components/modal",{"_index":1269,"title":{},"body":{"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"coverage.html":{}}}],["src/app/components/page",{"_index":1306,"title":{},"body":{"components/PageTitleComponent.html":{},"coverage.html":{}}}],["src/app/components/simple",{"_index":1379,"title":{},"body":{"components/SimplePaginatorComponent.html":{},"coverage.html":{}}}],["src/app/constants/cat",{"_index":1656,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/constants/common.constants.ts",{"_index":1658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/constants/routes.constants.ts",{"_index":1659,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/constants/spotify",{"_index":1660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interceptors/cache.interceptor.ts",{"_index":1662,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/interceptors/loading.interceptor.ts",{"_index":1665,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/interceptors/token.interceptor.ts",{"_index":1667,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/models/cat",{"_index":896,"title":{},"body":{"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ListItemObject.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/StationItem.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"coverage.html":{}}}],["src/app/models/disney",{"_index":1336,"title":{},"body":{"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"coverage.html":{}}}],["src/app/models/spotify",{"_index":6,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/models/token/token.model.ts",{"_index":1631,"title":{},"body":{"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"coverage.html":{}}}],["src/app/pages/cat",{"_index":389,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/disney",{"_index":914,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":1193,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/spotify",{"_index":183,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{},"coverage.html":{}}}],["src/app/pipes/join",{"_index":1196,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{},"coverage.html":{}}}],["src/app/services/breakpoint.service.ts",{"_index":305,"title":{},"body":{"injectables/BreakpointService.html":{},"coverage.html":{}}}],["src/app/services/breakpoint.service.ts:15",{"_index":318,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["src/app/services/breakpoint.service.ts:28",{"_index":320,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["src/app/services/cache.service.ts",{"_index":343,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["src/app/services/cache.service.ts:14",{"_index":375,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache.service.ts:24",{"_index":371,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache.service.ts:36",{"_index":359,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache.service.ts:46",{"_index":353,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cat",{"_index":453,"title":{},"body":{"injectables/CatDammingsService.html":{},"injectables/CatPopulationService.html":{},"coverage.html":{}}}],["src/app/services/disney",{"_index":1097,"title":{},"body":{"injectables/DisneyAPIService.html":{},"coverage.html":{}}}],["src/app/services/loading.service.ts",{"_index":1217,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading.service.ts:16",{"_index":1243,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:20",{"_index":1245,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:24",{"_index":1242,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:28",{"_index":1228,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:41",{"_index":1229,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:54",{"_index":1235,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:64",{"_index":1237,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/mat",{"_index":843,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"coverage.html":{}}}],["src/app/services/spotify",{"_index":1504,"title":{},"body":{"injectables/SpotifyAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/external",{"_index":1690,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/utils/http",{"_index":1692,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":1206,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["start",{"_index":1767,"title":{},"body":{"index.html":{}}}],["started",{"_index":1756,"title":{"index.html":{}},"body":{}}],["startloading",{"_index":1226,"title":{},"body":{"injectables/LoadingService.html":{}}}],["state",{"_index":1008,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["state('collapsed,void",{"_index":1035,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["state('expanded",{"_index":1038,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["statements",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["stationitem",{"_index":474,"title":{"interfaces/StationItem.html":{}},"body":{"injectables/CatDammingsService.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{},"coverage.html":{}}}],["stationkey",{"_index":533,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["stations",{"_index":467,"title":{},"body":{"injectables/CatDammingsService.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{}}}],["stations.find",{"_index":549,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["stations.push",{"_index":545,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["stationslisted",{"_index":476,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["stationslisted.add(item.estaci",{"_index":547,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["stationslisted.has(item.estaci",{"_index":544,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["stationvalue",{"_index":548,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["stationvalue.key",{"_index":552,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["stepper",{"_index":583,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["stoploading",{"_index":1227,"title":{},"body":{"injectables/LoadingService.html":{}}}],["string",{"_index":23,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"interfaces/ListItemObject.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":1009,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["styles",{"_index":1305,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["styleurl",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["su",{"_index":1520,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["subject",{"_index":873,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{},"components/SpotifyAPIComponent.html":{}}}],["submitform",{"_index":1607,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["subscribe",{"_index":523,"title":{},"body":{"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{}}}],["subscribe((data",{"_index":1151,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["subscribe((value",{"_index":692,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["subscriptsizing",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sus",{"_index":378,"title":{},"body":{"injectables/CacheService.html":{}}}],["switchmap",{"_index":645,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["switchmap((code",{"_index":740,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["table",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":504,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["take(1",{"_index":520,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["takeuntildestroyed",{"_index":630,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["takeuntildestroyed(this.destroyref",{"_index":739,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["tamaño",{"_index":871,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"injectables/DisneyAPIService.html":{}}}],["tap",{"_index":505,"title":{},"body":{"injectables/CatDammingsService.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{}}}],["tap((result",{"_index":521,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["tap((token",{"_index":1590,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["tarragona",{"_index":1722,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["template",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["templateurl",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["text",{"_index":42,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/TypeOption.html":{}}}],["texto",{"_index":862,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/SpotifyAPIService.html":{}}}],["this._characterslist.asobservable",{"_index":1144,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["this._characterslist.next(data",{"_index":1152,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["this._filter(value",{"_index":694,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this._getlistitemobject",{"_index":706,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this._getlistitemobject('65",{"_index":721,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this._getlistitemobject('de",{"_index":710,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this._getlistitemobject('hombres",{"_index":707,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this._getlistitemobject('mujeres",{"_index":708,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this._getlistitemobject('todos",{"_index":709,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this._getlistitemobject('total",{"_index":725,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this._list.asobservable",{"_index":515,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["this._list.next(list",{"_index":529,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["this._mapzipcodelistitem(list",{"_index":826,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["this._maxdate.asobservable",{"_index":512,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["this._maxdate.next(maxdate",{"_index":526,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["this._mindate.asobservable",{"_index":513,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["this._mindate.next(mindate",{"_index":527,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["this._search.next",{"_index":1484,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this._search.pipe",{"_index":1466,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this._stations.asobservable",{"_index":514,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["this._stations.next(stations",{"_index":528,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["this.activatedroute",{"_index":1318,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["this.activatedroute.snapshot.routeconfig?.path",{"_index":1320,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["this.artistslist",{"_index":258,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.barchartdata",{"_index":425,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["this.barchartoptions",{"_index":450,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["this.base_url}search",{"_index":1599,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["this.breakpointobserver",{"_index":336,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["this.breakpointservice",{"_index":672,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SimplePaginatorComponent.html":{}}}],["this.buildform",{"_index":1367,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{}}}],["this.catpopulationservice",{"_index":664,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.catpopulationservice.getpopulationdata(code",{"_index":741,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.cdr",{"_index":1052,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.cdr.detectchanges",{"_index":1068,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.changepagelimit(event.pagesize",{"_index":1488,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.changepagesize.emit(data.value",{"_index":1407,"title":{},"body":{"components/SimplePaginatorComponent.html":{}}}],["this.characters",{"_index":1057,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.characters()?.data",{"_index":1061,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.characters()?.info.nextpage",{"_index":1065,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.characters()?.info.previouspage",{"_index":1067,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.characters()?.info.totalpages",{"_index":1063,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.checktoken",{"_index":1578,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["this.cityform",{"_index":683,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.cityform.controls['city']?.markaspending",{"_index":690,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.cityform.controls['city']?.reset",{"_index":688,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.cityform.controls['city']?.seterrors(null",{"_index":689,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.cityform.controls['city']?.valuechanges",{"_index":691,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.citysearchcode.set(this.cityselected.codi_municipi",{"_index":767,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.cityselected",{"_index":766,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.clear.emit",{"_index":1619,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["this.context",{"_index":1600,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["this.createoverlay",{"_index":1253,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.currentpage",{"_index":1070,"title":{},"body":{"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{}}}],["this.data",{"_index":435,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["this.data.altimage",{"_index":1282,"title":{},"body":{"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{}}}],["this.data.delete(key",{"_index":388,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.data.get(key",{"_index":387,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.data.map((i",{"_index":432,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["this.data.set(key",{"_index":386,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.data.title",{"_index":1283,"title":{},"body":{"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{}}}],["this.data.url",{"_index":1280,"title":{},"body":{"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{}}}],["this.datasource",{"_index":1060,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.decimalpipe",{"_index":674,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.decimalpipe.transform",{"_index":713,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.description",{"_index":1281,"title":{},"body":{"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{}}}],["this.destroyref",{"_index":668,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["this.dialog",{"_index":1048,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.dialog.open(modalimageviewercomponent",{"_index":1079,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.dialogref",{"_index":1300,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["this.dialogref.close(value",{"_index":1302,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["this.disablenextpage",{"_index":1064,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.disablepreviouspage",{"_index":1066,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.disneyapiservice",{"_index":1046,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.disneyapiservice.currentpage",{"_index":1069,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.disneyapiservice.filtercharacters(this.filtersearch",{"_index":1074,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.disneyapiservice.getallcharacters",{"_index":1075,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.disneyapiservice.pagesize",{"_index":1071,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.displayedcolumns",{"_index":982,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.drawerref.toggle",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["this.emitreset.emit",{"_index":1372,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{}}}],["this.emitsearch.emit(this.form.controls.name.value",{"_index":1370,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{}}}],["this.filterbyprovincecode",{"_index":695,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.filtersearch",{"_index":1073,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.followers",{"_index":240,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.followers.set((this.info",{"_index":250,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.form",{"_index":1368,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{}}}],["this.form.controls.search.value",{"_index":1620,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["this.form.controls.type.value",{"_index":1621,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["this.form.reset",{"_index":1371,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{}}}],["this.form.valid",{"_index":1369,"title":{},"body":{"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{}}}],["this.formatedpopulationdata",{"_index":700,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.formbuilder",{"_index":666,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.formbuilder.group",{"_index":679,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.genres",{"_index":247,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.gethttprequest(params",{"_index":1146,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["this.gettimeinseconds",{"_index":1566,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["this.gettokenstring(token",{"_index":1593,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["this.gettokenstring(tokenstored.token",{"_index":1577,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["this.http",{"_index":516,"title":{},"body":{"injectables/CatDammingsService.html":{},"injectables/SpotifyAPIService.html":{}}}],["this.http.get",{"_index":1598,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["this.httpclient",{"_index":818,"title":{},"body":{"injectables/CatPopulationService.html":{},"injectables/DisneyAPIService.html":{}}}],["this.httpclient.get",{"_index":840,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["this.image",{"_index":243,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.image.set(current",{"_index":273,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.info",{"_index":248,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.info.external_urls",{"_index":263,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.info.external_urls[external_url_spotify_key",{"_index":265,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.info.images?.foreach((image",{"_index":268,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.initeffects",{"_index":1055,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.initform",{"_index":677,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["this.initsignals",{"_index":676,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["this.injector",{"_index":699,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["this.isartist",{"_index":246,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["this.isartist.set(this.searchtype",{"_index":1467,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.isloading",{"_index":1260,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.joinpostalcodespipe",{"_index":670,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.joinpostalcodespipe.transform(value.codi_postal",{"_index":756,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.lastpage",{"_index":1062,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.listlimit",{"_index":1471,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.listoffset",{"_index":1472,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.loaddata",{"_index":1056,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.loadingcomponent",{"_index":1258,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingservice",{"_index":1050,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["this.managestationslist(stationslisted",{"_index":534,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["this.nextlink",{"_index":1480,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.nextpreviouspage(event",{"_index":1489,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.overlay",{"_index":1251,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.overlay.create",{"_index":1255,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.overlayref",{"_index":1254,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.overlayref.attach(this.loadingcomponent",{"_index":1261,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.overlayref.detach",{"_index":1262,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.pagesize",{"_index":1072,"title":{},"body":{"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{}}}],["this.popularity",{"_index":242,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.popularity.set((this.info",{"_index":252,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.populationdata",{"_index":735,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.populationdata()?.map",{"_index":701,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.populationdataapiurl",{"_index":841,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["this.previouslink",{"_index":1478,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.provinceform",{"_index":678,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.provinceform.controls['province'].value",{"_index":747,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.provinceform.controls['province']?.valuechanges",{"_index":686,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.releasedate",{"_index":254,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.result",{"_index":1465,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.router",{"_index":1187,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["this.router.navigate([path",{"_index":1189,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["this.savetoken(token",{"_index":1591,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["this.search.emit(searchvalues",{"_index":1622,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["this.searchstring",{"_index":1468,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.searchtype",{"_index":1469,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.setalbumartistdata(response",{"_index":1475,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.setartistalbuminfo",{"_index":244,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.setcommonparams",{"_index":1145,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["this.setcommonparams().append('name",{"_index":1147,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["this.setimageinfo",{"_index":245,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.setinfo(data",{"_index":525,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["this.setmaxmindate",{"_index":531,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["this.setstationsinfo(result",{"_index":522,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["this.spotifyservice",{"_index":1462,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.spotifyservice.search",{"_index":1470,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.spotifyurl",{"_index":264,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.submitform",{"_index":1624,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["this.title",{"_index":423,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/PageTitleComponent.html":{}}}],["this.totalitems",{"_index":1482,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["this.totaltracks",{"_index":256,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["this.url",{"_index":1279,"title":{},"body":{"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{}}}],["this.zipcodes",{"_index":696,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.zipcodes()?.filter((item",{"_index":750,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.zipcodesfiltered",{"_index":693,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.zipcodesfiltered.filter",{"_index":759,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.zipcodesfiltered.find",{"_index":763,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["this.zipcodesfiltered?.find",{"_index":754,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["tiempo",{"_index":367,"title":{},"body":{"injectables/CacheService.html":{},"injectables/SpotifyAPIService.html":{}}}],["time",{"_index":363,"title":{},"body":{"injectables/CacheService.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{}}}],["tipo",{"_index":1541,"title":{},"body":{"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{}}}],["title",{"_index":401,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{}}}],["title'},{'name",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["title.component",{"_index":648,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/HomeComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["title.component.ts",{"_index":1307,"title":{},"body":{"components/PageTitleComponent.html":{},"coverage.html":{}}}],["title.component.ts:18",{"_index":1317,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["title.component.ts:20",{"_index":1315,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["title.component.ts:26",{"_index":1316,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["title/page",{"_index":647,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/HomeComponent.html":{},"components/PageTitleComponent.html":{},"components/SpotifyAPIComponent.html":{},"coverage.html":{}}}],["titleleft",{"_index":597,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["titles",{"_index":1185,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{},"components/PageTitleComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["titles[routes_paths.cat_dammings",{"_index":1179,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["titles[routes_paths.cat_population",{"_index":1177,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["titles[routes_paths.disney_api",{"_index":1171,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["titles[routes_paths.home",{"_index":1167,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["titles[routes_paths.spotify_api",{"_index":1174,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["toda",{"_index":1118,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["todas",{"_index":1127,"title":{},"body":{"injectables/DisneyAPIService.html":{}}}],["todos",{"_index":1677,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggledrawer",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":1516,"title":{},"body":{"injectables/SpotifyAPIService.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"miscellaneous/variables.html":{}}}],["token.access_token",{"_index":1565,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["token.token_type",{"_index":1564,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["token_store_key",{"_index":1561,"title":{},"body":{"injectables/SpotifyAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_type",{"_index":1634,"title":{},"body":{"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{}}}],["tokencheckinfo",{"_index":1519,"title":{"interfaces/TokenCheckInfo.html":{}},"body":{"injectables/SpotifyAPIService.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"coverage.html":{}}}],["tokeninfo",{"_index":1528,"title":{"interfaces/TokenInfo.html":{}},"body":{"injectables/SpotifyAPIService.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"coverage.html":{}}}],["tokeninfo.isok",{"_index":1579,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["tokeninfo.token",{"_index":1580,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["tokeninterceptor",{"_index":1668,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["tokeninterceptor(req",{"_index":1754,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tokenstored",{"_index":1558,"title":{"interfaces/TokenStored.html":{}},"body":{"injectables/SpotifyAPIService.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"coverage.html":{}}}],["tokenstored.time",{"_index":1574,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["tokenstored.token.expires_in",{"_index":1575,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["toobservable",{"_index":631,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["toobservable(this.citysearchcode",{"_index":736,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["tooltip",{"_index":884,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["tosignal",{"_index":632,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["tosignal(this.catpopulationservice.getzipcodes",{"_index":697,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["tosignal(this.disneyapiservice.characterslist",{"_index":1058,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["total",{"_index":52,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["total_de_0_a_14_anys",{"_index":1332,"title":{},"body":{"interfaces/PopulationDataResponse.html":{}}}],["total_de_15_a_64_anys",{"_index":1333,"title":{},"body":{"interfaces/PopulationDataResponse.html":{}}}],["total_de_65_anys_i_m_s",{"_index":1334,"title":{},"body":{"interfaces/PopulationDataResponse.html":{}}}],["total_tracks",{"_index":21,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["totalitems",{"_index":1421,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["totalpages",{"_index":1338,"title":{},"body":{"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["totaltracks",{"_index":199,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["track",{"_index":281,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["traducción",{"_index":848,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["transform",{"_index":1207,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["transform(value",{"_index":1208,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["transforma",{"_index":1198,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["transition",{"_index":1010,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["tree",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["tremp",{"_index":1732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["trigger",{"_index":1011,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["trigger('detailexpand",{"_index":1034,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["true",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"injectables/BreakpointService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"components/DisneyAPIComponent.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1710,"title":{},"body":{"dependencies.html":{}}}],["tv",{"_index":998,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["tvshows",{"_index":999,"title":{},"body":{"components/DisneyAPIComponent.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["type",{"_index":24,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"interfaces/ListItemObject.html":{},"injectables/LoadingService.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/PopulationDataResponse.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/StationItem.html":{},"interfaces/TokenCheckInfo.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenStored.html":{},"interfaces/TypeOption.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.text",{"_index":1627,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["typealiases",{"_index":1778,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeoption",{"_index":39,"title":{"interfaces/TypeOption.html":{}},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/TypeOption.html":{},"coverage.html":{}}}],["typeoptions",{"_index":1604,"title":{},"body":{"components/SpotifySearchFormComponent.html":{}}}],["un",{"_index":325,"title":{},"body":{"injectables/BreakpointService.html":{},"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/LoadingService.html":{},"injectables/SpotifyAPIService.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":346,"title":{},"body":{"injectables/CacheService.html":{},"components/CatPopulationComponent.html":{},"injectables/DisneyAPIService.html":{},"pipes/JoinPostalCodesPipe.html":{},"injectables/SpotifyAPIService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["undefined",{"_index":41,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/CacheService.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"interfaces/ImageItemInfo.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SpotifyAPIComponent.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/TypeOption.html":{}}}],["unknown",{"_index":1054,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/ModalWrapperComponent.html":{}}}],["updatedat",{"_index":1344,"title":{},"body":{"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["uri",{"_index":22,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["url",{"_index":45,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/CacheService.html":{},"injectables/CatDammingsService.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"interfaces/ImageItemInfo.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{},"miscellaneous/functions.html":{}}}],["url(urlstring).search",{"_index":1494,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["urlencoded",{"_index":1589,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["urlsearchparams(new",{"_index":1493,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["urlstring",{"_index":1490,"title":{},"body":{"components/SpotifyAPIComponent.html":{}}}],["usado",{"_index":863,"title":{},"body":{"injectables/CustomPaginatorIntl.html":{}}}],["usar",{"_index":1752,"title":{},"body":{"miscellaneous/functions.html":{}}}],["useclass",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usevalue",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utilidades",{"_index":1758,"title":{},"body":{"index.html":{}}}],["utils/external",{"_index":1028,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["utils/http",{"_index":816,"title":{},"body":{"injectables/CatPopulationService.html":{},"injectables/SpotifyAPIService.html":{}}}],["uuid",{"_index":508,"title":{},"body":{"injectables/CatDammingsService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":507,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["v.19",{"_index":1761,"title":{},"body":{"index.html":{}}}],["v4",{"_index":506,"title":{},"body":{"injectables/CatDammingsService.html":{}}}],["validators",{"_index":635,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{}}}],["validators.required",{"_index":682,"title":{},"body":{"components/CatPopulationComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SpotifySearchFormComponent.html":{}}}],["valor",{"_index":1526,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["value",{"_index":40,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"components/ArtistAlbumDataComponent.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"injectables/CustomPaginatorIntl.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ImageItemInfo.html":{},"pipes/JoinPostalCodesPipe.html":{},"interfaces/ListItemObject.html":{},"injectables/LoadingService.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"interfaces/SpotifySearchForm.html":{},"components/SpotifySearchFormComponent.html":{},"interfaces/TypeOption.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1216,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["value.nom_municipi",{"_index":758,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["value.slice(0",{"_index":1214,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["value?.length",{"_index":1212,"title":{},"body":{"pipes/JoinPostalCodesPipe.html":{}}}],["var",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["variable",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1781,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":299,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/DisneyAPIComponent.html":{},"index.html":{}}}],["version",{"_index":1776,"title":{},"body":{"properties.html":{}}}],["vertical",{"_index":327,"title":{},"body":{"injectables/BreakpointService.html":{}}}],["videogames",{"_index":1001,"title":{},"body":{"components/DisneyAPIComponent.html":{},"interfaces/ResponseCharacter.html":{},"interfaces/ResponseCharacterList.html":{},"interfaces/ResponseData.html":{},"interfaces/ResponseInfo.html":{}}}],["videojuegos",{"_index":1000,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["viewchild",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CatPopulationComponent.html":{}}}],["viewchild('drawer",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('stepper",{"_index":625,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["viewer",{"_index":1271,"title":{},"body":{"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{}}}],["viewer'},{'name",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["viewer.component",{"_index":1019,"title":{},"body":{"components/DisneyAPIComponent.html":{}}}],["viewer.component.html",{"_index":1272,"title":{},"body":{"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{}}}],["viewer.component.scss",{"_index":1273,"title":{},"body":{"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{}}}],["viewer.component.ts",{"_index":1270,"title":{},"body":{"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"coverage.html":{}}}],["viewer.component.ts:18",{"_index":1275,"title":{},"body":{"components/ModalImageViewerComponent.html":{}}}],["viewer.component.ts:20",{"_index":1278,"title":{},"body":{"components/ModalImageViewerComponent.html":{}}}],["viewer.component.ts:21",{"_index":1276,"title":{},"body":{"components/ModalImageViewerComponent.html":{}}}],["viewer.component.ts:22",{"_index":1277,"title":{},"body":{"components/ModalImageViewerComponent.html":{}}}],["viewer.component.ts:24",{"_index":1274,"title":{},"body":{"components/ModalImageViewerComponent.html":{}}}],["viewer/modal",{"_index":1018,"title":{},"body":{"components/DisneyAPIComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"coverage.html":{}}}],["void",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"injectables/CacheService.html":{},"components/CatDammingsHistoricChartComponent.html":{},"injectables/CatDammingsService.html":{},"components/CatPopulationComponent.html":{},"components/DisneyAPIComponent.html":{},"injectables/DisneyAPIService.html":{},"components/DrawerMenuComponent.html":{},"injectables/LoadingService.html":{},"interfaces/MenuItem.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"interfaces/SearchForm.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"injectables/SpotifyAPIService.html":{},"components/SpotifySearchFormComponent.html":{},"miscellaneous/functions.html":{}}}],["volum_embassat",{"_index":902,"title":{},"body":{"interfaces/DammingsInfoItem.html":{},"interfaces/DammingsInfoResponse.html":{},"interfaces/FilterForm.html":{},"interfaces/FilteredInfoItem.html":{},"interfaces/FilteredInfoItemDate.html":{},"interfaces/StationItem.html":{}}}],["volumen",{"_index":440,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["volver",{"_index":778,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["warning",{"_index":911,"title":{},"body":{"components/DataNotFoundComponent.html":{}}}],["water",{"_index":1181,"title":{},"body":{"components/DrawerMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["weight",{"_index":1312,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["width",{"_index":46,"title":{},"body":{"interfaces/AlbumResultItem.html":{},"interfaces/AlbumSearchResponse.html":{},"interfaces/AlbumSearchResult.html":{},"interfaces/ArtistResultItem.html":{},"interfaces/ArtistResultItemBase.html":{},"interfaces/ArtistSearchResponse.html":{},"interfaces/ArtistSearchResult.html":{},"interfaces/ImageItemInfo.html":{},"injectables/LoadingService.html":{},"interfaces/ResultSearchBase.html":{},"interfaces/SearchValues.html":{},"interfaces/SpotifySearchForm.html":{},"interfaces/TypeOption.html":{}}}],["window.crypto.randomuuid",{"_index":702,"title":{},"body":{"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{}}}],["window.open(url",{"_index":274,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{}}}],["wrapper",{"_index":1286,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["wrapper'},{'name",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/CatPopulationComponent.html":{},"components/DataNotFoundComponent.html":{},"components/DisneyAPIComponent.html":{},"components/DrawerMenuComponent.html":{},"components/HomeComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalImageViewerComponent.html":{},"components/ModalWrapperComponent.html":{},"components/PageTitleComponent.html":{},"components/SearchFilterComponent.html":{},"components/SimplePaginatorComponent.html":{},"components/SpotifyAPIComponent.html":{},"components/SpotifySearchFormComponent.html":{}}}],["wrapper.component",{"_index":419,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{}}}],["wrapper.component.html",{"_index":1292,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["wrapper.component.ts",{"_index":1285,"title":{},"body":{"components/ModalWrapperComponent.html":{},"coverage.html":{}}}],["wrapper.component.ts:23",{"_index":1299,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["wrapper.component.ts:25",{"_index":1295,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["wrapper.component.ts:31",{"_index":1297,"title":{},"body":{"components/ModalWrapperComponent.html":{}}}],["wrapper/modal",{"_index":418,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{},"components/ModalImageViewerComponent.html":{},"interfaces/ModalImageViewerData.html":{},"components/ModalWrapperComponent.html":{},"coverage.html":{}}}],["writablesignal",{"_index":220,"title":{},"body":{"components/ArtistAlbumDataComponent.html":{},"components/CatDammingsHistoricChartComponent.html":{},"components/PageTitleComponent.html":{},"components/SpotifyAPIComponent.html":{}}}],["www",{"_index":1588,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["y",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/BreakpointService.html":{},"injectables/CacheService.html":{},"injectables/SpotifyAPIService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["year",{"_index":703,"title":{},"body":{"components/CatPopulationComponent.html":{},"interfaces/FormatedPopulationData.html":{},"interfaces/ListItemObject.html":{}}}],["yes",{"_index":1545,"title":{},"body":{"injectables/SpotifyAPIService.html":{}}}],["ylabels",{"_index":426,"title":{},"body":{"components/CatDammingsHistoricChartComponent.html":{}}}],["zip_codes",{"_index":649,"title":{},"body":{"components/CatPopulationComponent.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"miscellaneous/enumerations.html":{}}}],["zip_codes.barcelona",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zip_codes.girona",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zip_codes.lleida",{"_index":748,"title":{},"body":{"components/CatPopulationComponent.html":{},"miscellaneous/variables.html":{}}}],["zip_codes.tarragona",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zipcodeitem",{"_index":801,"title":{"interfaces/ZipCodeItem.html":{}},"body":{"injectables/CatPopulationService.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"coverage.html":{}}}],["zipcodelistitem",{"_index":595,"title":{"interfaces/ZipCodeListItem.html":{}},"body":{"components/CatPopulationComponent.html":{},"injectables/CatPopulationService.html":{},"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"coverage.html":{}}}],["zipcodes",{"_index":584,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["zipcodesapiurl",{"_index":795,"title":{},"body":{"injectables/CatPopulationService.html":{}}}],["zipcodesfiltered",{"_index":585,"title":{},"body":{"components/CatPopulationComponent.html":{}}}],["zipcodesstate",{"_index":1637,"title":{"interfaces/ZipCodesState.html":{}},"body":{"interfaces/ZipCodeItem.html":{},"interfaces/ZipCodeListItem.html":{},"interfaces/ZipCodesState.html":{},"coverage.html":{}}}],["zone.js",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AlbumResultItem.html":{"url":"interfaces/AlbumResultItem.html","title":"interface - AlbumResultItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AlbumResultItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/spotify-api/spotify-api.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album_type\n                                        \n                                \n                                \n                                        \n                                            artists\n                                        \n                                \n                                \n                                        \n                                            available_markets\n                                        \n                                \n                                \n                                        \n                                            external_urls\n                                        \n                                \n                                \n                                        \n                                            href\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            release_date\n                                        \n                                \n                                \n                                        \n                                            release_date_precision\n                                        \n                                \n                                \n                                        \n                                            total_tracks\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artists:     ArtistResultItemBase[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ArtistResultItemBase[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        available_markets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        available_markets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        external_urls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        external_urls:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         ImageItemInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageItemInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        release_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        release_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        release_date_precision\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        release_date_precision:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_tracks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_tracks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport type SearchType = 'album' | 'artist';\n\nexport interface SpotifySearchForm {\n  search: FormControl;\n  type: FormControl;\n}\n\nexport interface TypeOption {\n  value: SearchType | undefined;\n  text: string;\n}\n\nexport interface SearchValues {\n  search: string;\n  type: SearchType;\n}\n\nexport interface ImageItemInfo {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface ResultSearchBase {\n  href: string;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  total: number;\n}\n\nexport interface ArtistResultItemBase {\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistResultItem extends ArtistResultItemBase {\n  followers: {\n    href: null;\n    total: number;\n  };\n  genres: string[];\n  images: ImageItemInfo[];\n  popularity: number;\n}\n\nexport interface ArtistSearchResult extends ResultSearchBase {\n  items: ArtistResultItem[];\n}\nexport interface ArtistSearchResponse {\n  artists: ArtistSearchResult;\n}\n\nexport interface AlbumResultItem {\n  album_type: string;\n  artists: ArtistResultItemBase[];\n  available_markets: string[];\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  images: ImageItemInfo[];\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  uri: string;\n}\n\nexport interface AlbumSearchResult extends ResultSearchBase {\n  items: AlbumResultItem[];\n}\n\nexport interface AlbumSearchResponse {\n  albums: AlbumSearchResult;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AlbumSearchResponse.html":{"url":"interfaces/AlbumSearchResponse.html","title":"interface - AlbumSearchResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AlbumSearchResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/spotify-api/spotify-api.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            albums\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        albums\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        albums:         AlbumSearchResult\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AlbumSearchResult\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport type SearchType = 'album' | 'artist';\n\nexport interface SpotifySearchForm {\n  search: FormControl;\n  type: FormControl;\n}\n\nexport interface TypeOption {\n  value: SearchType | undefined;\n  text: string;\n}\n\nexport interface SearchValues {\n  search: string;\n  type: SearchType;\n}\n\nexport interface ImageItemInfo {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface ResultSearchBase {\n  href: string;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  total: number;\n}\n\nexport interface ArtistResultItemBase {\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistResultItem extends ArtistResultItemBase {\n  followers: {\n    href: null;\n    total: number;\n  };\n  genres: string[];\n  images: ImageItemInfo[];\n  popularity: number;\n}\n\nexport interface ArtistSearchResult extends ResultSearchBase {\n  items: ArtistResultItem[];\n}\nexport interface ArtistSearchResponse {\n  artists: ArtistSearchResult;\n}\n\nexport interface AlbumResultItem {\n  album_type: string;\n  artists: ArtistResultItemBase[];\n  available_markets: string[];\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  images: ImageItemInfo[];\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  uri: string;\n}\n\nexport interface AlbumSearchResult extends ResultSearchBase {\n  items: AlbumResultItem[];\n}\n\nexport interface AlbumSearchResponse {\n  albums: AlbumSearchResult;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AlbumSearchResult.html":{"url":"interfaces/AlbumSearchResult.html","title":"interface - AlbumSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AlbumSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/spotify-api/spotify-api.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ResultSearchBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         AlbumResultItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AlbumResultItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport type SearchType = 'album' | 'artist';\n\nexport interface SpotifySearchForm {\n  search: FormControl;\n  type: FormControl;\n}\n\nexport interface TypeOption {\n  value: SearchType | undefined;\n  text: string;\n}\n\nexport interface SearchValues {\n  search: string;\n  type: SearchType;\n}\n\nexport interface ImageItemInfo {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface ResultSearchBase {\n  href: string;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  total: number;\n}\n\nexport interface ArtistResultItemBase {\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistResultItem extends ArtistResultItemBase {\n  followers: {\n    href: null;\n    total: number;\n  };\n  genres: string[];\n  images: ImageItemInfo[];\n  popularity: number;\n}\n\nexport interface ArtistSearchResult extends ResultSearchBase {\n  items: ArtistResultItem[];\n}\nexport interface ArtistSearchResponse {\n  artists: ArtistSearchResult;\n}\n\nexport interface AlbumResultItem {\n  album_type: string;\n  artists: ArtistResultItemBase[];\n  available_markets: string[];\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  images: ImageItemInfo[];\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  uri: string;\n}\n\nexport interface AlbumSearchResult extends ResultSearchBase {\n  items: AlbumResultItem[];\n}\n\nexport interface AlbumSearchResponse {\n  albums: AlbumSearchResult;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicación\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            MatToolbarModule\n                            MatIconModule\n                            MatButtonModule\n                            MatSidenavModule\n                                DrawerMenuComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                drawerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleDrawer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDrawer\n                        \n                    \n                \n            \n            \n                \ntoggleDrawer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Abre y cierra el menú de la apliación\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        drawerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDrawer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('drawer', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n            \n                \n                    Referencia al menú de la aplicación\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDrawer, MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { RouterOutlet } from '@angular/router';\nimport { DrawerMenuComponent } from './components/drawer-menu/drawer-menu.component';\n\n/**\n * Componente principal de la aplicación\n */\n@Component({\n  selector: 'app-root',\n  imports: [\n    RouterOutlet,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSidenavModule,\n    DrawerMenuComponent,\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  /**\n   * Referencia al menú de la aplicación\n   */\n  @ViewChild('drawer', { static: true }) drawerRef!: MatDrawer;\n\n  /**\n   * Abre y cierra el menú de la apliación\n   */\n  toggleDrawer(): void {\n    this.drawerRef.toggle();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      menu\n    \n    Angular Material\n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu        Angular Material    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArtistAlbumDataComponent.html":{"url":"components/ArtistAlbumDataComponent.html","title":"component - ArtistAlbumDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ArtistAlbumDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-artist-album-data\n            \n\n\n            \n                imports\n                \n                            DecimalPipe\n                            DatePipe\n                            MatChipsModule\n                            MatButtonModule\n                            MatCardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./artist-album-data.html\n            \n\n\n\n            \n                styleUrl\n                ./artist-album-data.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artistsList\n                            \n                            \n                                followers\n                            \n                            \n                                genres\n                            \n                            \n                                image\n                            \n                            \n                                panelOpened\n                            \n                            \n                                popularity\n                            \n                            \n                                releaseDate\n                            \n                            \n                                spotifyUrl\n                            \n                            \n                                totalTracks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openUrl\n                            \n                            \n                                    Private\n                                setArtistAlbumInfo\n                            \n                            \n                                    Private\n                                setImageInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                            \n                                isArtist\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        info\n                    \n                \n                \n                    \n                        Type :     ArtistResultItem | AlbumResultItem\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isArtist\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUrl\n                        \n                    \n                \n            \n            \n                \nopenUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setArtistAlbumInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    setArtistAlbumInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setImageInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    setImageInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        artistsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        followers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        panelOpened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popularity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        releaseDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spotifyUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalTracks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DatePipe, DecimalPipe } from '@angular/common';\nimport { Component, Input, OnInit, signal, WritableSignal } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { EXTERNAL_URL_SPOTIFY_KEY } from '../../../../constants/spotify-api/spotify-api.constants';\nimport {\n  AlbumResultItem,\n  ArtistResultItem,\n  ArtistResultItemBase,\n  ImageItemInfo,\n} from '../../../../models/spotify-api/spotify-api.model';\n\n@Component({\n    selector: 'app-artist-album-data',\n    templateUrl: './artist-album-data.html',\n    styleUrl: './artist-album-data.scss',\n    imports: [\n        DecimalPipe,\n        DatePipe,\n        MatChipsModule,\n        MatButtonModule,\n        MatCardModule,\n    ]\n})\nexport class ArtistAlbumDataComponent implements OnInit {\n  @Input({ required: true }) isArtist!: boolean;\n  @Input({ required: true }) info!: ArtistResultItem | AlbumResultItem;\n\n  genres: string[] = [];\n  followers!: WritableSignal;\n  popularity!: WritableSignal;\n  image!: WritableSignal;\n  spotifyUrl!: string;\n  releaseDate!: string;\n  totalTracks!: number;\n  artistsList: { name: string; url: string }[] = [];\n\n  panelOpened = false;\n\n  ngOnInit(): void {\n    this.followers = signal(undefined);\n    this.popularity = signal(undefined);\n    this.image = signal(undefined);\n    this.setArtistAlbumInfo();\n    this.setImageInfo();\n  }\n\n  private setArtistAlbumInfo(): void {\n    if (this.isArtist) {\n      this.genres = (this.info as ArtistResultItem).genres;\n      this.followers.set((this.info as ArtistResultItem).followers?.total);\n      this.popularity.set((this.info as ArtistResultItem).popularity);\n    } else {\n      this.releaseDate = (this.info as AlbumResultItem).release_date;\n      this.totalTracks = (this.info as AlbumResultItem).total_tracks;\n\n      this.artistsList = (this.info as AlbumResultItem).artists?.map(\n        (item: ArtistResultItemBase) => ({\n          name: item.name,\n          url: item.external_urls[EXTERNAL_URL_SPOTIFY_KEY],\n        })\n      );\n    }\n\n    if (this.info.external_urls) {\n      this.spotifyUrl = this.info.external_urls[EXTERNAL_URL_SPOTIFY_KEY];\n    }\n  }\n\n  private setImageInfo(): void {\n    let bigger!: ImageItemInfo;\n    let current!: ImageItemInfo;\n\n    this.info.images?.forEach((image: ImageItemInfo) => {\n      let isBigger = false;\n      if (!bigger || image.width > bigger?.width) {\n        bigger = image;\n        isBigger = true;\n      }\n      if ((!current || image.width > current?.width) && !isBigger) {\n        current = image;\n      }\n      this.image.set(current);\n    });\n  }\n\n  openUrl(url: string): void {\n    window.open(url, '_blank');\n  }\n}\n\n    \n\n    \n        \n  \n    {{ info.name }}\n  \n  @if(image()) {\n  \n    \n  \n  }\n  \n    @if(genres.length) {\n    \n      Generos\n      \n        @for(genre of genres; track genre) {\n        {{ genre }}\n        }\n      \n    \n    } @if(isArtist) {\n    \n      Popularidad:\n      \n        {{ popularity() | number : \"1.0-0\" : \"es-ES\" }}\n      \n      Seguidores:\n      \n        {{ followers() | number : \"1.0-0\" : \"es-ES\" }}\n      \n    \n    } @else {\n    \n      Fecha de lanzamiento:\n      \n        {{ releaseDate | date : \"mediumDate\" : \"\" : \"es-ES\" }}\n      \n      Número de pistas:\n      \n        {{ totalTracks | number : \"1.0-0\" : \"es-ES\" }}\n      \n    \n    @if(artistsList.length) {\n    \n      Artistas\n      @for(artist of artistsList; track artist) {\n      \n        {{ artist.name }}\n      \n      \n        Ver en Spotify\n      \n      }\n    \n    } }\n  \n  \n    @if(spotifyUrl) {\n    Ver en Spotify\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ info.name }}    @if(image()) {          }      @if(genres.length) {          Generos              @for(genre of genres; track genre) {        {{ genre }}        }              } @if(isArtist) {          Popularidad:              {{ popularity() | number : \"1.0-0\" : \"es-ES\" }}            Seguidores:              {{ followers() | number : \"1.0-0\" : \"es-ES\" }}              } @else {          Fecha de lanzamiento:              {{ releaseDate | date : \"mediumDate\" : \"\" : \"es-ES\" }}            Número de pistas:              {{ totalTracks | number : \"1.0-0\" : \"es-ES\" }}              @if(artistsList.length) {          Artistas      @for(artist of artistsList; track artist) {              {{ artist.name }}                    Ver en Spotify            }        } }        @if(spotifyUrl) {    Ver en Spotify    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ArtistAlbumDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArtistResultItem.html":{"url":"interfaces/ArtistResultItem.html","title":"interface - ArtistResultItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ArtistResultItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/spotify-api/spotify-api.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ArtistResultItemBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            followers\n                                        \n                                \n                                \n                                        \n                                            genres\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            popularity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genres:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         ImageItemInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageItemInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popularity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        popularity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport type SearchType = 'album' | 'artist';\n\nexport interface SpotifySearchForm {\n  search: FormControl;\n  type: FormControl;\n}\n\nexport interface TypeOption {\n  value: SearchType | undefined;\n  text: string;\n}\n\nexport interface SearchValues {\n  search: string;\n  type: SearchType;\n}\n\nexport interface ImageItemInfo {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface ResultSearchBase {\n  href: string;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  total: number;\n}\n\nexport interface ArtistResultItemBase {\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistResultItem extends ArtistResultItemBase {\n  followers: {\n    href: null;\n    total: number;\n  };\n  genres: string[];\n  images: ImageItemInfo[];\n  popularity: number;\n}\n\nexport interface ArtistSearchResult extends ResultSearchBase {\n  items: ArtistResultItem[];\n}\nexport interface ArtistSearchResponse {\n  artists: ArtistSearchResult;\n}\n\nexport interface AlbumResultItem {\n  album_type: string;\n  artists: ArtistResultItemBase[];\n  available_markets: string[];\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  images: ImageItemInfo[];\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  uri: string;\n}\n\nexport interface AlbumSearchResult extends ResultSearchBase {\n  items: AlbumResultItem[];\n}\n\nexport interface AlbumSearchResponse {\n  albums: AlbumSearchResult;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArtistResultItemBase.html":{"url":"interfaces/ArtistResultItemBase.html","title":"interface - ArtistResultItemBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ArtistResultItemBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/spotify-api/spotify-api.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            external_urls\n                                        \n                                \n                                \n                                        \n                                            href\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        external_urls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        external_urls:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport type SearchType = 'album' | 'artist';\n\nexport interface SpotifySearchForm {\n  search: FormControl;\n  type: FormControl;\n}\n\nexport interface TypeOption {\n  value: SearchType | undefined;\n  text: string;\n}\n\nexport interface SearchValues {\n  search: string;\n  type: SearchType;\n}\n\nexport interface ImageItemInfo {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface ResultSearchBase {\n  href: string;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  total: number;\n}\n\nexport interface ArtistResultItemBase {\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistResultItem extends ArtistResultItemBase {\n  followers: {\n    href: null;\n    total: number;\n  };\n  genres: string[];\n  images: ImageItemInfo[];\n  popularity: number;\n}\n\nexport interface ArtistSearchResult extends ResultSearchBase {\n  items: ArtistResultItem[];\n}\nexport interface ArtistSearchResponse {\n  artists: ArtistSearchResult;\n}\n\nexport interface AlbumResultItem {\n  album_type: string;\n  artists: ArtistResultItemBase[];\n  available_markets: string[];\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  images: ImageItemInfo[];\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  uri: string;\n}\n\nexport interface AlbumSearchResult extends ResultSearchBase {\n  items: AlbumResultItem[];\n}\n\nexport interface AlbumSearchResponse {\n  albums: AlbumSearchResult;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArtistSearchResponse.html":{"url":"interfaces/ArtistSearchResponse.html","title":"interface - ArtistSearchResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ArtistSearchResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/spotify-api/spotify-api.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artists\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artists:         ArtistSearchResult\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ArtistSearchResult\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport type SearchType = 'album' | 'artist';\n\nexport interface SpotifySearchForm {\n  search: FormControl;\n  type: FormControl;\n}\n\nexport interface TypeOption {\n  value: SearchType | undefined;\n  text: string;\n}\n\nexport interface SearchValues {\n  search: string;\n  type: SearchType;\n}\n\nexport interface ImageItemInfo {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface ResultSearchBase {\n  href: string;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  total: number;\n}\n\nexport interface ArtistResultItemBase {\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistResultItem extends ArtistResultItemBase {\n  followers: {\n    href: null;\n    total: number;\n  };\n  genres: string[];\n  images: ImageItemInfo[];\n  popularity: number;\n}\n\nexport interface ArtistSearchResult extends ResultSearchBase {\n  items: ArtistResultItem[];\n}\nexport interface ArtistSearchResponse {\n  artists: ArtistSearchResult;\n}\n\nexport interface AlbumResultItem {\n  album_type: string;\n  artists: ArtistResultItemBase[];\n  available_markets: string[];\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  images: ImageItemInfo[];\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  uri: string;\n}\n\nexport interface AlbumSearchResult extends ResultSearchBase {\n  items: AlbumResultItem[];\n}\n\nexport interface AlbumSearchResponse {\n  albums: AlbumSearchResult;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArtistSearchResult.html":{"url":"interfaces/ArtistSearchResult.html","title":"interface - ArtistSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ArtistSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/spotify-api/spotify-api.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ResultSearchBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         ArtistResultItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ArtistResultItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport type SearchType = 'album' | 'artist';\n\nexport interface SpotifySearchForm {\n  search: FormControl;\n  type: FormControl;\n}\n\nexport interface TypeOption {\n  value: SearchType | undefined;\n  text: string;\n}\n\nexport interface SearchValues {\n  search: string;\n  type: SearchType;\n}\n\nexport interface ImageItemInfo {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface ResultSearchBase {\n  href: string;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  total: number;\n}\n\nexport interface ArtistResultItemBase {\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistResultItem extends ArtistResultItemBase {\n  followers: {\n    href: null;\n    total: number;\n  };\n  genres: string[];\n  images: ImageItemInfo[];\n  popularity: number;\n}\n\nexport interface ArtistSearchResult extends ResultSearchBase {\n  items: ArtistResultItem[];\n}\nexport interface ArtistSearchResponse {\n  artists: ArtistSearchResult;\n}\n\nexport interface AlbumResultItem {\n  album_type: string;\n  artists: ArtistResultItemBase[];\n  available_markets: string[];\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  images: ImageItemInfo[];\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  uri: string;\n}\n\nexport interface AlbumSearchResult extends ResultSearchBase {\n  items: AlbumResultItem[];\n}\n\nexport interface AlbumSearchResponse {\n  albums: AlbumSearchResult;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BreakpointService.html":{"url":"injectables/BreakpointService.html","title":"injectable - BreakpointService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BreakpointService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/breakpoint.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para comprobar los breakpoints de diferentes dispositivos y resoluciones\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                breakpointObserver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isHandsetPortrait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/breakpoint.service.ts:15\n                            \n                        \n\n                \n                    \n                            Método constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isHandsetPortrait\n                        \n                    \n                \n            \n            \n                \nisHandsetPortrait()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/breakpoint.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Devuelve si el breakpoint corresponde a un móvil en vertical\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                True si el dispositivo es un móvil en vertical\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        breakpointObserver\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BreakpointObserver\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/breakpoint.service.ts:15\n                        \n                    \n\n            \n                \n                    Servicio de Angular para observar breakpoints\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { inject, Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\n\n/**\n * Servicio para comprobar los breakpoints de diferentes dispositivos y resoluciones\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreakpointService {\n  /**\n   * Servicio de Angular para observar breakpoints\n   */\n  private readonly breakpointObserver!: BreakpointObserver;\n\n  /**\n   * Método constructor\n   */\n  constructor() {\n    this.breakpointObserver = inject(BreakpointObserver);\n  }\n\n  /**\n   * Devuelve si el breakpoint corresponde a un móvil en vertical\n   * @returns {boolean} True si el dispositivo es un móvil en vertical\n   */\n  isHandsetPortrait(): Observable {\n    return this.breakpointObserver\n      .observe([Breakpoints.HandsetPortrait])\n      .pipe(map((result) => result.matches));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cache.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para cachear la respuesta de una llamada http\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCache\n                            \n                            \n                                getCache\n                            \n                            \n                                setCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCache\n                        \n                    \n                \n            \n            \n                \ndeleteCache(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cache.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Borra una entrada de la caché de llamadas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Url de la llamada http\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCache\n                        \n                    \n                \n            \n            \n                \ngetCache(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cache.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Devuelve los datos de una llamada guardada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Url de la llamada http\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type | undefined\n\n                        \n                            \n                                : HttpResponse; time: number } Objeto con la información de la respuesta http y el tiempo en que realizó\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCache\n                        \n                    \n                \n            \n            \n                \nsetCache(key: string, data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cache.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Guarda el resultado de una llamada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Url de la llamada http\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map; time: number }>()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cache.service.ts:14\n                        \n                    \n\n            \n                \n                    Mapa con las llamadas http y sus resultados\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n/**\n * Servicio para cachear la respuesta de una llamada http\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CacheService {\n  /**\n   * Mapa con las llamadas http y sus resultados\n   */\n  private readonly data: Map; time: number }\n  > = new Map; time: number }>();\n\n  /**\n   * Guarda el resultado de una llamada\n   * @param {string} key Url de la llamada http\n   * @param { req: HttpResponse; time: number } data datos de la llamada http: el objeto de respuesta y el tiempo en que se ha realizado\n   */\n  setCache(\n    key: string,\n    data: { req: HttpResponse; time: number }\n  ): void {\n    this.data.set(key, data);\n  }\n\n  /**\n   * Devuelve los datos de una llamada guardada\n   * @param {string} key Url de la llamada http\n   * @returns { req: HttpResponse; time: number } Objeto con la información de la respuesta http y el tiempo en que realizó\n   */\n  getCache(\n    key: string\n  ): { req: HttpResponse; time: number } | undefined {\n    return this.data.get(key);\n  }\n\n  /**\n   * Borra una entrada de la caché de llamadas\n   * @param {string} key Url de la llamada http\n   */\n  deleteCache(key: string): void {\n    this.data.delete(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CatDammingsHistoricChartComponent.html":{"url":"components/CatDammingsHistoricChartComponent.html","title":"component - CatDammingsHistoricChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CatDammingsHistoricChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/cat-dammings/components/historic-chart/historic-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dammings-historic-chart\n            \n\n\n            \n                imports\n                \n                                ModalWrapperComponent\n                            BaseChartDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./historic-chart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./historic-chart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                barChartData\n                            \n                            \n                                barChartOptions\n                            \n                            \n                                data\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cat-dammings/components/historic-chart/historic-chart.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        barChartData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartData\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-dammings/components/historic-chart/historic-chart.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barChartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-dammings/components/historic-chart/historic-chart.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FilteredInfoItemDate[]\n\n                    \n                \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-dammings/components/historic-chart/historic-chart.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-dammings/components/historic-chart/historic-chart.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n  signal,\n  WritableSignal,\n} from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ChartData, ChartOptions } from 'chart.js';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { ModalWrapperComponent } from '../../../../components/modal-wrapper/modal-wrapper.component';\nimport { FilteredInfoItemDate } from '../../../../models/cat-dammings/cat-dammings.model';\n\n@Component({\n  selector: 'app-dammings-historic-chart',\n  templateUrl: './historic-chart.component.html',\n  styleUrl: './historic-chart.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ModalWrapperComponent, BaseChartDirective],\n})\nexport class CatDammingsHistoricChartComponent implements OnInit {\n  data: FilteredInfoItemDate[] = inject(MAT_DIALOG_DATA);\n\n  title!: WritableSignal;\n\n  barChartData!: ChartData;\n  barChartOptions!: ChartOptions;\n\n  ngOnInit(): void {\n    this.title = signal(this.data[0].estaci);\n\n    this.barChartData = {\n      yLabels: [15, 20, 25, 30],\n      labels: this.data.map((i) => i.dia.toLocaleDateString()).reverse(),\n      datasets: [\n        {\n          data: this.data\n            .map((i) => parseFloat(i.percentatge_volum_embassat))\n            .reverse(),\n          label: '% Volumen embalsado',\n          backgroundColor: '#005cbb',\n          animation: {},\n          barPercentage: 0.5,\n          borderRadius: 8,\n          borderWidth: 0.5,\n        },\n      ],\n    };\n\n    this.barChartOptions = {\n      responsive: true,\n    };\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CatDammingsHistoricChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatDammingsService.html":{"url":"injectables/CatDammingsService.html","title":"injectable - CatDammingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatDammingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cat-dammings.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _list\n                            \n                            \n                                    Private\n                                    Readonly\n                                _maxDate\n                            \n                            \n                                    Private\n                                    Readonly\n                                _minDate\n                            \n                            \n                                    Private\n                                    Readonly\n                                _stations\n                            \n                            \n                                    Private\n                                    Readonly\n                                http\n                            \n                            \n                                    Private\n                                    Readonly\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                    Private\n                                manageStationsList\n                            \n                            \n                                    Private\n                                setInfo\n                            \n                            \n                                    Private\n                                setMaxMinDate\n                            \n                            \n                                    Private\n                                setStationsInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    maxDate\n                                \n                                \n                                    minDate\n                                \n                                \n                                    stations\n                                \n                                \n                                    list\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cat-dammings.service.ts:41\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cat-dammings.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        manageStationsList\n                        \n                    \n                \n            \n            \n                \n                        \n                    manageStationsList(stationsListed: Set, item: DammingsInfoResponse, stations: StationItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cat-dammings.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationsListed\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                item\n                                            \n                                                            DammingsInfoResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stations\n                                            \n                                                            StationItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    setInfo(data: DammingsInfoResponse[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cat-dammings.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            DammingsInfoResponse[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setMaxMinDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    setMaxMinDate(date: Date, max: Date, min: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cat-dammings.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                min\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setStationsInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStationsInfo(data: DammingsInfoResponse[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cat-dammings.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            DammingsInfoResponse[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cat-dammings.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _maxDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cat-dammings.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _minDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cat-dammings.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _stations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cat-dammings.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cat-dammings.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://analisi.transparenciacatalunya.cat/resource/gn9e-3qhr.json'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cat-dammings.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        maxDate\n                    \n                \n\n                \n                    \n                        getmaxDate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/cat-dammings.service.ts:30\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        minDate\n                    \n                \n\n                \n                    \n                        getminDate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/cat-dammings.service.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stations\n                    \n                \n\n                \n                    \n                        getstations()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/cat-dammings.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n\n                \n                    \n                        getlist()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/cat-dammings.service.ts:39\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, take, tap } from 'rxjs';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ONE_DAY_MILISECONDS } from '../constants/common.constants';\nimport {\n  DammingsInfoItem,\n  DammingsInfoResponse,\n  StationItem,\n} from '../models/cat-dammings/cat-dammings.model';\n\n@Injectable({\n  providedIn: 'any',\n})\nexport class CatDammingsService {\n  private readonly URL =\n    'https://analisi.transparenciacatalunya.cat/resource/gn9e-3qhr.json';\n\n  private readonly http!: HttpClient;\n\n  private readonly _maxDate: BehaviorSubject =\n    new BehaviorSubject(undefined);\n  private readonly _minDate: BehaviorSubject =\n    new BehaviorSubject(undefined);\n  private readonly _stations: BehaviorSubject =\n    new BehaviorSubject(undefined);\n  private readonly _list: BehaviorSubject =\n    new BehaviorSubject(undefined);\n\n  get maxDate(): Observable {\n    return this._maxDate.asObservable();\n  }\n  get minDate(): Observable {\n    return this._minDate.asObservable();\n  }\n  get stations(): Observable {\n    return this._stations.asObservable();\n  }\n  get list(): Observable {\n    return this._list.asObservable();\n  }\n\n  constructor() {\n    this.http = inject(HttpClient);\n  }\n\n  loadData(): void {\n    this.http\n      .get(this.URL)\n      .pipe(\n        take(1),\n        tap((result: DammingsInfoResponse[]) => this.setStationsInfo(result))\n      )\n      .subscribe();\n  }\n\n  private setStationsInfo(data: DammingsInfoResponse[]): void {\n    const { maxDate, minDate, stations, list } = this.setInfo(data);\n\n    this._maxDate.next(maxDate);\n    this._minDate.next(minDate);\n    this._stations.next(stations);\n    this._list.next(list);\n  }\n\n  private setInfo(data: DammingsInfoResponse[]): {\n    maxDate: Date;\n    minDate: Date;\n    stations: StationItem[];\n    list: DammingsInfoItem[];\n  } {\n    const stations: StationItem[] = [];\n    const stationsListed = new Set();\n    let maxDate!: Date;\n    let minDate!: Date;\n\n    const list: DammingsInfoItem[] = data.map((item: DammingsInfoResponse) => {\n      [maxDate, minDate] = this.setMaxMinDate(\n        new Date(item.dia),\n        maxDate,\n        minDate\n      );\n\n      let stationKey = this.manageStationsList(stationsListed, item, stations);\n\n      return {\n        ...item,\n        id: uuidv4(),\n        id_estaci: stationKey,\n        date: new Date(item.dia),\n      };\n    });\n\n    return { maxDate, minDate, stations, list };\n  }\n\n  private setMaxMinDate(date: Date, max: Date, min: Date): [Date, Date] {\n    const currentValue = date.getTime();\n    const maxValue = max?.getTime();\n    const minValue = min?.getTime();\n    const newMax = !max || currentValue > maxValue ? date : max;\n    const newMin = !min || currentValue ,\n    item: DammingsInfoResponse,\n    stations: StationItem[]\n  ): string {\n    let stationKey = '';\n\n    if (!stationsListed.has(item.estaci)) {\n      stationKey = uuidv4();\n      stations.push({\n        key: stationKey,\n        name: item.estaci,\n      });\n      stationsListed.add(item.estaci);\n    } else {\n      const stationValue = stations.find(\n        (itemStation: StationItem) => itemStation.name === item.estaci\n      );\n      if (stationValue) {\n        stationKey = stationValue.key;\n      }\n    }\n\n    return stationKey;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CatPopulationComponent.html":{"url":"components/CatPopulationComponent.html","title":"component - CatPopulationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CatPopulationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/cat-population/cat-population.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            JoinPostalCodesPipe\n                            DecimalPipe\n                \n            \n\n\n            \n                selector\n                app-cat-population\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                            NgTemplateOutlet\n                                PageTitleComponent\n                            MatStepperModule\n                            FormsModule\n                            ReactiveFormsModule\n                            MatFormFieldModule\n                            MatSelectModule\n                            MatButtonModule\n                            MatInputModule\n                            MatAutocompleteModule\n                            MatTabsModule\n                            JoinPostalCodesPipe\n                            MatGridListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cat-population.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cat-population.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breakpointService\n                            \n                            \n                                    Private\n                                    Readonly\n                                catPopulationService\n                            \n                            \n                                cityForm\n                            \n                            \n                                citySearchCode\n                            \n                            \n                                citySelected\n                            \n                            \n                                    Private\n                                    Readonly\n                                decimalPipe\n                            \n                            \n                                    Private\n                                    Readonly\n                                destroyRef\n                            \n                            \n                                displayFn\n                            \n                            \n                                formatedPopulationData\n                            \n                            \n                                    Private\n                                    Readonly\n                                formBuilder\n                            \n                            \n                                    Private\n                                    Readonly\n                                injector\n                            \n                            \n                                    Private\n                                    Readonly\n                                joinPostalCodesPipe\n                            \n                            \n                                populationData\n                            \n                            \n                                provinceForm\n                            \n                            \n                                provinces\n                            \n                            \n                                    \n                                stepper\n                            \n                            \n                                zipCodes\n                            \n                            \n                                zipCodesFiltered\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter\n                            \n                            \n                                _getListItemObject\n                            \n                            \n                                filterByProvinceCode\n                            \n                            \n                                handleCitySelected\n                            \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                    Private\n                                initSignals\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:101\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    _filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cat-population/cat-population.component.ts:356\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ZipCodeListItem[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _getListItemObject\n                        \n                    \n                \n            \n            \n                \n_getListItemObject(value: string, number: boolean, titleLeft: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cat-population/cat-population.component.ts:316\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                number\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                titleLeft\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ListItemObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterByProvinceCode\n                        \n                    \n                \n            \n            \n                \nfilterByProvinceCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cat-population/cat-population.component.ts:331\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ZipCodeListItem[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleCitySelected\n                        \n                    \n                \n            \n            \n                \nhandleCitySelected(item: MatAutocompleteSelectedEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cat-population/cat-population.component.ts:364\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        MatAutocompleteSelectedEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    initForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cat-population/cat-population.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initSignals\n                        \n                    \n                \n            \n            \n                \n                        \n                    initSignals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cat-population/cat-population.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cat-population/cat-population.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        breakpointService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BreakpointService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        catPopulationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CatPopulationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cityForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        citySearchCode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        citySelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ZipCodeListItem\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        decimalPipe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DecimalPipe\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DestroyRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayFn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:345\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatedPopulationData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        joinPostalCodesPipe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JoinPostalCodesPipe\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populationData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provinceForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provinces\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FILTER_PROVINCE_OPTIONS\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stepper\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatStepper\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('stepper')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipCodesFiltered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ZipCodeListItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cat-population/cat-population.component.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe, DecimalPipe, NgTemplateOutlet } from '@angular/common'\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  DestroyRef,\n  inject,\n  Injector,\n  OnInit,\n  signal,\n  Signal,\n  ViewChild,\n} from '@angular/core'\nimport {\n  takeUntilDestroyed,\n  toObservable,\n  toSignal,\n} from '@angular/core/rxjs-interop'\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\nimport {\n  MatAutocompleteModule,\n  MatAutocompleteSelectedEvent,\n} from '@angular/material/autocomplete'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatSelectModule } from '@angular/material/select'\nimport { MatStepper, MatStepperModule } from '@angular/material/stepper'\nimport { MatTabsModule } from '@angular/material/tabs'\nimport { filter, switchMap } from 'rxjs'\nimport { PageTitleComponent } from '../../components/page-title/page-title.component'\nimport {\n  FILTER_PROVINCE_OPTIONS,\n  ZIP_CODES,\n} from '../../constants/cat-population/zip-codes.constants'\nimport {\n  FormatedPopulationData,\n  ListItemObject,\n} from '../../models/cat-population/list.model'\nimport { PopulationDataResponse } from '../../models/cat-population/population-response.model'\nimport { ZipCodeListItem } from '../../models/cat-population/zip-codes.model'\nimport { JoinPostalCodesPipe } from '../../pipes/join-postal-codes.pipe'\nimport { BreakpointService } from '../../services/breakpoint.service'\nimport { CatPopulationService } from '../../services/cat-population.service'\n\n@Component({\n  selector: 'app-cat-population',\n  templateUrl: './cat-population.component.html',\n  styleUrl: './cat-population.component.scss',\n  imports: [\n    AsyncPipe,\n    NgTemplateOutlet,\n    PageTitleComponent,\n    MatStepperModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatTabsModule,\n    JoinPostalCodesPipe,\n    MatGridListModule,\n  ],\n  providers: [JoinPostalCodesPipe, DecimalPipe],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CatPopulationComponent implements OnInit {\n  @ViewChild('stepper') stepper!: MatStepper\n\n  private readonly catPopulationService!: CatPopulationService\n  private readonly injector = inject(Injector)\n  private readonly formBuilder!: FormBuilder\n  private readonly destroyRef!: DestroyRef\n  private readonly joinPostalCodesPipe!: JoinPostalCodesPipe\n  private readonly decimalPipe!: DecimalPipe\n\n  breakpointService!: BreakpointService\n\n  zipCodes!: Signal\n  populationData!: Signal\n\n  provinceForm!: FormGroup\n  cityForm!: FormGroup\n\n  provinces = FILTER_PROVINCE_OPTIONS\n  zipCodesFiltered: ZipCodeListItem[] = []\n\n  citySelected!: ZipCodeListItem\n  citySearchCode = signal('')\n\n  formatedPopulationData!: Signal\n\n  constructor() {\n    this.catPopulationService = inject(CatPopulationService)\n    this.formBuilder = inject(FormBuilder)\n    this.destroyRef = inject(DestroyRef)\n    this.joinPostalCodesPipe = inject(JoinPostalCodesPipe)\n    this.breakpointService = inject(BreakpointService)\n    this.decimalPipe = inject(DecimalPipe)\n  }\n\n  ngOnInit(): void {\n    this.initSignals()\n    this.initForm()\n  }\n\n  private initForm(): void {\n    this.provinceForm = this.formBuilder.group({\n      province: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n    })\n\n    this.cityForm = this.formBuilder.group({\n      city: new FormControl(undefined, {\n        nonNullable: true,\n        validators: [Validators.required],\n      }),\n    })\n\n    this.provinceForm.controls['province']?.valueChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.cityForm.controls['city']?.reset()\n        this.cityForm.controls['city']?.setErrors(null)\n        this.cityForm.controls['city']?.markAsPending()\n      })\n\n    this.cityForm.controls['city']?.valueChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((value) => {\n        this.zipCodesFiltered = value\n          ? this._filter(value)\n          : this.filterByProvinceCode()\n      })\n  }\n\n  private initSignals(): void {\n    this.zipCodes = toSignal(this.catPopulationService.getZipCodes(), {\n      initialValue: undefined,\n      injector: this.injector,\n    })\n\n    this.formatedPopulationData = computed(() => {\n      const data = this.populationData()?.map(\n        (item: PopulationDataResponse) => {\n          return {\n            id: window.crypto.randomUUID(),\n            year: item.any,\n            rows: [\n              [\n                this._getListItemObject('', false, false),\n                this._getListItemObject('Hombres', false, false),\n                this._getListItemObject('Mujeres', false, false),\n                this._getListItemObject('Todos', false, false),\n              ],\n              [\n                this._getListItemObject('De 0 a 14 años', false, true),\n                this._getListItemObject(\n                  this.decimalPipe.transform(\n                    item.homes_de_0_a_14_anys,\n                    '1.0-0',\n                    'es-ES'\n                  ) ?? '',\n                  true,\n                  false\n                ),\n                this._getListItemObject(\n                  this.decimalPipe.transform(\n                    item.dones_de_0_a_14_anys,\n                    '1.0-0',\n                    'es-ES'\n                  ) ?? '',\n                  true,\n                  false\n                ),\n                this._getListItemObject(\n                  this.decimalPipe.transform(\n                    item.total_de_65_anys_i_m_s,\n                    '1.0-0',\n                    'es-ES'\n                  ) ?? '',\n                  true,\n                  false\n                ),\n              ],\n              [\n                this._getListItemObject('De 15 a 64 años', false, true),\n                this._getListItemObject(\n                  this.decimalPipe.transform(\n                    item.homes_de_15_a_64_anys,\n                    '1.0-0',\n                    'es-ES'\n                  ) ?? '',\n                  true,\n                  false\n                ),\n                this._getListItemObject(\n                  this.decimalPipe.transform(\n                    item.dones_de_15_a_64_anys,\n                    '1.0-0',\n                    'es-ES'\n                  ) ?? '',\n                  true,\n                  false\n                ),\n                this._getListItemObject(\n                  this.decimalPipe.transform(\n                    item.total_de_15_a_64_anys,\n                    '1.0-0',\n                    'es-ES'\n                  ) ?? '',\n                  true,\n                  false\n                ),\n              ],\n              [\n                this._getListItemObject('65 años o más', false, true),\n                this._getListItemObject(\n                  this.decimalPipe.transform(\n                    item.homes_de_65_anys_i_m_s,\n                    '1.0-0',\n                    'es-ES'\n                  ) ?? '',\n                  true,\n                  false\n                ),\n                this._getListItemObject(\n                  this.decimalPipe.transform(\n                    item.dones_de_15_a_64_anys,\n                    '1.0-0',\n                    'es-ES'\n                  ) ?? '',\n                  true,\n                  false\n                ),\n                this._getListItemObject(\n                  this.decimalPipe.transform(\n                    item.total_de_65_anys_i_m_s,\n                    '1.0-0',\n                    'es-ES'\n                  ) ?? '',\n                  true,\n                  false\n                ),\n              ],\n              [\n                this._getListItemObject('Total', false, true),\n                this._getListItemObject(\n                  this.decimalPipe.transform(\n                    parseInt(item.homes_de_0_a_14_anys) +\n                      parseInt(item.homes_de_15_a_64_anys) +\n                      parseInt(item.homes_de_65_anys_i_m_s),\n                    '1.0-0',\n                    'es-ES'\n                  ) ?? '',\n                  true,\n                  false\n                ),\n                this._getListItemObject(\n                  this.decimalPipe.transform(\n                    parseInt(item.dones_de_0_a_14_anys) +\n                      parseInt(item.dones_de_15_a_64_anys) +\n                      parseInt(item.dones_de_65_anys_i_m_s),\n                    '1.0-0',\n                    'es-ES'\n                  ) ?? '',\n                  true,\n                  false\n                ),\n                this._getListItemObject(\n                  this.decimalPipe.transform(\n                    parseInt(item.total_de_0_a_14_anys) +\n                      parseInt(item.total_de_15_a_64_anys) +\n                      parseInt(item.total_de_65_anys_i_m_s),\n                    '1.0-0',\n                    'es-ES'\n                  ) ?? '',\n                  true,\n                  false\n                ),\n              ],\n            ],\n          }\n        }\n      )\n      return data || []\n    })\n\n    this.populationData = toSignal(\n      toObservable(this.citySearchCode, {\n        injector: this.injector,\n      }).pipe(\n        filter((code) => !!code),\n        takeUntilDestroyed(this.destroyRef),\n        switchMap((code) => this.catPopulationService.getPopulationData(code))\n      ),\n      {\n        initialValue: undefined,\n        injector: this.injector,\n      }\n    )\n  }\n\n  _getListItemObject(\n    value: string,\n    number: boolean,\n    titleLeft: boolean\n  ): ListItemObject {\n    return {\n      id: window.crypto.randomUUID(),\n      borderBottom: !!value,\n      isNumber: number,\n      isTitle: !number,\n      isTitleLeft: titleLeft,\n      value,\n    }\n  }\n\n  filterByProvinceCode(): ZipCodeListItem[] {\n    const codes = [this.provinceForm.controls['province'].value]\n\n    if (this.provinceForm.controls['province'].value === ZIP_CODES.LLEIDA) {\n      codes.push(ZIP_CODES.TREMP)\n    }\n\n    return (\n      this.zipCodes()?.filter((item: ZipCodeListItem) => {\n        return codes.includes(item.codi_postal[0].slice(0, 2))\n      }) || []\n    )\n  }\n\n  displayFn = (option: string): string => {\n    const value = this.zipCodesFiltered?.find(\n      (item: ZipCodeListItem) => item.codi_municipi === option\n    )\n    return value\n      ? `(${this.joinPostalCodesPipe.transform(value.codi_postal, 3)}) ${\n          value.nom_municipi\n        }`\n      : ''\n  }\n\n  private _filter(value: string): ZipCodeListItem[] {\n    return this.zipCodesFiltered.filter(\n      (item) =>\n        item.nom_municipi.toLocaleLowerCase().includes(value.toLowerCase()) ||\n        item.codi_municipi.includes(value)\n    )\n  }\n\n  handleCitySelected(item: MatAutocompleteSelectedEvent): void {\n    const selected = this.zipCodesFiltered.find(\n      (code: ZipCodeListItem) => code.codi_municipi === item.option.value\n    )\n    if (selected) {\n      this.citySelected = selected\n      this.citySearchCode.set(this.citySelected.codi_municipi)\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  @if(breakpointService.isHandsetPortrait() | async) {\n  \n    \n      Seleccione una provincia\n      \n    \n    \n      Seleccione una ciudad\n      \n    \n    \n      Información de la población\n      \n    \n  \n  } @else {\n  \n    \n      Seleccione una provincia\n      \n    \n    \n      Seleccione una ciudad\n      \n    \n    \n      Información de la población\n      \n    \n  \n  }\n\n\n\n  \n    \n      \n        Provincia\n        \n          @for (option of provinces; track option) {\n          {{ option.name }}\n          }\n        \n      \n      \n        Siguiente\n      \n    \n  \n\n\n\n  \n    Seleccione una ciudad\n    \n      \n        Ciudad\n        \n        \n          @for (option of zipCodesFiltered; track option.codi_municipi) {\n          {{\n            option.nom_municipi\n          }}\n          }\n        \n      \n      \n        \n          Volver\n        \n        \n          Siguiente\n        \n      \n    \n  \n\n\n\n  \n    @if(citySelected) {\n    \n      {{ citySelected.nom_municipi }} ({{\n        citySelected.codi_postal | joinPostalCodes\n      }})\n    \n    }\n    \n      @if(formatedPopulationData()) { @for (data of formatedPopulationData();\n      track data.id) {\n      \n        \n          @for(row of data.rows; track row) { @for(column of row; track\n          column.id) {\n          \n            @if(column.value) {\n            {{ column.value }}}\n          } }\n        \n      \n      } }\n    \n  \n  \n    \n      Volver\n    \n    \n      Reiniciar\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if(breakpointService.isHandsetPortrait() | async) {            Seleccione una provincia                    Seleccione una ciudad                    Información de la población              } @else {            Seleccione una provincia                    Seleccione una ciudad                    Información de la población              }                    Provincia                  @for (option of provinces; track option) {          {{ option.name }}          }                            Siguiente                  Seleccione una ciudad                  Ciudad                          @for (option of zipCodesFiltered; track option.codi_municipi) {          {{            option.nom_municipi          }}          }                                      Volver                          Siguiente                          @if(citySelected) {          {{ citySelected.nom_municipi }} ({{        citySelected.codi_postal | joinPostalCodes      }})        }          @if(formatedPopulationData()) { @for (data of formatedPopulationData();      track data.id) {                        @for(row of data.rows; track row) { @for(column of row; track          column.id) {                      @if(column.value) {            {{ column.value }}}          } }                    } }                  Volver              Reiniciar      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CatPopulationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatPopulationService.html":{"url":"injectables/CatPopulationService.html","title":"injectable - CatPopulationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatPopulationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cat-population.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                httpClient\n                            \n                            \n                                    Private\n                                    Readonly\n                                populationDataApiURL\n                            \n                            \n                                    Private\n                                    Readonly\n                                zipCodesApiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _mapZipCodeListItem\n                            \n                            \n                                getPopulationData\n                            \n                            \n                                getZipCodes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cat-population.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _mapZipCodeListItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    _mapZipCodeListItem(list: ZipCodeItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cat-population.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                list\n                                            \n                                                            ZipCodeItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ZipCodeListItem[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPopulationData\n                        \n                    \n                \n            \n            \n                \ngetPopulationData(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cat-population.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getZipCodes\n                        \n                    \n                \n            \n            \n                \ngetZipCodes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cat-population.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        httpClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cat-population.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        populationDataApiURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://analisi.transparenciacatalunya.cat/resource/b4rr-d25b.json'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cat-population.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        zipCodesApiURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://analisi.transparenciacatalunya.cat/resource/tp8v-a58g.json'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cat-population.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpContext, HttpParams } from '@angular/common/http'\nimport { inject, Injectable } from '@angular/core'\nimport { map, Observable } from 'rxjs'\nimport { PopulationDataResponse } from '../models/cat-population/population-response.model'\nimport {\n  ZipCodeItem,\n  ZipCodeListItem,\n} from '../models/cat-population/zip-codes.model'\nimport { NO_CACHE } from '../utils/http-context.util'\n\n@Injectable({\n  providedIn: 'any',\n})\nexport class CatPopulationService {\n  private readonly httpClient!: HttpClient\n\n  private readonly zipCodesApiURL =\n    'https://analisi.transparenciacatalunya.cat/resource/tp8v-a58g.json'\n  private readonly populationDataApiURL =\n    'https://analisi.transparenciacatalunya.cat/resource/b4rr-d25b.json'\n\n  constructor() {\n    this.httpClient = inject(HttpClient)\n  }\n\n  getZipCodes(): Observable {\n    const params = new HttpParams().append('$limit', 9999)\n\n    const context = new HttpContext().set(NO_CACHE, true)\n\n    return this.httpClient\n      .get(`${this.zipCodesApiURL}`, {\n        params,\n        context,\n      })\n      .pipe(map((list: ZipCodeItem[]) => this._mapZipCodeListItem(list)))\n  }\n\n  private _mapZipCodeListItem(list: ZipCodeItem[]): ZipCodeListItem[] {\n    const codesMap: Map = new Map()\n\n    list.forEach((item: ZipCodeItem) => {\n      if (codesMap.has(item.codi_municipi)) {\n        const currentPostalCodes =\n          codesMap.get(item.codi_municipi)?.codi_postal || []\n        codesMap.set(item.codi_municipi, {\n          id: window.crypto.randomUUID(),\n          codi_municipi: item.codi_municipi,\n          codi_postal: [...currentPostalCodes, item.codi_postal],\n          nom_municipi: item.nom_municipi,\n        })\n      } else {\n        codesMap.set(item.codi_municipi, {\n          id: window.crypto.randomUUID(),\n          codi_municipi: item.codi_municipi,\n          codi_postal: [item.codi_postal],\n          nom_municipi: item.nom_municipi,\n        })\n      }\n    })\n\n    return Array.from(codesMap.values()) || []\n  }\n\n  getPopulationData(code: string): Observable {\n    const params = new HttpParams().append('codi', code)\n\n    const context = new HttpContext().set(NO_CACHE, true)\n\n    return this.httpClient.get(\n      this.populationDataApiURL,\n      {\n        params,\n        context,\n      }\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomPaginatorIntl.html":{"url":"injectables/CustomPaginatorIntl.html","title":"injectable - CustomPaginatorIntl","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomPaginatorIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/mat-paginator-intl.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servic io para la traducción del componente de paginación de Angular Material\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changes\n                            \n                            \n                                firstPageLabel\n                            \n                            \n                                itemsPerPageLabel\n                            \n                            \n                                lastPageLabel\n                            \n                            \n                                nextPageLabel\n                            \n                            \n                                previousPageLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRangeLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRangeLabel\n                        \n                    \n                \n            \n            \n                \ngetRangeLabel(page: number, pageSize: number, length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/mat-paginator-intl.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Devuelve el texto usado por el paginador para mostrar el rango de página\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Número de página que se esta mostrando\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tamaño de la página\n\n                                            \n                                        \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Total de items del listado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Texto a mostrar en el paginador\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/mat-paginator-intl.service.ts:33\n                        \n                    \n\n            \n                \n                    Subject que emite cuando cambian las etiquetas (p.e.: al cambiar de idioma) No usado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstPageLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Primera página'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/mat-paginator-intl.service.ts:17\n                        \n                    \n\n            \n                \n                    Texto para el tooltip de primera página\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemsPerPageLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Items por página'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/mat-paginator-intl.service.ts:13\n                        \n                    \n\n            \n                \n                    Texto para items por página\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastPageLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Última página'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/mat-paginator-intl.service.ts:21\n                        \n                    \n\n            \n                \n                    Texto para el tooltip de última página\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextPageLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Siguiente página'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/mat-paginator-intl.service.ts:25\n                        \n                    \n\n            \n                \n                    Texto para el tooltip de siguiente página\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousPageLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Página anterior'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/mat-paginator-intl.service.ts:29\n                        \n                    \n\n            \n                \n                    Texto para el tooltip de página anterior\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\nimport { Subject } from 'rxjs';\n\n/**\n * Servic io para la traducción del componente de paginación de Angular Material\n */\n@Injectable()\nexport class CustomPaginatorIntl implements MatPaginatorIntl {\n  /**\n   * Texto para items por página\n   */\n  itemsPerPageLabel = 'Items por página';\n  /**\n   * Texto para el tooltip de primera página\n   */\n  firstPageLabel = 'Primera página';\n  /**\n   * Texto para el tooltip de última página\n   */\n  lastPageLabel = 'Última página';\n  /**\n   * Texto para el tooltip de siguiente página\n   */\n  nextPageLabel = 'Siguiente página';\n  /**\n   * Texto para el tooltip de página anterior\n   */\n  previousPageLabel = 'Página anterior';\n  /**\n   * Subject que emite cuando cambian las etiquetas (p.e.: al cambiar de idioma) No usado\n   */\n  changes: Subject = new Subject();\n\n  /**\n   * Devuelve el texto usado por el paginador para mostrar el rango de página\n   * @param {number} page Número de página que se esta mostrando\n   * @param {number} pageSize Tamaño de la página\n   * @param {number} length Total de items del listado\n   * @returns {string} Texto a mostrar en el paginador\n   */\n  getRangeLabel(page: number, pageSize: number, length: number) {\n    if (length === 0) {\n      return 'Página 1 de 1';\n    }\n    const amountPages = Math.ceil(length / pageSize);\n    return `Página ${page + 1} de ${amountPages}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DammingsInfoItem.html":{"url":"interfaces/DammingsInfoItem.html","title":"interface - DammingsInfoItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DammingsInfoItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cat-dammings/cat-dammings.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            DammingsInfoResponse\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            id_estaci\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_estaci\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_estaci:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport interface DammingsInfoResponse {\n  dia: string;\n  estaci: string;\n  nivell_absolut: string;\n  percentatge_volum_embassat: string;\n  volum_embassat: string;\n}\n\nexport interface DammingsInfoItem extends DammingsInfoResponse {\n  id: string;\n  id_estaci: string;\n  date: Date;\n}\n\nexport interface StationItem {\n  key: string;\n  name: string;\n}\n\nexport interface FilterForm {\n  date: FormControl;\n  stations: FormControl;\n}\n\nexport interface FilteredInfoItem {\n  id_estaci: string;\n  estaci: string;\n  nivell_absolut: string;\n  percentatge_volum_embassat: string;\n  volum_embassat: string;\n}\n\nexport interface FilteredInfoItemDate extends FilteredInfoItem {\n  dia: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DammingsInfoResponse.html":{"url":"interfaces/DammingsInfoResponse.html","title":"interface - DammingsInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DammingsInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cat-dammings/cat-dammings.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dia\n                                        \n                                \n                                \n                                        \n                                            estaci\n                                        \n                                \n                                \n                                        \n                                            nivell_absolut\n                                        \n                                \n                                \n                                        \n                                            percentatge_volum_embassat\n                                        \n                                \n                                \n                                        \n                                            volum_embassat\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dia\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dia:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estaci\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estaci:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nivell_absolut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nivell_absolut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentatge_volum_embassat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        percentatge_volum_embassat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        volum_embassat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        volum_embassat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport interface DammingsInfoResponse {\n  dia: string;\n  estaci: string;\n  nivell_absolut: string;\n  percentatge_volum_embassat: string;\n  volum_embassat: string;\n}\n\nexport interface DammingsInfoItem extends DammingsInfoResponse {\n  id: string;\n  id_estaci: string;\n  date: Date;\n}\n\nexport interface StationItem {\n  key: string;\n  name: string;\n}\n\nexport interface FilterForm {\n  date: FormControl;\n  stations: FormControl;\n}\n\nexport interface FilteredInfoItem {\n  id_estaci: string;\n  estaci: string;\n  nivell_absolut: string;\n  percentatge_volum_embassat: string;\n  volum_embassat: string;\n}\n\nexport interface FilteredInfoItemDate extends FilteredInfoItem {\n  dia: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataNotFoundComponent.html":{"url":"components/DataNotFoundComponent.html","title":"component - DataNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DataNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/data-not-found/data-not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-data-not-found\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./data-not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./data-not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector: 'app-data-not-found',\n    templateUrl: './data-not-found.component.html',\n    styleUrl: './data-not-found.component.scss',\n    imports: [MatIconModule]\n})\nexport class DataNotFoundComponent {}\n\n    \n\n    \n        \n  warning\n  No se han encontrado datos\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  warning  No se han encontrado datos'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DisneyAPIComponent.html":{"url":"components/DisneyAPIComponent.html","title":"component - DisneyAPIComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DisneyAPIComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/disney-api/disney-api.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-disney-api\n            \n\n\n            \n                imports\n                \n                                PageTitleComponent\n                            AsyncPipe\n                            MatTableModule\n                            MatIconModule\n                            MatButtonModule\n                                SimplePaginatorComponent\n                            MatCardModule\n                            MatChipsModule\n                                SearchFilterComponent\n                                DataNotFoundComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./disney-api.component.html\n            \n\n\n\n            \n                styleUrl\n                ./disney-api.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breakpointService\n                            \n                            \n                                    Private\n                                    Readonly\n                                cdr\n                            \n                            \n                                characters\n                            \n                            \n                                columnsTitles\n                            \n                            \n                                currentPage\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                disableNextPage\n                            \n                            \n                                disablePreviousPage\n                            \n                            \n                                    Private\n                                    Readonly\n                                disneyAPIService\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                displayedColumnsWithExpand\n                            \n                            \n                                expandedElement\n                            \n                            \n                                filterSearch\n                            \n                            \n                                    Private\n                                    Readonly\n                                injector\n                            \n                            \n                                itemsExpandedInfo\n                            \n                            \n                                lastPage\n                            \n                            \n                                    Public\n                                    Readonly\n                                loadingService\n                            \n                            \n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePageSize\n                            \n                            \n                                goPage\n                            \n                            \n                                    Private\n                                initEffects\n                            \n                            \n                                    Private\n                                initSignals\n                            \n                            \n                                    Private\n                                loadData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openImage\n                            \n                            \n                                openSourceUrl\n                            \n                            \n                                resetSearch\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:75\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePageSize\n                        \n                    \n                \n            \n            \n                \nchangePageSize(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/disney-api.component.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goPage\n                        \n                    \n                \n            \n            \n                \ngoPage(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/disney-api.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initEffects\n                        \n                    \n                \n            \n            \n                \n                        \n                    initEffects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/disney-api.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initSignals\n                        \n                    \n                \n            \n            \n                \n                        \n                    initSignals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/disney-api.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/disney-api.component.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/disney-api.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openImage\n                        \n                    \n                \n            \n            \n                \nopenImage(event: MouseEvent, url: string, name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/disney-api.component.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSourceUrl\n                        \n                    \n                \n            \n            \n                \nopenSourceUrl(event: MouseEvent, link: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/disney-api.component.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                link\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetSearch\n                        \n                    \n                \n            \n            \n                \nresetSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/disney-api.component.ts:180\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/disney-api.component.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        breakpointService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BreakpointService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cdr\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        characters\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsTitles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    _id: 'ID',\n    name: 'Nombre',\n    sourceUrl: 'Fuende de información',\n    imageUrl: 'Imagen',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disableNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disablePreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        disneyAPIService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DisneyAPIService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['_id', 'name']\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumnsWithExpand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    ...this.displayedColumns,\n    'sourceUrl',\n    'imageUrl',\n    'expand',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandedElement\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemsExpandedInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      title: 'Enemigos',\n      field: 'enemies',\n    },\n    {\n      title: 'Películas',\n      field: 'films',\n    },\n    {\n      title: 'Parque de atracciones',\n      field: 'parkAttractions',\n    },\n    {\n      title: 'Cortos',\n      field: 'shortFilms',\n    },\n    {\n      title: 'Programas de TV',\n      field: 'tvShows',\n    },\n    {\n      title: 'Videojuegos',\n      field: 'videoGames',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/disney-api.component.ts:102\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations'\nimport { AsyncPipe } from '@angular/common'\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  effect,\n  inject,\n  Injector,\n  OnInit,\n  Signal,\n} from '@angular/core'\nimport { toSignal } from '@angular/core/rxjs-interop'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatCardModule } from '@angular/material/card'\nimport { MatChipsModule } from '@angular/material/chips'\nimport { MatDialog } from '@angular/material/dialog'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatTableModule } from '@angular/material/table'\nimport { DataNotFoundComponent } from '../../components/data-not-found/data-not-found.component'\nimport {\n  ModalImageViewerComponent,\n  ModalImageViewerData,\n} from '../../components/modal-image-viewer/modal-image-viewer.component'\nimport { PageTitleComponent } from '../../components/page-title/page-title.component'\nimport { SimplePaginatorComponent } from '../../components/simple-paginator/simple-paginator.component'\nimport { BreakpointService } from '../../services/breakpoint.service'\nimport {\n  DisneyAPIService,\n  ResponseCharacterList,\n  ResponseData,\n} from '../../services/disney-api.service'\nimport { LoadingService } from '../../services/loading.service'\nimport { goToExternalLink } from '../../utils/external-link.util'\nimport { SearchFilterComponent } from './components/search-filter/search-filter.component'\n\n@Component({\n  selector: 'app-disney-api',\n  imports: [\n    PageTitleComponent,\n    AsyncPipe,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    SimplePaginatorComponent,\n    MatCardModule,\n    MatChipsModule,\n    SearchFilterComponent,\n    DataNotFoundComponent,\n  ],\n  templateUrl: './disney-api.component.html',\n  styleUrl: './disney-api.component.scss',\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed,void', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition(\n        'expanded  collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')\n      ),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DisneyAPIComponent implements OnInit {\n  private readonly disneyAPIService!: DisneyAPIService\n  private readonly dialog!: MatDialog\n  public readonly loadingService!: LoadingService\n  private readonly cdr!: ChangeDetectorRef\n\n  breakpointService!: BreakpointService\n\n  private readonly injector = inject(Injector)\n\n  characters!: Signal\n\n  constructor() {\n    this.disneyAPIService = inject(DisneyAPIService)\n    this.breakpointService = inject(BreakpointService)\n    this.dialog = inject(MatDialog)\n    this.loadingService = inject(LoadingService)\n    this.cdr = inject(ChangeDetectorRef)\n  }\n\n  columnsTitles: { [key: string]: string } = {\n    _id: 'ID',\n    name: 'Nombre',\n    sourceUrl: 'Fuende de información',\n    imageUrl: 'Imagen',\n  }\n  dataSource: ResponseData[] = []\n  displayedColumns = ['_id', 'name']\n  displayedColumnsWithExpand = [\n    ...this.displayedColumns,\n    'sourceUrl',\n    'imageUrl',\n    'expand',\n  ]\n  expandedElement: unknown\n\n  currentPage = 1\n  pageSize = 5\n  disablePreviousPage!: boolean\n  disableNextPage!: boolean\n  lastPage!: number\n  filterSearch!: string | undefined\n\n  itemsExpandedInfo: { title: string; field: string }[] = [\n    {\n      title: 'Enemigos',\n      field: 'enemies',\n    },\n    {\n      title: 'Películas',\n      field: 'films',\n    },\n    {\n      title: 'Parque de atracciones',\n      field: 'parkAttractions',\n    },\n    {\n      title: 'Cortos',\n      field: 'shortFilms',\n    },\n    {\n      title: 'Programas de TV',\n      field: 'tvShows',\n    },\n    {\n      title: 'Videojuegos',\n      field: 'videoGames',\n    },\n  ]\n\n  ngOnInit(): void {\n    this.initEffects()\n    this.initSignals()\n    this.loadData()\n  }\n\n  private initSignals(): void {\n    this.characters = toSignal(this.disneyAPIService.charactersList, {\n      requireSync: true,\n      injector: this.injector,\n    })\n  }\n\n  private initEffects(): void {\n    effect(\n      () => {\n        this.dataSource = this.characters()?.data || []\n\n        this.lastPage = this.characters()?.info.totalPages ?? 1\n        this.disableNextPage = !this.characters()?.info.nextPage\n        this.disablePreviousPage = !this.characters()?.info.previousPage\n\n        this.cdr.detectChanges()\n      },\n      { injector: this.injector }\n    )\n  }\n\n  private loadData(): void {\n    this.disneyAPIService.currentPage = this.currentPage\n    this.disneyAPIService.pageSize = this.pageSize\n\n    if (this.filterSearch) {\n      this.disneyAPIService.filterCharacters(this.filterSearch)\n    } else {\n      this.disneyAPIService.getAllCharacters()\n    }\n  }\n\n  search(name: string): void {\n    this.currentPage = 1\n    this.filterSearch = name\n    this.loadData()\n  }\n\n  resetSearch(): void {\n    this.currentPage = 1\n    this.filterSearch = undefined\n    this.loadData()\n  }\n\n  goPage(value: number): void {\n    this.currentPage = value\n    this.loadData()\n  }\n\n  changePageSize(value: number): void {\n    this.pageSize = value\n    this.currentPage = 1\n    this.loadData()\n  }\n\n  openSourceUrl(event: MouseEvent, link: string): void {\n    event.stopPropagation()\n    goToExternalLink(link)\n  }\n\n  openImage(event: MouseEvent, url: string, name: string): void {\n    event.stopPropagation()\n\n    const data: ModalImageViewerData = {\n      url,\n      altImage: name,\n      title: name,\n    }\n\n    this.dialog.open(ModalImageViewerComponent, {\n      data,\n    })\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  @if(!loadingService.isLoading) { @if(dataSource.length) {\n  \n    \n      @for(column of displayedColumns; track column) {\n      \n        \n          {{ columnsTitles[column] }}\n        \n        {{ element[column] }}\n      \n      }\n      \n        \n          {{ columnsTitles[\"sourceUrl\"] }}\n        \n        \n          \n            Abrir\n          \n        \n      \n      \n        \n          {{ columnsTitles[\"imageUrl\"] }}\n        \n        \n          \n            Ver\n          \n        \n      \n      \n        \n          &nbsp;\n        \n        \n          \n            @if (expandedElement === element) {\n            keyboard_arrow_up\n            } @else {\n            keyboard_arrow_down\n            }\n          \n        \n      \n\n      \n        \n          \n            \n              @for(itemExpandedInfo of itemsExpandedInfo; track\n              itemExpandedInfo) { @if(element[itemExpandedInfo.field].length) {\n              \n                \n                  {{\n                    itemExpandedInfo.title\n                  }}\n                \n                \n                  \n                    @for(item of element[itemExpandedInfo.field]; track item) {\n                    {{ item }}\n                    }\n                  \n                \n              \n              } }\n            \n          \n        \n      \n\n      \n      \n      \n    \n  \n  \n    \n  \n  } @else {\n  \n  } }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @if(!loadingService.isLoading) { @if(dataSource.length) {            @for(column of displayedColumns; track column) {                        {{ columnsTitles[column] }}                {{ element[column] }}            }                        {{ columnsTitles[\"sourceUrl\"] }}                                      Abrir                                                {{ columnsTitles[\"imageUrl\"] }}                                      Ver                                                                                       @if (expandedElement === element) {            keyboard_arrow_up            } @else {            keyboard_arrow_down            }                                                                          @for(itemExpandedInfo of itemsExpandedInfo; track              itemExpandedInfo) { @if(element[itemExpandedInfo.field].length) {                                                {{                    itemExpandedInfo.title                  }}                                                                      @for(item of element[itemExpandedInfo.field]; track item) {                    {{ item }}                    }                                                              } }                                                                      } @else {    } }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DisneyAPIComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DisneyAPIService.html":{"url":"injectables/DisneyAPIService.html","title":"injectable - DisneyAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DisneyAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/disney-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para el manejo de la API de Disney\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _charactersList\n                            \n                            \n                                    Private\n                                    Readonly\n                                baseURL\n                            \n                            \n                                currentPage\n                            \n                            \n                                    Private\n                                    Readonly\n                                httpClient\n                            \n                            \n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterCharacters\n                            \n                            \n                                getAllCharacters\n                            \n                            \n                                getHttpRequest\n                            \n                            \n                                setCommonParams\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    charactersList\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/disney-api.service.ts:45\n                            \n                        \n\n                \n                    \n                            Método constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterCharacters\n                        \n                    \n                \n            \n            \n                \nfilterCharacters(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/disney-api.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Obtiene una lista de personajes filtrada por nombre\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del personaje por el que filtrar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCharacters\n                        \n                    \n                \n            \n            \n                \ngetAllCharacters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/disney-api.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Carga toda la lista de personajes de Disney\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHttpRequest\n                        \n                    \n                \n            \n            \n                \ngetHttpRequest(params: HttpParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/disney-api.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Realiza una llamada a la petición de personajes de la API de Disney\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto HttpParams para la llamada a la API\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCommonParams\n                        \n                    \n                \n            \n            \n                \nsetCommonParams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/disney-api.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Establece los parámetros comunes para todas las llamadas a la API\n\n\n                        \n                            Returns :     HttpParams\n\n                        \n                            \n                                Un objeto HttpParams con los parámetros añadidos\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _charactersList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/disney-api.service.ts:36\n                        \n                    \n\n            \n                \n                    Subject para obtener la lista de personajes recibida del servicio\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.disneyapi.dev'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/disney-api.service.ts:21\n                        \n                    \n\n            \n                \n                    URL de los servicios de Disney\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/services/disney-api.service.ts:31\n                        \n                    \n\n            \n                \n                    Página actual a mostrar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        httpClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/disney-api.service.ts:16\n                        \n                    \n\n            \n                \n                    Servicio de Angular para llamadas http\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/services/disney-api.service.ts:26\n                        \n                    \n\n            \n                \n                    Tamaño para la página de resultados\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        charactersList\n                    \n                \n\n                \n                    \n                        getcharactersList()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/disney-api.service.ts:43\n                                \n                            \n                    \n                        \n                                Devuelve la lista de personajes obtenida del servicio como un observable\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ResponseCharacterList } from '../models/disney-api/disney-api.model';\n\n/**\n * Servicio para el manejo de la API de Disney\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DisneyAPIService {\n  /**\n   * Servicio de Angular para llamadas http\n   */\n  private readonly httpClient!: HttpClient;\n\n  /**\n   * URL de los servicios de Disney\n   */\n  private readonly baseURL = 'https://api.disneyapi.dev';\n\n  /**\n   * Tamaño para la página de resultados\n   */\n  pageSize = 5;\n\n  /**\n   * Página actual a mostrar\n   */\n  currentPage = 1;\n\n  /**\n   * Subject para obtener la lista de personajes recibida del servicio\n   */\n  private readonly _charactersList: BehaviorSubject = new BehaviorSubject(undefined);\n\n  /**\n   * Devuelve la lista de personajes obtenida del servicio como un observable\n   */\n  get charactersList(): Observable {\n    return this._charactersList.asObservable();\n  }\n\n  /**\n   * Método constructor\n   */\n  constructor() {\n    this.httpClient = inject(HttpClient);\n  }\n\n  /**\n   * Carga toda la lista de personajes de Disney\n   */\n  getAllCharacters(): void {\n    const params = this.setCommonParams();\n\n    this.getHttpRequest(params);\n  }\n\n  /**\n   * Obtiene una lista de personajes filtrada por nombre\n   * @param {string} name Nombre del personaje por el que filtrar\n   */\n  filterCharacters(name: string): void {\n    const params = this.setCommonParams().append('name', name);\n\n    this.getHttpRequest(params);\n  }\n\n  /**\n   * Establece los parámetros comunes para todas las llamadas a la API\n   * @returns {HttpParams} Un objeto HttpParams con los parámetros añadidos\n   */\n  setCommonParams(): HttpParams {\n    return new HttpParams()\n      .append('pageSize', this.pageSize)\n      .append('page', this.currentPage);\n  }\n\n  /**\n   * Realiza una llamada a la petición de personajes de la API de Disney\n   * @param {HttpParams} params Objeto HttpParams para la llamada a la API\n   */\n  getHttpRequest(params: HttpParams): void {\n    this.httpClient\n      .get(`${this.baseURL}/character`, {\n        params,\n      })\n      .subscribe((data) => this._charactersList.next(data));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawerMenuComponent.html":{"url":"components/DrawerMenuComponent.html","title":"component - DrawerMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawerMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/drawer-menu/drawer-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drawer-menu\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            MatButtonModule\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./drawer-menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./drawer-menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menuItems\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                drawerRef\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/drawer-menu/drawer-menu.component.ts:24\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        drawerRef\n                    \n                \n                \n                    \n                        Type :     MatDrawer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/drawer-menu/drawer-menu.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigate\n                        \n                    \n                \n            \n            \n                \nnavigate(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/drawer-menu/drawer-menu.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      title: TITLES[ROUTES_PATHS.HOME],\n      path: ROUTES_PATHS.HOME,\n      icon: 'home',\n    },\n    {\n      title: TITLES[ROUTES_PATHS.DISNEY_API],\n      path: ROUTES_PATHS.DISNEY_API,\n      icon: 'movie',\n    },\n    {\n      title: TITLES[ROUTES_PATHS.SPOTIFY_API],\n      path: ROUTES_PATHS.SPOTIFY_API,\n      icon: 'music_note',\n    },\n    {\n      title: TITLES[ROUTES_PATHS.CAT_POPULATION],\n      path: ROUTES_PATHS.CAT_POPULATION,\n      icon: 'public',\n    },\n    {\n      title: TITLES[ROUTES_PATHS.CAT_DAMMINGS],\n      path: ROUTES_PATHS.CAT_DAMMINGS,\n      icon: 'water',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drawer-menu/drawer-menu.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drawer-menu/drawer-menu.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, Input } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { Router } from '@angular/router';\nimport { ROUTES_PATHS, TITLES } from '../../constants/routes.constants';\n\nexport interface MenuItem {\n  title: string;\n  path: string;\n  icon: string;\n}\n\n@Component({\n    selector: 'app-drawer-menu',\n    templateUrl: './drawer-menu.component.html',\n    styleUrl: './drawer-menu.component.scss',\n    imports: [MatListModule, MatButtonModule, MatIconModule]\n})\nexport class DrawerMenuComponent {\n  @Input() drawerRef!: MatDrawer;\n\n  private readonly router!: Router;\n\n  constructor() {\n    this.router = inject(Router);\n  }\n\n  menuItems: MenuItem[] = [\n    {\n      title: TITLES[ROUTES_PATHS.HOME],\n      path: ROUTES_PATHS.HOME,\n      icon: 'home',\n    },\n    {\n      title: TITLES[ROUTES_PATHS.DISNEY_API],\n      path: ROUTES_PATHS.DISNEY_API,\n      icon: 'movie',\n    },\n    {\n      title: TITLES[ROUTES_PATHS.SPOTIFY_API],\n      path: ROUTES_PATHS.SPOTIFY_API,\n      icon: 'music_note',\n    },\n    {\n      title: TITLES[ROUTES_PATHS.CAT_POPULATION],\n      path: ROUTES_PATHS.CAT_POPULATION,\n      icon: 'public',\n    },\n    {\n      title: TITLES[ROUTES_PATHS.CAT_DAMMINGS],\n      path: ROUTES_PATHS.CAT_DAMMINGS,\n      icon: 'water',\n    },\n  ];\n\n  navigate(path: string): void {\n    this.drawerRef.toggle();\n    this.router.navigate([path]);\n  }\n}\n\n    \n\n    \n        \n  @for(item of menuItems; track item) {\n  \n    \n      {{ item.icon }}\n      {{ item.title }}\n    \n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for(item of menuItems; track item) {            {{ item.icon }}      {{ item.title }}        }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawerMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterForm.html":{"url":"interfaces/FilterForm.html","title":"interface - FilterForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cat-dammings/cat-dammings.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            stations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stations:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport interface DammingsInfoResponse {\n  dia: string;\n  estaci: string;\n  nivell_absolut: string;\n  percentatge_volum_embassat: string;\n  volum_embassat: string;\n}\n\nexport interface DammingsInfoItem extends DammingsInfoResponse {\n  id: string;\n  id_estaci: string;\n  date: Date;\n}\n\nexport interface StationItem {\n  key: string;\n  name: string;\n}\n\nexport interface FilterForm {\n  date: FormControl;\n  stations: FormControl;\n}\n\nexport interface FilteredInfoItem {\n  id_estaci: string;\n  estaci: string;\n  nivell_absolut: string;\n  percentatge_volum_embassat: string;\n  volum_embassat: string;\n}\n\nexport interface FilteredInfoItemDate extends FilteredInfoItem {\n  dia: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilteredInfoItem.html":{"url":"interfaces/FilteredInfoItem.html","title":"interface - FilteredInfoItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilteredInfoItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cat-dammings/cat-dammings.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            estaci\n                                        \n                                \n                                \n                                        \n                                            id_estaci\n                                        \n                                \n                                \n                                        \n                                            nivell_absolut\n                                        \n                                \n                                \n                                        \n                                            percentatge_volum_embassat\n                                        \n                                \n                                \n                                        \n                                            volum_embassat\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        estaci\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estaci:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_estaci\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_estaci:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nivell_absolut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nivell_absolut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentatge_volum_embassat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        percentatge_volum_embassat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        volum_embassat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        volum_embassat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport interface DammingsInfoResponse {\n  dia: string;\n  estaci: string;\n  nivell_absolut: string;\n  percentatge_volum_embassat: string;\n  volum_embassat: string;\n}\n\nexport interface DammingsInfoItem extends DammingsInfoResponse {\n  id: string;\n  id_estaci: string;\n  date: Date;\n}\n\nexport interface StationItem {\n  key: string;\n  name: string;\n}\n\nexport interface FilterForm {\n  date: FormControl;\n  stations: FormControl;\n}\n\nexport interface FilteredInfoItem {\n  id_estaci: string;\n  estaci: string;\n  nivell_absolut: string;\n  percentatge_volum_embassat: string;\n  volum_embassat: string;\n}\n\nexport interface FilteredInfoItemDate extends FilteredInfoItem {\n  dia: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilteredInfoItemDate.html":{"url":"interfaces/FilteredInfoItemDate.html","title":"interface - FilteredInfoItemDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilteredInfoItemDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cat-dammings/cat-dammings.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FilteredInfoItem\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dia\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dia\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dia:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport interface DammingsInfoResponse {\n  dia: string;\n  estaci: string;\n  nivell_absolut: string;\n  percentatge_volum_embassat: string;\n  volum_embassat: string;\n}\n\nexport interface DammingsInfoItem extends DammingsInfoResponse {\n  id: string;\n  id_estaci: string;\n  date: Date;\n}\n\nexport interface StationItem {\n  key: string;\n  name: string;\n}\n\nexport interface FilterForm {\n  date: FormControl;\n  stations: FormControl;\n}\n\nexport interface FilteredInfoItem {\n  id_estaci: string;\n  estaci: string;\n  nivell_absolut: string;\n  percentatge_volum_embassat: string;\n  volum_embassat: string;\n}\n\nexport interface FilteredInfoItemDate extends FilteredInfoItem {\n  dia: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormatedPopulationData.html":{"url":"interfaces/FormatedPopulationData.html","title":"interface - FormatedPopulationData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FormatedPopulationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cat-population/list.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rows\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rows:         ListItemObject[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListItemObject[][]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ListItemObject {\n  id: string\n  borderBottom: boolean\n  isTitle: boolean\n  isTitleLeft: boolean\n  isNumber: boolean\n  value: string\n}\n\nexport interface FormatedPopulationData {\n  id: string\n  year: string\n  rows: ListItemObject[][]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n            \n                imports\n                \n                                PageTitleComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { PageTitleComponent } from '../../components/page-title/page-title.component';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    imports: [PageTitleComponent]\n})\nexport class HomeComponent {}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageItemInfo.html":{"url":"interfaces/ImageItemInfo.html","title":"interface - ImageItemInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageItemInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/spotify-api/spotify-api.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport type SearchType = 'album' | 'artist';\n\nexport interface SpotifySearchForm {\n  search: FormControl;\n  type: FormControl;\n}\n\nexport interface TypeOption {\n  value: SearchType | undefined;\n  text: string;\n}\n\nexport interface SearchValues {\n  search: string;\n  type: SearchType;\n}\n\nexport interface ImageItemInfo {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface ResultSearchBase {\n  href: string;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  total: number;\n}\n\nexport interface ArtistResultItemBase {\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistResultItem extends ArtistResultItemBase {\n  followers: {\n    href: null;\n    total: number;\n  };\n  genres: string[];\n  images: ImageItemInfo[];\n  popularity: number;\n}\n\nexport interface ArtistSearchResult extends ResultSearchBase {\n  items: ArtistResultItem[];\n}\nexport interface ArtistSearchResponse {\n  artists: ArtistSearchResult;\n}\n\nexport interface AlbumResultItem {\n  album_type: string;\n  artists: ArtistResultItemBase[];\n  available_markets: string[];\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  images: ImageItemInfo[];\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  uri: string;\n}\n\nexport interface AlbumSearchResult extends ResultSearchBase {\n  items: AlbumResultItem[];\n}\n\nexport interface AlbumSearchResponse {\n  albums: AlbumSearchResult;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/JoinPostalCodesPipe.html":{"url":"pipes/JoinPostalCodesPipe.html","title":"pipe - JoinPostalCodesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  JoinPostalCodesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/join-postal-codes.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Transforma una lista de códigos postales en una cadena de texto con un limite de elementos a mostrar, mostrando '...' si el total de elemntos es mayor que el limite\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        joinPostalCodes\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string[], itemsToElipsis: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/join-postal-codes.pipe.ts:16\n                        \n                    \n\n\n            \n                \n                        Transforma una lista de de códigos postales\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Lista de códigos postales\n\n                                            \n                                        \n                                        \n                                                itemsToElipsis\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    5\n                                            \n\n                                            \n                                                    Número de elementos a mostrar en la cadena\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Transforma una lista de códigos postales en una cadena de texto con un limite de elementos a mostrar, mostrando '...' si el total de elemntos es mayor que el limite\n */\n@Pipe({\n  name: 'joinPostalCodes',\n  standalone: true,\n})\nexport class JoinPostalCodesPipe implements PipeTransform {\n  /**\n   * Transforma una lista de de códigos postales\n   * @param {string[]} value Lista de códigos postales\n   * @param {number} itemsToElipsis Número de elementos a mostrar en la cadena\n   */\n  transform(value: string[], itemsToElipsis = 5): string {\n    if (value?.length) {\n      const itemsToShow = value.slice(0, itemsToElipsis);\n      return `${itemsToShow.join(', ')}${\n        value.length > itemsToElipsis ? ', ...' : ''\n      }`;\n    }\n\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListItemObject.html":{"url":"interfaces/ListItemObject.html","title":"interface - ListItemObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListItemObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cat-population/list.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            borderBottom\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isNumber\n                                        \n                                \n                                \n                                        \n                                            isTitle\n                                        \n                                \n                                \n                                        \n                                            isTitleLeft\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        borderBottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        borderBottom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNumber:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isTitle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isTitleLeft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isTitleLeft:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ListItemObject {\n  id: string\n  borderBottom: boolean\n  isTitle: boolean\n  isTitleLeft: boolean\n  isNumber: boolean\n  value: string\n}\n\nexport interface FormatedPopulationData {\n  id: string\n  year: string\n  rows: ListItemObject[][]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para controlar cuando mostrar un gráfico de progreso de carga\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loadingComponent\n                            \n                            \n                                    Private\n                                    Readonly\n                                overlay\n                            \n                            \n                                overlayRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createOverlay\n                            \n                            \n                                startLoading\n                            \n                            \n                                stopLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading.service.ts:28\n                            \n                        \n\n                \n                    \n                            Método constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createOverlay\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOverlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loading.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Crea el contenedor para elementos flotantes que contendrá el spinner loading\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startLoading\n                        \n                    \n                \n            \n            \n                \nstartLoading()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loading.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Muestra el spinner loading\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopLoading\n                        \n                    \n                \n            \n            \n                \nstopLoading()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loading.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Oculta el spinner loading\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loading.service.ts:28\n                        \n                    \n\n            \n                \n                    Indicador si esta cargando o no\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentPortal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loading.service.ts:24\n                        \n                    \n\n            \n                \n                    Componente del spinner loading\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        overlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Overlay\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loading.service.ts:16\n                        \n                    \n\n            \n                \n                    Servicio de Angular para manejar el Overlay\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlayRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OverlayRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loading.service.ts:20\n                        \n                    \n\n            \n                \n                    Referencia al Overlay de Angular\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { inject, Injectable } from '@angular/core';\nimport { LoadingSpinnerComponent } from '../components/loading-spinner/loading-spinner.component';\n\n/**\n * Servicio para controlar cuando mostrar un gráfico de progreso de carga\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n  /**\n   * Servicio de Angular para manejar el Overlay\n   */\n  private readonly overlay!: Overlay;\n  /**\n   * Referencia al Overlay de Angular\n   */\n  overlayRef!: OverlayRef;\n  /**\n   * Componente del spinner loading\n   */\n  loadingComponent!: ComponentPortal;\n  /**\n   * Indicador si esta cargando o no\n   */\n  isLoading = false;\n\n  /**\n   * Método constructor\n   */\n  constructor() {\n    this.overlay = inject(Overlay);\n    this.createOverlay();\n  }\n\n  /**\n   * Crea el contenedor para elementos flotantes que contendrá el spinner loading\n   */\n  private createOverlay(): void {\n    this.overlayRef = this.overlay.create({\n      width: '100%',\n      height: '100%',\n      hasBackdrop: true,\n    });\n\n    this.loadingComponent = new ComponentPortal(LoadingSpinnerComponent);\n  }\n\n  /**\n   * Muestra el spinner loading\n   */\n  startLoading(): void {\n    if (!this.isLoading) {\n      this.isLoading = true;\n      this.overlayRef.attach(this.loadingComponent);\n    }\n  }\n\n  /**\n   * Oculta el spinner loading\n   */\n  stopLoading(): void {\n    this.isLoading = false;\n    this.overlayRef.detach();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingSpinnerComponent.html":{"url":"components/LoadingSpinnerComponent.html","title":"component - LoadingSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loading-spinner/loading-spinner.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading-spinner\n            \n\n\n            \n                imports\n                \n                            MatProgressSpinnerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./loading-spinner.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loading-spinner.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@Component({\n    selector: 'app-loading-spinner',\n    templateUrl: './loading-spinner.component.html',\n    styleUrl: './loading-spinner.component.scss',\n    imports: [MatProgressSpinnerModule]\n})\nexport class LoadingSpinnerComponent {}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/drawer-menu/drawer-menu.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject, Input } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { Router } from '@angular/router';\nimport { ROUTES_PATHS, TITLES } from '../../constants/routes.constants';\n\nexport interface MenuItem {\n  title: string;\n  path: string;\n  icon: string;\n}\n\n@Component({\n    selector: 'app-drawer-menu',\n    templateUrl: './drawer-menu.component.html',\n    styleUrl: './drawer-menu.component.scss',\n    imports: [MatListModule, MatButtonModule, MatIconModule]\n})\nexport class DrawerMenuComponent {\n  @Input() drawerRef!: MatDrawer;\n\n  private readonly router!: Router;\n\n  constructor() {\n    this.router = inject(Router);\n  }\n\n  menuItems: MenuItem[] = [\n    {\n      title: TITLES[ROUTES_PATHS.HOME],\n      path: ROUTES_PATHS.HOME,\n      icon: 'home',\n    },\n    {\n      title: TITLES[ROUTES_PATHS.DISNEY_API],\n      path: ROUTES_PATHS.DISNEY_API,\n      icon: 'movie',\n    },\n    {\n      title: TITLES[ROUTES_PATHS.SPOTIFY_API],\n      path: ROUTES_PATHS.SPOTIFY_API,\n      icon: 'music_note',\n    },\n    {\n      title: TITLES[ROUTES_PATHS.CAT_POPULATION],\n      path: ROUTES_PATHS.CAT_POPULATION,\n      icon: 'public',\n    },\n    {\n      title: TITLES[ROUTES_PATHS.CAT_DAMMINGS],\n      path: ROUTES_PATHS.CAT_DAMMINGS,\n      icon: 'water',\n    },\n  ];\n\n  navigate(path: string): void {\n    this.drawerRef.toggle();\n    this.router.navigate([path]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalImageViewerComponent.html":{"url":"components/ModalImageViewerComponent.html","title":"component - ModalImageViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalImageViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modal-image-viewer/modal-image-viewer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-image-viewer\n            \n\n\n            \n                imports\n                \n                                ModalWrapperComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./modal-image-viewer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./modal-image-viewer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                description\n                            \n                            \n                                title\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modal-image-viewer/modal-image-viewer.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalImageViewerData\n\n                    \n                \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modal-image-viewer/modal-image-viewer.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modal-image-viewer/modal-image-viewer.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modal-image-viewer/modal-image-viewer.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modal-image-viewer/modal-image-viewer.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ModalWrapperComponent } from '../modal-wrapper/modal-wrapper.component';\n\nexport interface ModalImageViewerData {\n  url: string;\n  altImage: string;\n  title?: string;\n}\n\n@Component({\n    selector: 'app-modal-image-viewer',\n    templateUrl: './modal-image-viewer.component.html',\n    styleUrl: './modal-image-viewer.component.scss',\n    imports: [ModalWrapperComponent]\n})\nexport class ModalImageViewerComponent implements OnInit {\n  data: ModalImageViewerData = inject(MAT_DIALOG_DATA);\n\n  url!: string;\n  description!: string;\n  title!: string | undefined;\n\n  ngOnInit(): void {\n    this.url = this.data.url;\n    this.description = this.data.altImage;\n    this.title = this.data.title;\n  }\n}\n\n    \n\n    \n        \n  @if(url) {\n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if(url) {    }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalImageViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalImageViewerData.html":{"url":"interfaces/ModalImageViewerData.html","title":"interface - ModalImageViewerData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModalImageViewerData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/modal-image-viewer/modal-image-viewer.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            altImage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        altImage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        altImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ModalWrapperComponent } from '../modal-wrapper/modal-wrapper.component';\n\nexport interface ModalImageViewerData {\n  url: string;\n  altImage: string;\n  title?: string;\n}\n\n@Component({\n    selector: 'app-modal-image-viewer',\n    templateUrl: './modal-image-viewer.component.html',\n    styleUrl: './modal-image-viewer.component.scss',\n    imports: [ModalWrapperComponent]\n})\nexport class ModalImageViewerComponent implements OnInit {\n  data: ModalImageViewerData = inject(MAT_DIALOG_DATA);\n\n  url!: string;\n  description!: string;\n  title!: string | undefined;\n\n  ngOnInit(): void {\n    this.url = this.data.url;\n    this.description = this.data.altImage;\n    this.title = this.data.title;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalWrapperComponent.html":{"url":"components/ModalWrapperComponent.html","title":"component - ModalWrapperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalWrapperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modal-wrapper/modal-wrapper.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-wrapper\n            \n\n\n            \n                imports\n                \n                            MatDialogTitle\n                            MatDialogContent\n                            MatDialogActions\n                            MatDialogClose\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./modal-wrapper.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/modal-wrapper/modal-wrapper.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/modal-wrapper/modal-wrapper.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose(value)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modal-wrapper/modal-wrapper.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modal-wrapper/modal-wrapper.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, Input } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport {\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogRef,\n  MatDialogTitle,\n} from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-modal-wrapper',\n    templateUrl: './modal-wrapper.component.html',\n    imports: [\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatDialogClose,\n        MatButton,\n    ]\n})\nexport class ModalWrapperComponent {\n  dialogRef!: MatDialogRef;\n\n  @Input() title!: string | undefined;\n\n  constructor() {\n    this.dialogRef = inject(MatDialogRef);\n  }\n\n  close(value: unknown): void {\n    this.dialogRef.close(value);\n  }\n}\n\n    \n\n    \n        \n  @if(title) {\n  {{ title }}\n  }\n  \n    \n  \n  \n    Cerrar\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if(title) {  {{ title }}  }              Cerrar  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalWrapperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageTitleComponent.html":{"url":"components/PageTitleComponent.html","title":"component - PageTitleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageTitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page-title/page-title.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-title\n            \n\n\n\n\n            \n                styles\n                \n      h3 {\n        font-size: 1.5rem;\n        font-weight: normal;\n      }\n    \n            \n\n            \n                template\n                {{ title() }}\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                activatedRoute\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/page-title/page-title.component.ts:20\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/page-title/page-title.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/page-title/page-title.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/page-title/page-title.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit, signal, WritableSignal } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TITLES } from '../../constants/routes.constants';\n\n@Component({\n  selector: 'app-page-title',\n  template: ` {{ title() }}`,\n  styles: [\n    `\n      h3 {\n        font-size: 1.5rem;\n        font-weight: normal;\n      }\n    `,\n  ],\n})\nexport class PageTitleComponent implements OnInit {\n  private readonly activatedRoute!: ActivatedRoute;\n\n  title!: WritableSignal;\n\n  constructor() {\n    this.activatedRoute = inject(ActivatedRoute);\n  }\n\n  ngOnInit(): void {\n    const path = this.activatedRoute.snapshot.routeConfig?.path;\n    if (path) {\n      const value = Object.entries(TITLES).find(\n        (item: string[]) => item[0] === path\n      );\n      if (value) {\n        this.title = signal(value[1]);\n      }\n    }\n  }\n}\n\n    \n\n\n    \n            \n      h3 {\n        font-size: 1.5rem;\n        font-weight: normal;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ title() }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageTitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PopulationDataResponse.html":{"url":"interfaces/PopulationDataResponse.html","title":"interface - PopulationDataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PopulationDataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cat-population/population-response.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            any\n                                        \n                                \n                                \n                                        \n                                            codi\n                                        \n                                \n                                \n                                        \n                                            dones_de_0_a_14_anys\n                                        \n                                \n                                \n                                        \n                                            dones_de_15_a_64_anys\n                                        \n                                \n                                \n                                        \n                                            dones_de_65_anys_i_m_s\n                                        \n                                \n                                \n                                        \n                                            homes_de_0_a_14_anys\n                                        \n                                \n                                \n                                        \n                                            homes_de_15_a_64_anys\n                                        \n                                \n                                \n                                        \n                                            homes_de_65_anys_i_m_s\n                                        \n                                \n                                \n                                        \n                                            literal\n                                        \n                                \n                                \n                                        \n                                            total_de_0_a_14_anys\n                                        \n                                \n                                \n                                        \n                                            total_de_15_a_64_anys\n                                        \n                                \n                                \n                                        \n                                            total_de_65_anys_i_m_s\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        any\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        any:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dones_de_0_a_14_anys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dones_de_0_a_14_anys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dones_de_15_a_64_anys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dones_de_15_a_64_anys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dones_de_65_anys_i_m_s\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dones_de_65_anys_i_m_s:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homes_de_0_a_14_anys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homes_de_0_a_14_anys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homes_de_15_a_64_anys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homes_de_15_a_64_anys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homes_de_65_anys_i_m_s\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homes_de_65_anys_i_m_s:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        literal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        literal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_de_0_a_14_anys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_de_0_a_14_anys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_de_15_a_64_anys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_de_15_a_64_anys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_de_65_anys_i_m_s\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_de_65_anys_i_m_s:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PopulationDataResponse {\n  any: string;\n  codi: string;\n  literal: string;\n  homes_de_0_a_14_anys: string;\n  homes_de_15_a_64_anys: string;\n  homes_de_65_anys_i_m_s: string;\n  dones_de_0_a_14_anys: string;\n  dones_de_15_a_64_anys: string;\n  dones_de_65_anys_i_m_s: string;\n  total_de_0_a_14_anys: string;\n  total_de_15_a_64_anys: string;\n  total_de_65_anys_i_m_s: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseCharacter.html":{"url":"interfaces/ResponseCharacter.html","title":"interface - ResponseCharacter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseCharacter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/disney-api/disney-api.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            info\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         ResponseData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResponseData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        info:         ResponseInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResponseInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResponseInfo {\n  totalPages?: number;\n  count: number;\n  previousPage?: string;\n  nextPage?: string;\n}\n\nexport interface ResponseData {\n  _id: number;\n  films: string[];\n  shortFilms: string[];\n  tvShows: string[];\n  videoGames: string[];\n  parkAttractions: string[];\n  allies: [];\n  enemies: [];\n  sourceUrl?: string;\n  name: string;\n  imageUrl: string;\n  createdAt?: string;\n  updatedAt?: string;\n  url: string;\n  __v?: 0;\n}\n\nexport interface ResponseCharacterList {\n  info: ResponseInfo;\n  data: ResponseData[];\n}\n\nexport interface ResponseCharacter {\n  info: ResponseInfo;\n  data: ResponseData;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseCharacterList.html":{"url":"interfaces/ResponseCharacterList.html","title":"interface - ResponseCharacterList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseCharacterList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/disney-api/disney-api.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            info\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         ResponseData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResponseData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        info:         ResponseInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResponseInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResponseInfo {\n  totalPages?: number;\n  count: number;\n  previousPage?: string;\n  nextPage?: string;\n}\n\nexport interface ResponseData {\n  _id: number;\n  films: string[];\n  shortFilms: string[];\n  tvShows: string[];\n  videoGames: string[];\n  parkAttractions: string[];\n  allies: [];\n  enemies: [];\n  sourceUrl?: string;\n  name: string;\n  imageUrl: string;\n  createdAt?: string;\n  updatedAt?: string;\n  url: string;\n  __v?: 0;\n}\n\nexport interface ResponseCharacterList {\n  info: ResponseInfo;\n  data: ResponseData[];\n}\n\nexport interface ResponseCharacter {\n  info: ResponseInfo;\n  data: ResponseData;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseData.html":{"url":"interfaces/ResponseData.html","title":"interface - ResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/disney-api/disney-api.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            __v\n                                        \n                                \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            allies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            enemies\n                                        \n                                \n                                \n                                        \n                                            films\n                                        \n                                \n                                \n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            parkAttractions\n                                        \n                                \n                                \n                                        \n                                            shortFilms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceUrl\n                                        \n                                \n                                \n                                        \n                                            tvShows\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            videoGames\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        __v:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allies:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enemies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enemies:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        films\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        films:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parkAttractions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parkAttractions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortFilms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shortFilms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tvShows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tvShows:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoGames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoGames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResponseInfo {\n  totalPages?: number;\n  count: number;\n  previousPage?: string;\n  nextPage?: string;\n}\n\nexport interface ResponseData {\n  _id: number;\n  films: string[];\n  shortFilms: string[];\n  tvShows: string[];\n  videoGames: string[];\n  parkAttractions: string[];\n  allies: [];\n  enemies: [];\n  sourceUrl?: string;\n  name: string;\n  imageUrl: string;\n  createdAt?: string;\n  updatedAt?: string;\n  url: string;\n  __v?: 0;\n}\n\nexport interface ResponseCharacterList {\n  info: ResponseInfo;\n  data: ResponseData[];\n}\n\nexport interface ResponseCharacter {\n  info: ResponseInfo;\n  data: ResponseData;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseInfo.html":{"url":"interfaces/ResponseInfo.html","title":"interface - ResponseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/disney-api/disney-api.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nextPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            previousPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalPages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nextPage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previousPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previousPage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResponseInfo {\n  totalPages?: number;\n  count: number;\n  previousPage?: string;\n  nextPage?: string;\n}\n\nexport interface ResponseData {\n  _id: number;\n  films: string[];\n  shortFilms: string[];\n  tvShows: string[];\n  videoGames: string[];\n  parkAttractions: string[];\n  allies: [];\n  enemies: [];\n  sourceUrl?: string;\n  name: string;\n  imageUrl: string;\n  createdAt?: string;\n  updatedAt?: string;\n  url: string;\n  __v?: 0;\n}\n\nexport interface ResponseCharacterList {\n  info: ResponseInfo;\n  data: ResponseData[];\n}\n\nexport interface ResponseCharacter {\n  info: ResponseInfo;\n  data: ResponseData;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResultSearchBase.html":{"url":"interfaces/ResultSearchBase.html","title":"interface - ResultSearchBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResultSearchBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/spotify-api/spotify-api.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            href\n                                        \n                                \n                                \n                                        \n                                            limit\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            offset\n                                        \n                                \n                                \n                                        \n                                            previous\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previous\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previous:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport type SearchType = 'album' | 'artist';\n\nexport interface SpotifySearchForm {\n  search: FormControl;\n  type: FormControl;\n}\n\nexport interface TypeOption {\n  value: SearchType | undefined;\n  text: string;\n}\n\nexport interface SearchValues {\n  search: string;\n  type: SearchType;\n}\n\nexport interface ImageItemInfo {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface ResultSearchBase {\n  href: string;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  total: number;\n}\n\nexport interface ArtistResultItemBase {\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistResultItem extends ArtistResultItemBase {\n  followers: {\n    href: null;\n    total: number;\n  };\n  genres: string[];\n  images: ImageItemInfo[];\n  popularity: number;\n}\n\nexport interface ArtistSearchResult extends ResultSearchBase {\n  items: ArtistResultItem[];\n}\nexport interface ArtistSearchResponse {\n  artists: ArtistSearchResult;\n}\n\nexport interface AlbumResultItem {\n  album_type: string;\n  artists: ArtistResultItemBase[];\n  available_markets: string[];\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  images: ImageItemInfo[];\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  uri: string;\n}\n\nexport interface AlbumSearchResult extends ResultSearchBase {\n  items: AlbumResultItem[];\n}\n\nexport interface AlbumSearchResponse {\n  albums: AlbumSearchResult;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchFilterComponent.html":{"url":"components/SearchFilterComponent.html","title":"component - SearchFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/disney-api/components/search-filter/search-filter.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-filter\n            \n\n\n            \n                imports\n                \n                            MatExpansionModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatExpansionPanelActionRow\n                            MatButtonModule\n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./search-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                emitReset\n                            \n                            \n                                emitSearch\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        emitReset\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/disney-api/components/search-filter/search-filter.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emitSearch\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/disney-api/components/search-filter/search-filter.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/components/search-filter/search-filter.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/components/search-filter/search-filter.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/components/search-filter/search-filter.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/disney-api/components/search-filter/search-filter.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/disney-api/components/search-filter/search-filter.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MatExpansionModule,\n  MatExpansionPanelActionRow,\n} from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nexport interface SearchForm {\n  name: FormControl;\n}\n\n@Component({\n    selector: 'app-search-filter',\n    templateUrl: './search-filter.component.html',\n    imports: [\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatExpansionPanelActionRow,\n        MatButtonModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ]\n})\nexport class SearchFilterComponent implements OnInit {\n  @Output() emitSearch: EventEmitter = new EventEmitter();\n  @Output() emitReset: EventEmitter = new EventEmitter();\n\n  form!: FormGroup;\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  private buildForm(): void {\n    this.form = new FormGroup({\n      name: new FormControl('', {\n        validators: Validators.required,\n        nonNullable: true,\n      }),\n    });\n  }\n\n  search(): void {\n    if (this.form.valid) {\n      this.emitSearch.emit(this.form.controls.name.value);\n    }\n  }\n\n  reset(): void {\n    this.form.reset();\n    this.emitReset.emit();\n  }\n}\n\n    \n\n    \n        \n  Filtro\n  @if(form) {\n  \n    \n      Nombre\n      \n      @if (form.controls.name.hasError('required')) {\n      Nombre es requerido\n      }\n    \n  \n  }\n  \n    \n      Reiniciar\n    \n    \n      Buscar\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Filtro  @if(form) {            Nombre            @if (form.controls.name.hasError(\\'required\\')) {      Nombre es requerido      }        }            Reiniciar              Buscar      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchForm.html":{"url":"interfaces/SearchForm.html","title":"interface - SearchForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/disney-api/components/search-filter/search-filter.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MatExpansionModule,\n  MatExpansionPanelActionRow,\n} from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nexport interface SearchForm {\n  name: FormControl;\n}\n\n@Component({\n    selector: 'app-search-filter',\n    templateUrl: './search-filter.component.html',\n    imports: [\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatExpansionPanelActionRow,\n        MatButtonModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ]\n})\nexport class SearchFilterComponent implements OnInit {\n  @Output() emitSearch: EventEmitter = new EventEmitter();\n  @Output() emitReset: EventEmitter = new EventEmitter();\n\n  form!: FormGroup;\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  private buildForm(): void {\n    this.form = new FormGroup({\n      name: new FormControl('', {\n        validators: Validators.required,\n        nonNullable: true,\n      }),\n    });\n  }\n\n  search(): void {\n    if (this.form.valid) {\n      this.emitSearch.emit(this.form.controls.name.value);\n    }\n  }\n\n  reset(): void {\n    this.form.reset();\n    this.emitReset.emit();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchValues.html":{"url":"interfaces/SearchValues.html","title":"interface - SearchValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/spotify-api/spotify-api.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            search\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        search:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SearchType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SearchType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport type SearchType = 'album' | 'artist';\n\nexport interface SpotifySearchForm {\n  search: FormControl;\n  type: FormControl;\n}\n\nexport interface TypeOption {\n  value: SearchType | undefined;\n  text: string;\n}\n\nexport interface SearchValues {\n  search: string;\n  type: SearchType;\n}\n\nexport interface ImageItemInfo {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface ResultSearchBase {\n  href: string;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  total: number;\n}\n\nexport interface ArtistResultItemBase {\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistResultItem extends ArtistResultItemBase {\n  followers: {\n    href: null;\n    total: number;\n  };\n  genres: string[];\n  images: ImageItemInfo[];\n  popularity: number;\n}\n\nexport interface ArtistSearchResult extends ResultSearchBase {\n  items: ArtistResultItem[];\n}\nexport interface ArtistSearchResponse {\n  artists: ArtistSearchResult;\n}\n\nexport interface AlbumResultItem {\n  album_type: string;\n  artists: ArtistResultItemBase[];\n  available_markets: string[];\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  images: ImageItemInfo[];\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  uri: string;\n}\n\nexport interface AlbumSearchResult extends ResultSearchBase {\n  items: AlbumResultItem[];\n}\n\nexport interface AlbumSearchResponse {\n  albums: AlbumSearchResult;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimplePaginatorComponent.html":{"url":"components/SimplePaginatorComponent.html","title":"component - SimplePaginatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SimplePaginatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/simple-paginator/simple-paginator.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-simple-paginator\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                            MatSelectModule\n                            MatFormField\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./simple-paginator.component.html\n            \n\n\n\n            \n                styleUrl\n                ./simple-paginator.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breakpointService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleChangePageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                disableNext\n                            \n                            \n                                disablePrevious\n                            \n                            \n                                firstPage\n                            \n                            \n                                lastPage\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                showFirstLastPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changePageSize\n                            \n                            \n                                goPage\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/simple-paginator/simple-paginator.component.ts:34\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/simple-paginator/simple-paginator.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableNext\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/simple-paginator/simple-paginator.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disablePrevious\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/simple-paginator/simple-paginator.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/simple-paginator/simple-paginator.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lastPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/simple-paginator/simple-paginator.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/simple-paginator/simple-paginator.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSizeOptions\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : [5, 10, 15, 25, 50, 100]\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/simple-paginator/simple-paginator.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFirstLastPage\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/simple-paginator/simple-paginator.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changePageSize\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/simple-paginator/simple-paginator.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        goPage\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/simple-paginator/simple-paginator.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleChangePageSize\n                        \n                    \n                \n            \n            \n                \nhandleChangePageSize(data: MatSelectChange)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/simple-paginator/simple-paginator.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        MatSelectChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        breakpointService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BreakpointService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/simple-paginator/simple-paginator.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { Component, EventEmitter, inject, Input, Output } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MatFormField,\n  MatSelectChange,\n  MatSelectModule,\n} from '@angular/material/select';\nimport { BreakpointService } from '../../services/breakpoint.service';\n\n@Component({\n    selector: 'app-simple-paginator',\n    templateUrl: './simple-paginator.component.html',\n    styleUrl: './simple-paginator.component.scss',\n    imports: [AsyncPipe, MatSelectModule, MatFormField, MatButtonModule]\n})\nexport class SimplePaginatorComponent {\n  @Input() pageSizeOptions = [5, 10, 15, 25, 50, 100];\n  @Input() pageSize = 5;\n  @Input() disablePrevious = false;\n  @Input() disableNext = false;\n  @Input() currentPage = 1;\n  @Input() firstPage = 1;\n  @Input() lastPage = 1;\n  @Input() showFirstLastPage = false;\n\n  @Output() goPage: EventEmitter = new EventEmitter();\n  @Output() changePageSize: EventEmitter = new EventEmitter();\n\n  breakpointService!: BreakpointService;\n\n  handleChangePageSize(data: MatSelectChange): void {\n    this.changePageSize.emit(data.value);\n  }\n\n  constructor() {\n    this.breakpointService = inject(BreakpointService);\n  }\n}\n\n    \n\n    \n        \n  \n    @if(showFirstLastPage) {\n    \n      Inicio\n    \n    }\n    \n      Anterior\n    \n  \n  \n    Elementos por página\n    \n      @for(item of pageSizeOptions; track item) {\n      {{ item }}\n      }\n    \n  \n  \n    \n      Siguiente\n    \n    @if(showFirstLastPage) {\n    \n      Final\n    \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if(showFirstLastPage) {          Inicio        }          Anterior            Elementos por página          @for(item of pageSizeOptions; track item) {      {{ item }}      }                  Siguiente        @if(showFirstLastPage) {          Final        }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimplePaginatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifyAPIComponent.html":{"url":"components/SpotifyAPIComponent.html","title":"component - SpotifyAPIComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpotifyAPIComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/spotify-api/spotify-api.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-api\n            \n\n\n            \n                imports\n                \n                            NgClass\n                                PageTitleComponent\n                                SpotifySearchFormComponent\n                                ArtistAlbumDataComponent\n                            MatPaginatorModule\n                                DataNotFoundComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./spotify-api.component.html\n            \n\n\n\n            \n                styleUrl\n                ./spotify-api.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _search\n                            \n                            \n                                    Private\n                                    Readonly\n                                destroyRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                injector\n                            \n                            \n                                isArtist\n                            \n                            \n                                listLimit\n                            \n                            \n                                listOffset\n                            \n                            \n                                nextLink\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                previousLink\n                            \n                            \n                                result\n                            \n                            \n                                searchString\n                            \n                            \n                                searchType\n                            \n                            \n                                    Private\n                                    Readonly\n                                spotifyService\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePage\n                            \n                            \n                                changePageLimit\n                            \n                            \n                                handleClear\n                            \n                            \n                                handleSearch\n                            \n                            \n                                    Private\n                                initSignals\n                            \n                            \n                                nextPreviousPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setAlbumArtistData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:67\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(event: PageEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/spotify-api.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PageEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePageLimit\n                        \n                    \n                \n            \n            \n                \nchangePageLimit(pageLimit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/spotify-api.component.ts:153\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageLimit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleClear\n                        \n                    \n                \n            \n            \n                \nhandleClear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/spotify-api.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSearch\n                        \n                    \n                \n            \n            \n                \nhandleSearch(searchValues: SearchValues)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/spotify-api.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchValues\n                                            \n                                                            SearchValues\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initSignals\n                        \n                    \n                \n            \n            \n                \n                        \n                    initSignals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/spotify-api.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextPreviousPage\n                        \n                    \n                \n            \n            \n                \nnextPreviousPage(event: PageEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/spotify-api.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PageEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/spotify-api.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAlbumArtistData\n                        \n                    \n                \n            \n            \n                \nsetAlbumArtistData(info: ArtistSearchResponse | AlbumSearchResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/spotify-api.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                        ArtistSearchResponse | AlbumSearchResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ArtistSearchResult | AlbumSearchResult\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _search\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DestroyRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Injector\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isArtist\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listLimit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : INITIAL_LIST_LIMIT\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listOffset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : INITIAL_LIST_OFFSET\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : PAGE_SIZE_OPTIONS\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchString\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchType | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        spotifyService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpotifyAPIService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/spotify-api.component.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgClass } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  DestroyRef,\n  inject,\n  Injector,\n  OnInit,\n  signal,\n  Signal,\n  WritableSignal,\n} from '@angular/core';\nimport { takeUntilDestroyed, toSignal } from '@angular/core/rxjs-interop';\nimport { MatPaginatorModule, PageEvent } from '@angular/material/paginator';\nimport { map, of, Subject, switchMap, tap } from 'rxjs';\nimport { DataNotFoundComponent } from '../../components/data-not-found/data-not-found.component';\nimport { PageTitleComponent } from '../../components/page-title/page-title.component';\nimport {\n  INITIAL_LIST_LIMIT,\n  INITIAL_LIST_OFFSET,\n  PAGE_SIZE_OPTIONS,\n} from '../../constants/spotify-api/spotify-api.constants';\nimport {\n  AlbumSearchResponse,\n  AlbumSearchResult,\n  ArtistSearchResponse,\n  ArtistSearchResult,\n  SearchType,\n  SearchValues,\n} from '../../models/spotify-api/spotify-api.model';\nimport { SpotifyAPIService } from '../../services/spotify-api.service';\nimport { ArtistAlbumDataComponent } from './components/artist-album-data/artist-album-data';\nimport { SpotifySearchFormComponent } from './components/search-form/spotify-search-form.component';\n\n@Component({\n    selector: 'app-spotify-api',\n    templateUrl: './spotify-api.component.html',\n    styleUrl: './spotify-api.component.scss',\n    imports: [\n        NgClass,\n        PageTitleComponent,\n        SpotifySearchFormComponent,\n        ArtistAlbumDataComponent,\n        MatPaginatorModule,\n        DataNotFoundComponent,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpotifyAPIComponent implements OnInit {\n  private readonly spotifyService!: SpotifyAPIService;\n  private readonly injector!: Injector;\n  private readonly destroyRef!: DestroyRef;\n\n  result!: Signal;\n  isArtist!: WritableSignal;\n\n  private readonly _search: Subject = new Subject();\n\n  searchString!: string | undefined;\n  searchType!: SearchType | undefined;\n\n  listLimit = INITIAL_LIST_LIMIT;\n  listOffset = INITIAL_LIST_OFFSET;\n  pageSizeOptions = PAGE_SIZE_OPTIONS;\n  nextLink!: string;\n  previousLink!: string;\n  totalItems!: number;\n\n  constructor() {\n    this.injector = inject(Injector);\n    this.spotifyService = inject(SpotifyAPIService);\n    this.destroyRef = inject(DestroyRef);\n  }\n\n  ngOnInit(): void {\n    this.initSignals();\n  }\n\n  private initSignals(): void {\n    this.isArtist = signal(false);\n\n    this.result = toSignal(\n      this._search.pipe(\n        takeUntilDestroyed(this.destroyRef),\n        tap(() => this.isArtist.set(this.searchType === 'artist')),\n        switchMap(() => {\n          if (\n            this.searchString !== undefined &&\n            this.searchType !== undefined\n          ) {\n            return this.spotifyService.search(\n              this.searchString,\n              this.searchType,\n              this.listLimit,\n              this.listOffset\n            );\n          }\n          return of(undefined);\n        }),\n        map(\n          (\n            response: ArtistSearchResponse | AlbumSearchResponse | undefined\n          ) => {\n            if (response !== undefined) {\n              return this.setAlbumArtistData(response);\n            }\n\n            return undefined;\n          }\n        )\n      ),\n      {\n        initialValue: undefined,\n        injector: this.injector,\n      }\n    );\n  }\n\n  setAlbumArtistData(\n    info: ArtistSearchResponse | AlbumSearchResponse\n  ): ArtistSearchResult | AlbumSearchResult {\n    const data = this.isArtist()\n      ? (info as ArtistSearchResponse).artists\n      : (info as AlbumSearchResponse).albums;\n    this.previousLink = data.previous;\n    this.nextLink = data.next;\n    this.totalItems = data.total;\n    return data;\n  }\n\n  handleClear(): void {\n    this.searchString = undefined;\n    this.searchType = undefined;\n    this.listLimit = INITIAL_LIST_LIMIT;\n    this.listOffset = INITIAL_LIST_OFFSET;\n    this._search.next();\n  }\n\n  handleSearch(searchValues: SearchValues): void {\n    this.searchString = searchValues.search;\n    this.searchType = searchValues.type;\n    this._search.next();\n  }\n\n  changePage(event: PageEvent): void {\n    if (event.pageSize !== this.listLimit) {\n      this.changePageLimit(event.pageSize);\n    } else {\n      this.nextPreviousPage(event);\n    }\n  }\n\n  changePageLimit(pageLimit: number): void {\n    this.listLimit = pageLimit;\n    this.listOffset = 0;\n    this._search.next();\n  }\n\n  nextPreviousPage(event: PageEvent) {\n    const urlString =\n      event.previousPageIndex !== undefined &&\n      event.pageIndex > event.previousPageIndex\n        ? this.nextLink\n        : this.previousLink;\n\n    const params = new URLSearchParams(new URL(urlString).search);\n    const offset = params.get('offset');\n    if (offset) {\n      this.listOffset = parseInt(offset);\n    }\n    const limit = params.get('limit');\n    if (limit) {\n      this.listLimit = parseInt(limit);\n    }\n    this._search.next();\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  @if(result()) { @if(totalItems > 0) {\n  \n    @if (isArtist()) { Artist and related artists } @else { Albums }\n    \n    \n    \n      @for(item of result()?.items; track item.id) {\n      \n        \n        \n      \n      }\n    \n    \n    \n  \n  } @else {\n  \n  } }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if(result()) { @if(totalItems > 0) {      @if (isArtist()) { Artist and related artists } @else { Albums }                  @for(item of result()?.items; track item.id) {                                  }                } @else {    } }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifyAPIComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpotifyAPIService.html":{"url":"injectables/SpotifyAPIService.html","title":"injectable - SpotifyAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpotifyAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/spotify-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para hacer llamadas a la API de Spotify\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BASE_URL\n                            \n                            \n                                    Private\n                                    Readonly\n                                CLIENT\n                            \n                            \n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                http\n                            \n                            \n                                    Private\n                                    Readonly\n                                KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkToken\n                            \n                            \n                                    Private\n                                getTimeInSeconds\n                            \n                            \n                                getToken\n                            \n                            \n                                    Private\n                                getTokenString\n                            \n                            \n                                saveToken\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/spotify-api.service.ts:44\n                            \n                        \n\n                \n                    \n                            Método constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkToken\n                        \n                    \n                \n            \n            \n                \ncheckToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/spotify-api.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Comprueba si ha caducado el token guardado en el sessionStorage\n\n\n                        \n                            Returns :         TokenCheckInfo\n\n                        \n                            \n                                Objeto con información del token y su caducidad\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getTimeInSeconds\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTimeInSeconds()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/spotify-api.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Devuelve el tiempo actual en segundos\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                Tiempo actual en segundos\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/spotify-api.service.ts:117\n                        \n                    \n\n\n            \n                \n                        Obtiene el token de autenticación, lo guarda en el sessionStorage y devuelve una cadena con el valor\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable con el token, como cadena de texto\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getTokenString\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTokenString(token: TokenInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/spotify-api.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Devuelve el token de autenticación de la información recibida al iniciar / renovar sesión\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            TokenInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Información del token recibido al iniciar / renovar sesión\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Cadena de texto con el token de autenticación\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveToken\n                        \n                    \n                \n            \n            \n                \nsaveToken(token: TokenInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/spotify-api.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Guarda la informaciónm del token en el sessionStorage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            TokenInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Información del token recibida al iniciar / renovar sesión\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch(search: string, type: SearchType, limit?: number, offset?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/spotify-api.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Hace una llamada al servicio de búsqueda de la API de Spotify\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Cadena de texto a buscar\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            SearchType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tipo de búqueda: Artista o Álbum\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Nümero de resultados por búsqueda\n\n                                            \n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Número de página para los resultados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.spotify.com/v1/'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/spotify-api.service.ts:40\n                        \n                    \n\n            \n                \n                    Url de la API de Spotify\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '40a7ec852b9f4dbb9daaedd86ab8239a'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/spotify-api.service.ts:28\n                        \n                    \n\n            \n                \n                    Datos API Spotify: cliente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContext().set(SPOTIFY_REQUEST, true)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/spotify-api.service.ts:44\n                        \n                    \n\n            \n                \n                    Contexto para indicar que son llamadas a la API de Spotify\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/spotify-api.service.ts:36\n                        \n                    \n\n            \n                \n                    Servicio para llamadas http de Angular\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '70263a73066d41229e51903cd81bf9d9'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/spotify-api.service.ts:32\n                        \n                    \n\n            \n                \n                    Datos API Spotify: key\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpContext, HttpParams } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { map, Observable, of, tap } from 'rxjs';\nimport {\n  AlbumSearchResponse,\n  ArtistSearchResponse,\n  SearchType,\n} from '../models/spotify-api/spotify-api.model';\nimport {\n  TokenCheckInfo,\n  TokenInfo,\n  TokenStored,\n} from '../models/token/token.model';\nimport { SPOTIFY_REQUEST } from '../utils/http-context.util';\n\nexport const TOKEN_STORE_KEY = 'token';\n\n/**\n * Servicio para hacer llamadas a la API de Spotify\n */\n@Injectable({\n  providedIn: 'any',\n})\nexport class SpotifyAPIService {\n  /**\n   * Datos API Spotify: cliente\n   */\n  private readonly CLIENT = '40a7ec852b9f4dbb9daaedd86ab8239a';\n  /**\n   * Datos API Spotify: key\n   */\n  private readonly KEY = '70263a73066d41229e51903cd81bf9d9';\n  /**\n   * Servicio para llamadas http de Angular\n   */\n  private readonly http!: HttpClient;\n  /**\n   * Url de la API de Spotify\n   */\n  private readonly BASE_URL = 'https://api.spotify.com/v1/';\n  /**\n   * Contexto para indicar que son llamadas a la API de Spotify\n   */\n  context = new HttpContext().set(SPOTIFY_REQUEST, true);\n\n  /**\n   * Método constructor\n   */\n  constructor() {\n    this.http = inject(HttpClient);\n  }\n\n  /**\n   * Devuelve el tiempo actual en segundos\n   * @returns {number} Tiempo actual en segundos\n   */\n  private getTimeInSeconds(): number {\n    return Math.trunc(new Date().getTime() / 100);\n  }\n\n  /**\n   * Devuelve el token de autenticación de la información recibida al iniciar / renovar sesión\n   * @param  {TokenInfo} token Información del token recibido al iniciar / renovar sesión\n   * @returns {string} Cadena de texto con el token de autenticación\n   */\n  private getTokenString(token: TokenInfo): string {\n    return `${token.token_type} ${token.access_token}`;\n  }\n\n  /**\n   * Guarda la informaciónm del token en el sessionStorage\n   * @param {TokenInfo} token Información del token recibida al iniciar / renovar sesión\n   */\n  saveToken(token: TokenInfo): void {\n    const tokenStored: TokenStored = {\n      token,\n      time: this.getTimeInSeconds(),\n    };\n\n    sessionStorage.setItem(TOKEN_STORE_KEY, JSON.stringify(tokenStored));\n  }\n\n  /**\n   * Comprueba si ha caducado el token guardado en el sessionStorage\n   * @returns {TokenCheckInfo} Objeto con información del token y su caducidad\n   */\n  checkToken(): TokenCheckInfo {\n    const keyInfo = sessionStorage.getItem(TOKEN_STORE_KEY);\n\n    if (!keyInfo) {\n      return {\n        isOk: false,\n      };\n    }\n\n    const tokenStored: TokenStored = JSON.parse(keyInfo);\n\n    const expireTime = tokenStored.time + tokenStored.token.expires_in;\n    const currentTime = this.getTimeInSeconds();\n\n    if (currentTime > expireTime) {\n      return {\n        isOk: false,\n      };\n    }\n\n    return {\n      isOk: true,\n      token: this.getTokenString(tokenStored.token),\n    };\n  }\n\n  /**\n   * Obtiene el token de autenticación, lo guarda en el sessionStorage y devuelve una cadena con el valor\n   * @returns {Observable} Un observable con el token, como cadena de texto\n   */\n  getToken(): Observable {\n    const tokenInfo = this.checkToken();\n\n    if (tokenInfo.isOk && tokenInfo.token) {\n      return of(tokenInfo.token);\n    }\n\n    const body = `grant_type=client_credentials&client_id=${this.CLIENT}&client_secret=${this.KEY}`;\n    return this.http\n      .post('https://accounts.spotify.com/api/token', body, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      })\n      .pipe(\n        tap((token: TokenInfo) => this.saveToken(token)),\n        map((token: TokenInfo) => this.getTokenString(token))\n      );\n  }\n\n  /**\n   * Hace una llamada al servicio de búsqueda de la API de Spotify\n   * @param {string} search Cadena de texto a buscar\n   * @param {SearchType} type Tipo de búqueda: Artista o Álbum\n   * @param {number} limit Nümero de resultados por búsqueda\n   * @param {number} offset Número de página para los resultados\n   * @returns\n   */\n  search(\n    search: string,\n    type: SearchType,\n    limit?: number,\n    offset?: number\n  ): Observable {\n    let params = new HttpParams().append('q', search).append('type', type);\n\n    if (limit) {\n      params = params.append('limit', limit);\n    }\n\n    if (offset) {\n      params = params.append('offset', offset);\n    }\n\n    return this.http.get(\n      `${this.BASE_URL}search`,\n      {\n        context: this.context,\n        params,\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpotifySearchForm.html":{"url":"interfaces/SpotifySearchForm.html","title":"interface - SpotifySearchForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpotifySearchForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/spotify-api/spotify-api.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            search\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        search:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport type SearchType = 'album' | 'artist';\n\nexport interface SpotifySearchForm {\n  search: FormControl;\n  type: FormControl;\n}\n\nexport interface TypeOption {\n  value: SearchType | undefined;\n  text: string;\n}\n\nexport interface SearchValues {\n  search: string;\n  type: SearchType;\n}\n\nexport interface ImageItemInfo {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface ResultSearchBase {\n  href: string;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  total: number;\n}\n\nexport interface ArtistResultItemBase {\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistResultItem extends ArtistResultItemBase {\n  followers: {\n    href: null;\n    total: number;\n  };\n  genres: string[];\n  images: ImageItemInfo[];\n  popularity: number;\n}\n\nexport interface ArtistSearchResult extends ResultSearchBase {\n  items: ArtistResultItem[];\n}\nexport interface ArtistSearchResponse {\n  artists: ArtistSearchResult;\n}\n\nexport interface AlbumResultItem {\n  album_type: string;\n  artists: ArtistResultItemBase[];\n  available_markets: string[];\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  images: ImageItemInfo[];\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  uri: string;\n}\n\nexport interface AlbumSearchResult extends ResultSearchBase {\n  items: AlbumResultItem[];\n}\n\nexport interface AlbumSearchResponse {\n  albums: AlbumSearchResult;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifySearchFormComponent.html":{"url":"components/SpotifySearchFormComponent.html","title":"component - SpotifySearchFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpotifySearchFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/spotify-api/components/search-form/spotify-search-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-search-form\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                            MatInputModule\n                            MatSelectModule\n                            MatFormFieldModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./spotify-search-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./spotify-search-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                typeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearForm\n                            \n                            \n                                handleSearchEnter\n                            \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clear\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/spotify-api/components/search-form/spotify-search-form.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/spotify-api/components/search-form/spotify-search-form.component.ts:34\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearForm\n                        \n                    \n                \n            \n            \n                \nclearForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/components/search-form/spotify-search-form.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSearchEnter\n                        \n                    \n                \n            \n            \n                \nhandleSearchEnter(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/components/search-form/spotify-search-form.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    initForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/components/search-form/spotify-search-form.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/components/search-form/spotify-search-form.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/spotify-api/components/search-form/spotify-search-form.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/components/search-form/spotify-search-form.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOption[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      value: undefined,\n      text: 'Seleccione el tipo de búsqueda',\n    },\n    {\n      value: 'album',\n      text: 'Album',\n    },\n    {\n      value: 'artist',\n      text: 'Artista',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/spotify-api/components/search-form/spotify-search-form.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport {\n  SearchValues,\n  SpotifySearchForm,\n  TypeOption,\n} from '../../../../models/spotify-api/spotify-api.model';\n\n@Component({\n    selector: 'app-spotify-search-form',\n    templateUrl: './spotify-search-form.component.html',\n    styleUrl: './spotify-search-form.component.scss',\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        MatButtonModule,\n    ]\n})\nexport class SpotifySearchFormComponent implements OnInit {\n  @Output() clear: EventEmitter = new EventEmitter();\n  @Output() search: EventEmitter =\n    new EventEmitter();\n\n  form!: FormGroup;\n\n  typeOptions: TypeOption[] = [\n    {\n      value: undefined,\n      text: 'Seleccione el tipo de búsqueda',\n    },\n    {\n      value: 'album',\n      text: 'Album',\n    },\n    {\n      value: 'artist',\n      text: 'Artista',\n    },\n  ];\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  private initForm(): void {\n    this.form = new FormGroup({\n      search: new FormControl(undefined, {\n        validators: Validators.required,\n        nonNullable: true,\n      }),\n      type: new FormControl(undefined, {\n        validators: Validators.required,\n        nonNullable: true,\n      }),\n    });\n  }\n\n  clearForm(): void {\n    this.form.reset();\n    this.clear.emit();\n  }\n\n  submitForm(): void {\n    if (this.form.controls.search.value && this.form.controls.type.value) {\n      const searchValues: SearchValues = {\n        search: this.form.controls.search.value,\n        type: this.form.controls.type.value,\n      };\n\n      this.search.emit(searchValues);\n    }\n  }\n\n  handleSearchEnter(event: Event): void {\n    event.preventDefault();\n    this.submitForm();\n  }\n}\n\n    \n\n    \n        @if(form) {\n\n  \n  \n    Buscar...\n    \n    @if(form.controls.search.hasError('required')) {\n    El campo es requerido\n    }\n  \n  \n  \n    Tipo de búsqueda\n    \n      @for (type of typeOptions; track type) {\n      {{ type.text }}\n      }\n    \n    @if(form.controls.type.hasError('required')) {\n    El campo es requerido\n    }\n  \n  \n  \n    \n      Buscar\n    \n    \n      Reiniciar\n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(form) {        Buscar...        @if(form.controls.search.hasError(\\'required\\')) {    El campo es requerido    }          Tipo de búsqueda          @for (type of typeOptions; track type) {      {{ type.text }}      }        @if(form.controls.type.hasError(\\'required\\')) {    El campo es requerido    }                Buscar              Reiniciar      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistAlbumDataComponent', 'selector': 'app-artist-album-data'},{'name': 'CatDammingsComponent', 'selector': 'app-cat-dammings'},{'name': 'CatDammingsHistoricChartComponent', 'selector': 'app-dammings-historic-chart'},{'name': 'CatPopulationComponent', 'selector': 'app-cat-population'},{'name': 'DataNotFoundComponent', 'selector': 'app-data-not-found'},{'name': 'DisneyAPIComponent', 'selector': 'app-disney-api'},{'name': 'DrawerMenuComponent', 'selector': 'app-drawer-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ModalImageViewerComponent', 'selector': 'app-modal-image-viewer'},{'name': 'ModalWrapperComponent', 'selector': 'app-modal-wrapper'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'SearchFilterComponent', 'selector': 'app-search-filter'},{'name': 'SimplePaginatorComponent', 'selector': 'app-simple-paginator'},{'name': 'SpotifyAPIComponent', 'selector': 'app-spotify-api'},{'name': 'SpotifySearchFormComponent', 'selector': 'app-spotify-search-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifySearchFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StationItem.html":{"url":"interfaces/StationItem.html","title":"interface - StationItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StationItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cat-dammings/cat-dammings.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport interface DammingsInfoResponse {\n  dia: string;\n  estaci: string;\n  nivell_absolut: string;\n  percentatge_volum_embassat: string;\n  volum_embassat: string;\n}\n\nexport interface DammingsInfoItem extends DammingsInfoResponse {\n  id: string;\n  id_estaci: string;\n  date: Date;\n}\n\nexport interface StationItem {\n  key: string;\n  name: string;\n}\n\nexport interface FilterForm {\n  date: FormControl;\n  stations: FormControl;\n}\n\nexport interface FilteredInfoItem {\n  id_estaci: string;\n  estaci: string;\n  nivell_absolut: string;\n  percentatge_volum_embassat: string;\n  volum_embassat: string;\n}\n\nexport interface FilteredInfoItemDate extends FilteredInfoItem {\n  dia: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenCheckInfo.html":{"url":"interfaces/TokenCheckInfo.html","title":"interface - TokenCheckInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenCheckInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/token/token.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isOk\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isOk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isOk:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenInfo {\n  access_token: string;\n  expires_in: number;\n  token_type: string;\n}\n\nexport interface TokenStored {\n  token: TokenInfo;\n  time: number;\n}\n\nexport interface TokenCheckInfo {\n  isOk: boolean;\n  token?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenInfo.html":{"url":"interfaces/TokenInfo.html","title":"interface - TokenInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/token/token.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenInfo {\n  access_token: string;\n  expires_in: number;\n  token_type: string;\n}\n\nexport interface TokenStored {\n  token: TokenInfo;\n  time: number;\n}\n\nexport interface TokenCheckInfo {\n  isOk: boolean;\n  token?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenStored.html":{"url":"interfaces/TokenStored.html","title":"interface - TokenStored","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenStored\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/token/token.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         TokenInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TokenInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenInfo {\n  access_token: string;\n  expires_in: number;\n  token_type: string;\n}\n\nexport interface TokenStored {\n  token: TokenInfo;\n  time: number;\n}\n\nexport interface TokenCheckInfo {\n  isOk: boolean;\n  token?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeOption.html":{"url":"interfaces/TypeOption.html","title":"interface - TypeOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TypeOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/spotify-api/spotify-api.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         SearchType | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SearchType | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\n\nexport type SearchType = 'album' | 'artist';\n\nexport interface SpotifySearchForm {\n  search: FormControl;\n  type: FormControl;\n}\n\nexport interface TypeOption {\n  value: SearchType | undefined;\n  text: string;\n}\n\nexport interface SearchValues {\n  search: string;\n  type: SearchType;\n}\n\nexport interface ImageItemInfo {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface ResultSearchBase {\n  href: string;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  total: number;\n}\n\nexport interface ArtistResultItemBase {\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistResultItem extends ArtistResultItemBase {\n  followers: {\n    href: null;\n    total: number;\n  };\n  genres: string[];\n  images: ImageItemInfo[];\n  popularity: number;\n}\n\nexport interface ArtistSearchResult extends ResultSearchBase {\n  items: ArtistResultItem[];\n}\nexport interface ArtistSearchResponse {\n  artists: ArtistSearchResult;\n}\n\nexport interface AlbumResultItem {\n  album_type: string;\n  artists: ArtistResultItemBase[];\n  available_markets: string[];\n  external_urls: { [key: string]: string };\n  href: string;\n  id: string;\n  images: ImageItemInfo[];\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  uri: string;\n}\n\nexport interface AlbumSearchResult extends ResultSearchBase {\n  items: AlbumResultItem[];\n}\n\nexport interface AlbumSearchResponse {\n  albums: AlbumSearchResult;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipCodeItem.html":{"url":"interfaces/ZipCodeItem.html","title":"interface - ZipCodeItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ZipCodeItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cat-population/zip-codes.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            codi_municipi\n                                        \n                                \n                                \n                                        \n                                            codi_postal\n                                        \n                                \n                                \n                                        \n                                            identificador\n                                        \n                                \n                                \n                                        \n                                            nom_municipi\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        codi_municipi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codi_municipi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codi_postal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codi_postal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identificador\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identificador:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nom_municipi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nom_municipi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ZIP_CODES } from '../../constants/cat-population/zip-codes.constants'\n\nexport interface ZipCodeItem {\n  identificador: string\n  codi_postal: string\n  codi_municipi: string\n  nom_municipi: string\n}\n\nexport interface ZipCodeListItem {\n  id: string\n  codi_postal: string[]\n  codi_municipi: string\n  nom_municipi: string\n}\n\nexport interface ZipCodesState {\n  itemsList: ZipCodeListItem[]\n  loading: boolean\n  loaded: boolean\n  errorLoading: boolean\n  provincesFilter: ZIP_CODES[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipCodeListItem.html":{"url":"interfaces/ZipCodeListItem.html","title":"interface - ZipCodeListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ZipCodeListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cat-population/zip-codes.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            codi_municipi\n                                        \n                                \n                                \n                                        \n                                            codi_postal\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nom_municipi\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        codi_municipi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codi_municipi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codi_postal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codi_postal:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nom_municipi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nom_municipi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ZIP_CODES } from '../../constants/cat-population/zip-codes.constants'\n\nexport interface ZipCodeItem {\n  identificador: string\n  codi_postal: string\n  codi_municipi: string\n  nom_municipi: string\n}\n\nexport interface ZipCodeListItem {\n  id: string\n  codi_postal: string[]\n  codi_municipi: string\n  nom_municipi: string\n}\n\nexport interface ZipCodesState {\n  itemsList: ZipCodeListItem[]\n  loading: boolean\n  loaded: boolean\n  errorLoading: boolean\n  provincesFilter: ZIP_CODES[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipCodesState.html":{"url":"interfaces/ZipCodesState.html","title":"interface - ZipCodesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ZipCodesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cat-population/zip-codes.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorLoading\n                                        \n                                \n                                \n                                        \n                                            itemsList\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            provincesFilter\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemsList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemsList:         ZipCodeListItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipCodeListItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provincesFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provincesFilter:         ZIP_CODES[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZIP_CODES[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ZIP_CODES } from '../../constants/cat-population/zip-codes.constants'\n\nexport interface ZipCodeItem {\n  identificador: string\n  codi_postal: string\n  codi_municipi: string\n  nom_municipi: string\n}\n\nexport interface ZipCodeListItem {\n  id: string\n  codi_postal: string[]\n  codi_municipi: string\n  nom_municipi: string\n}\n\nexport interface ZipCodesState {\n  itemsList: ZipCodeListItem[]\n  loading: boolean\n  loaded: boolean\n  errorLoading: boolean\n  provincesFilter: ZIP_CODES[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            interceptors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/data-not-found/data-not-found.component.ts\n            \n            component\n            DataNotFoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/drawer-menu/drawer-menu.component.ts\n            \n            component\n            DrawerMenuComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/drawer-menu/drawer-menu.component.ts\n            \n            interface\n            MenuItem\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/loading-spinner/loading-spinner.component.ts\n            \n            component\n            LoadingSpinnerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/modal-image-viewer/modal-image-viewer.component.ts\n            \n            component\n            ModalImageViewerComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/modal-image-viewer/modal-image-viewer.component.ts\n            \n            interface\n            ModalImageViewerData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/modal-wrapper/modal-wrapper.component.ts\n            \n            component\n            ModalWrapperComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/page-title/page-title.component.ts\n            \n            component\n            PageTitleComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/simple-paginator/simple-paginator.component.ts\n            \n            component\n            SimplePaginatorComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                        src/app/constants/cat-population/zip-codes.constants.ts\n            \n            variable\n            FILTER_PROVINCE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/constants/common.constants.ts\n            \n            variable\n            ONE_DAY_MILISECONDS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/constants/routes.constants.ts\n            \n            variable\n            TITLES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/constants/spotify-api/spotify-api.constants.ts\n            \n            variable\n            EXTERNAL_URL_SPOTIFY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/constants/spotify-api/spotify-api.constants.ts\n            \n            variable\n            INITIAL_LIST_LIMIT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/constants/spotify-api/spotify-api.constants.ts\n            \n            variable\n            INITIAL_LIST_OFFSET\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/constants/spotify-api/spotify-api.constants.ts\n            \n            variable\n            PAGE_SIZE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/interceptors/cache.interceptor.ts\n            \n            function\n            cacheInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/interceptors/loading.interceptor.ts\n            \n            function\n            loadingInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/interceptors/token.interceptor.ts\n            \n            function\n            tokenInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/cat-dammings/cat-dammings.model.ts\n            \n            interface\n            DammingsInfoItem\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/cat-dammings/cat-dammings.model.ts\n            \n            interface\n            DammingsInfoResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/cat-dammings/cat-dammings.model.ts\n            \n            interface\n            FilteredInfoItem\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/cat-dammings/cat-dammings.model.ts\n            \n            interface\n            FilteredInfoItemDate\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/cat-dammings/cat-dammings.model.ts\n            \n            interface\n            FilterForm\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/cat-dammings/cat-dammings.model.ts\n            \n            interface\n            StationItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/cat-population/list.model.ts\n            \n            interface\n            FormatedPopulationData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/cat-population/list.model.ts\n            \n            interface\n            ListItemObject\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/cat-population/population-response.model.ts\n            \n            interface\n            PopulationDataResponse\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/models/cat-population/zip-codes.model.ts\n            \n            interface\n            ZipCodeItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/cat-population/zip-codes.model.ts\n            \n            interface\n            ZipCodeListItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/cat-population/zip-codes.model.ts\n            \n            interface\n            ZipCodesState\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/disney-api/disney-api.model.ts\n            \n            interface\n            ResponseCharacter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/disney-api/disney-api.model.ts\n            \n            interface\n            ResponseCharacterList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/disney-api/disney-api.model.ts\n            \n            interface\n            ResponseData\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/models/disney-api/disney-api.model.ts\n            \n            interface\n            ResponseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/spotify-api/spotify-api.model.ts\n            \n            interface\n            AlbumResultItem\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/models/spotify-api/spotify-api.model.ts\n            \n            interface\n            AlbumSearchResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/spotify-api/spotify-api.model.ts\n            \n            interface\n            AlbumSearchResult\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/spotify-api/spotify-api.model.ts\n            \n            interface\n            ArtistResultItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/spotify-api/spotify-api.model.ts\n            \n            interface\n            ArtistResultItemBase\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/spotify-api/spotify-api.model.ts\n            \n            interface\n            ArtistSearchResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/spotify-api/spotify-api.model.ts\n            \n            interface\n            ArtistSearchResult\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/spotify-api/spotify-api.model.ts\n            \n            interface\n            ImageItemInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/spotify-api/spotify-api.model.ts\n            \n            interface\n            ResultSearchBase\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/spotify-api/spotify-api.model.ts\n            \n            interface\n            SearchValues\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/spotify-api/spotify-api.model.ts\n            \n            interface\n            SpotifySearchForm\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/spotify-api/spotify-api.model.ts\n            \n            interface\n            TypeOption\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/models/spotify-api/spotify-api.model.ts\n            \n            type alias\n            SearchType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/token/token.model.ts\n            \n            interface\n            TokenCheckInfo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/token/token.model.ts\n            \n            interface\n            TokenInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/token/token.model.ts\n            \n            interface\n            TokenStored\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/cat-dammings/cat-dammings.component.ts\n            \n            component\n            CatDammingsComponent\n            \n                0 %\n                (0/37)\n            \n        \n        \n            \n                \n                        src/app/pages/cat-dammings/cat-dammings.component.ts\n            \n            variable\n            TODOS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/cat-dammings/components/historic-chart/historic-chart.component.ts\n            \n            component\n            CatDammingsHistoricChartComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/cat-population/cat-population.component.ts\n            \n            component\n            CatPopulationComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/pages/disney-api/components/search-filter/search-filter.component.ts\n            \n            component\n            SearchFilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/disney-api/components/search-filter/search-filter.component.ts\n            \n            interface\n            SearchForm\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/disney-api/disney-api.component.ts\n            \n            component\n            DisneyAPIComponent\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/spotify-api/components/artist-album-data/artist-album-data.ts\n            \n            component\n            ArtistAlbumDataComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/pages/spotify-api/components/search-form/spotify-search-form.component.ts\n            \n            component\n            SpotifySearchFormComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/spotify-api/spotify-api.component.ts\n            \n            component\n            SpotifyAPIComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/pipes/join-postal-codes.pipe.ts\n            \n            pipe\n            JoinPostalCodesPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/breakpoint.service.ts\n            \n            injectable\n            BreakpointService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/cat-dammings.service.ts\n            \n            injectable\n            CatDammingsService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/cat-population.service.ts\n            \n            injectable\n            CatPopulationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/disney-api.service.ts\n            \n            injectable\n            DisneyAPIService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/services/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/mat-paginator-intl.service.ts\n            \n            injectable\n            CustomPaginatorIntl\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/spotify-api.service.ts\n            \n            injectable\n            SpotifyAPIService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/services/spotify-api.service.ts\n            \n            variable\n            TOKEN_STORE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/utils/external-link.util.ts\n            \n            function\n            goToExternalLink\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/utils/http-context.util.ts\n            \n            function\n            noCache\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/utils/http-context.util.ts\n            \n            function\n            spotifyRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/utils/http-context.util.ts\n            \n            variable\n            NO_CACHE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/utils/http-context.util.ts\n            \n            variable\n            SPOTIFY_REQUEST\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.0.1\n        \n            @angular/cdk : ^19.0.1\n        \n            @angular/common : ^19.0.1\n        \n            @angular/compiler : ^19.0.1\n        \n            @angular/core : ^19.0.1\n        \n            @angular/forms : ^19.0.1\n        \n            @angular/material : ^19.0.1\n        \n            @angular/platform-browser : ^19.0.1\n        \n            @angular/platform-browser-dynamic : ^19.0.1\n        \n            @angular/router : ^19.0.1\n        \n            chart.js : ^4.4.6\n        \n            ng2-charts : ^7.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            uuid : ^11.0.2\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PROVINCE_NAMES   (src/.../zip-codes.constants.ts)\n                        \n                        \n                            ROUTES_PATHS   (src/.../routes.constants.ts)\n                        \n                        \n                            SPECIAL_ZIP_CODES   (src/.../zip-codes.constants.ts)\n                        \n                        \n                            ZIP_CODES   (src/.../zip-codes.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/constants/cat-population/zip-codes.constants.ts\n    \n        \n            \n                \n                    \n                        \n                        PROVINCE_NAMES\n                    \n                \n                        \n                            \n                                 BARCELONA\n                            \n                        \n                        \n                            \n                                Value : Barcelona\n                            \n                        \n                        \n                            \n                                 TARRAGONA\n                            \n                        \n                        \n                            \n                                Value : Tarragona\n                            \n                        \n                        \n                            \n                                 LLEIDA\n                            \n                        \n                        \n                            \n                                Value : Lleida\n                            \n                        \n                        \n                            \n                                 GIRONA\n                            \n                        \n                        \n                            \n                                Value : Girona\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SPECIAL_ZIP_CODES\n                    \n                \n                        \n                            \n                                 NO_CONSTA\n                            \n                        \n                        \n                            \n                                Value : 99999\n                            \n                        \n                        \n                            \n                                 OTROS_DIVERSOS\n                            \n                        \n                        \n                            \n                                Value : 99998\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ZIP_CODES\n                    \n                \n                        \n                            \n                                 BARCELONA\n                            \n                        \n                        \n                            \n                                Value : 08\n                            \n                        \n                        \n                            \n                                 TARRAGONA\n                            \n                        \n                        \n                            \n                                Value : 43\n                            \n                        \n                        \n                            \n                                 LLEIDA\n                            \n                        \n                        \n                            \n                                Value : 25\n                            \n                        \n                        \n                            \n                                 GIRONA\n                            \n                        \n                        \n                            \n                                Value : 17\n                            \n                        \n                        \n                            \n                                 TREMP\n                            \n                        \n                        \n                            \n                                Value : 22\n                            \n                        \n            \n        \n\n    src/app/constants/routes.constants.ts\n    \n        \n            \n                \n                    \n                        \n                        ROUTES_PATHS\n                    \n                \n                        \n                            \n                                 HOME\n                            \n                        \n                        \n                            \n                                Value : home\n                            \n                        \n                        \n                            \n                                 DISNEY_API\n                            \n                        \n                        \n                            \n                                Value : disney-api\n                            \n                        \n                        \n                            \n                                 CAT_POPULATION\n                            \n                        \n                        \n                            \n                                Value : cat-population\n                            \n                        \n                        \n                            \n                                 SPOTIFY_API\n                            \n                        \n                        \n                            \n                                Value : spotify-api\n                            \n                        \n                        \n                            \n                                 CAT_DAMMINGS\n                            \n                        \n                        \n                            \n                                Value : cat-dammings\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cacheInterceptor   (src/.../cache.interceptor.ts)\n                        \n                        \n                            goToExternalLink   (src/.../external-link.util.ts)\n                        \n                        \n                            loadingInterceptor   (src/.../loading.interceptor.ts)\n                        \n                        \n                            noCache   (src/.../http-context.util.ts)\n                        \n                        \n                            spotifyRequest   (src/.../http-context.util.ts)\n                        \n                        \n                            tokenInterceptor   (src/.../token.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interceptors/cache.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cacheInterceptor\n                        \n                    \n                \n            \n            \n                \ncacheInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/utils/external-link.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        goToExternalLink\n                        \n                    \n                \n            \n            \n                \ngoToExternalLink(link: string)\n                \n            \n\n\n\n\n            \n                \n                        Navega a un enlace externo de la aplicación\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                link\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    url a navegar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/interceptors/loading.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadingInterceptor\n                        \n                    \n                \n            \n            \n                \nloadingInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/utils/http-context.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        noCache\n                        \n                    \n                \n            \n            \n                \nnoCache()\n                \n            \n\n\n\n\n            \n                \n                        Devuelve un contexto para no usar la caché de la aplicación en las peticiones http\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spotifyRequest\n                        \n                    \n                \n            \n            \n                \nspotifyRequest()\n                \n            \n\n\n\n\n            \n                \n                        Devuelve un contexto para indicar que una petición http es de la API de Spotify\n\n\n                \n            \n        \n    \n    src/app/interceptors/token.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tokenInterceptor\n                        \n                    \n                \n            \n            \n                \ntokenInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPruebas Material\nDiferentes utilidades para probar componentes y servicios de Angular Material (v.19)\nServidor de desarollo\nEjecutar el script npm start y navegar a http://localhost:4200/.\nDemo\nSe puede ver una demo pulsando aquí.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    34 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SearchType   (src/.../spotify-api.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/spotify-api/spotify-api.model.ts\n    \n    \n        \n            \n                \n                    \n                    SearchType\n                \n            \n            \n                \n                        \"album\" | \"artist\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            EXTERNAL_URL_SPOTIFY_KEY   (src/.../spotify-api.constants.ts)\n                        \n                        \n                            FILTER_PROVINCE_OPTIONS   (src/.../zip-codes.constants.ts)\n                        \n                        \n                            INITIAL_LIST_LIMIT   (src/.../spotify-api.constants.ts)\n                        \n                        \n                            INITIAL_LIST_OFFSET   (src/.../spotify-api.constants.ts)\n                        \n                        \n                            interceptors   (src/.../app.config.ts)\n                        \n                        \n                            NO_CACHE   (src/.../http-context.util.ts)\n                        \n                        \n                            ONE_DAY_MILISECONDS   (src/.../common.constants.ts)\n                        \n                        \n                            PAGE_SIZE_OPTIONS   (src/.../spotify-api.constants.ts)\n                        \n                        \n                            SPOTIFY_REQUEST   (src/.../http-context.util.ts)\n                        \n                        \n                            TITLES   (src/.../routes.constants.ts)\n                        \n                        \n                            TODOS   (src/.../cat-dammings.component.ts)\n                        \n                        \n                            TOKEN_STORE_KEY   (src/.../spotify-api.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideAnimationsAsync(),\n    provideHttpClient(withInterceptors(interceptors)),\n    provideCharts(withDefaultRegisterables()),\n    CacheService,\n    LoadingService,\n    BreakpointService,\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        subscriptSizing: 'dynamic',\n      },\n    },\n    {\n      provide: MatPaginatorIntl,\n      useClass: CustomPaginatorIntl,\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interceptors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  cacheInterceptor,\n  tokenInterceptor,\n  loadingInterceptor,\n]\n                    \n                \n\n\n        \n    \n\n    src/app/constants/spotify-api/spotify-api.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXTERNAL_URL_SPOTIFY_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'spotify'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INITIAL_LIST_LIMIT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INITIAL_LIST_OFFSET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PAGE_SIZE_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [10, 20, 30]\n                    \n                \n\n\n        \n    \n\n    src/app/constants/cat-population/zip-codes.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FILTER_PROVINCE_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    code: ZIP_CODES.BARCELONA,\n    name: PROVINCE_NAMES.BARCELONA,\n  },\n  {\n    code: ZIP_CODES.GIRONA,\n    name: PROVINCE_NAMES.GIRONA,\n  },\n  {\n    code: ZIP_CODES.LLEIDA,\n    name: PROVINCE_NAMES.LLEIDA,\n  },\n  {\n    code: ZIP_CODES.TARRAGONA,\n    name: PROVINCE_NAMES.TARRAGONA,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/utils/http-context.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NO_CACHE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPOTIFY_REQUEST\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n\n        \n    \n\n    src/app/constants/common.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ONE_DAY_MILISECONDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 86400000\n                    \n                \n\n\n        \n    \n\n    src/app/constants/routes.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TITLES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  [ROUTES_PATHS.HOME]: 'Inicio',\n  [ROUTES_PATHS.DISNEY_API]: 'Personajes de Disney',\n  [ROUTES_PATHS.SPOTIFY_API]: 'Artistas y albumes de Spotify',\n  [ROUTES_PATHS.CAT_POPULATION]: 'Población de Cataluña',\n  [ROUTES_PATHS.CAT_DAMMINGS]: 'Embalses de Cataluña',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/cat-dammings/cat-dammings.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TODOS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'todos'\n                    \n                \n\n\n        \n    \n\n    src/app/services/spotify-api.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TOKEN_STORE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'token'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
